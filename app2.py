from dotenv import load_dotenv
import os
import google.generativeai as genai
import base64
# Load environment variables
load_dotenv(dotenv_path="ANN.env")
api_key = os.getenv("GEMINI_API_KEY")
print("ЁЯФС Loaded GEMINI_API_KEY:", api_key)

if not api_key:
    raise ValueError("тЭМ GEMINI_API_KEY not found. Check your .env file or environment variables.")

# Configure Gemini
genai.configure(api_key=api_key)
gemini_model = genai.GenerativeModel(
    model_name="models/gemini-1.5-flash-latest",
    system_instruction=(
        "You are a friendly assistant for farmers using the AnnDoot AI app. "
        "Explain how to use features like disease detection, crop recommendation, and fertilizer guidance. "
        "Help users navigate to those pages if they ask."
)
)
from lime import lime_image
from skimage.segmentation import mark_boundaries
import matplotlib.pyplot as plt
from PIL import Image
import streamlit as st
import tensorflow as tf
import numpy as np
import pandas as pd
import pickle
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler, MinMaxScaler
import warnings
import cv2
import tempfile
import time  # Import the time module
from googletrans import Translator  # Import the Translator class
import speech_recognition as sr

def segment_leaf(image_array):
    import cv2
    import numpy as np
    hsv = cv2.cvtColor(image_array, cv2.COLOR_RGB2HSV)
    lower_green = np.array([25, 40, 40])
    upper_green = np.array([85, 255, 255])
    mask = cv2.inRange(hsv, lower_green, upper_green)
    kernel = np.ones((5, 5), np.uint8)
    mask = cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel)
    result = cv2.bitwise_and(image_array, image_array, mask=mask)
    return result


def recognize_voice_command():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        st.info("ЁЯОд Listening for voice input... Please speak clearly.")
        try:
            audio = recognizer.listen(source, timeout=50)
            st.info("ЁЯФД Recognizing...")
            command = recognizer.recognize_google(audio, language="hi-IN")
            command = recognizer.recognize_google(audio, language="en-IN")
            st.success(f"ЁЯЧгя╕П You said: {command}")
            return command
        except sr.UnknownValueError:
            st.warning("Sorry, could not understand the audio.")
        except sr.RequestError:
            st.error("Could not request results from Google Speech Recognition service.")
        except Exception as e:
            st.error(f"Voice input error: {e}")
    return ""

# --- Streamlit Page Config ---
st.set_page_config(
    page_title="AnnDoot AI",
    page_icon="ЁЯМ┐",
    layout="wide",
    initial_sidebar_state="expanded"
)

# тЬЕ Custom Sidebar Background Image
import base64

with open("A.jpeg", "rb") as img_file:
    encoded = base64.b64encode(img_file.read()).decode()

st.markdown(f"""
<style>
section[data-testid="stSidebar"] {{
    background-image: url("data:image/jpeg;base64,{encoded}");
    background-size: cover;
    background-position: top center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    color: white;
}}
</style>
""", unsafe_allow_html=True)



warnings.filterwarnings('ignore')

# --- 0. Disease Class Names ---
disease_class_names = [
    'Apple___Apple_scab',
    'Apple___Black_rot',
    'Apple___Cedar_apple_rust',
    'Apple___healthy',
    'Blueberry___healthy',
    'Cherry_(including_sour)___Powdery_mildew',
    'Cherry_(including_sour)___healthy',
    'Corn_(maize)___Cercospora_leaf_spot Gray_leaf_spot',
    'Corn_(maize)___Common_rust_',
    'Corn_(maize)___Northern_Leaf_Blight',
    'Corn_(maize)___healthy',
    'Grape___Black_rot',
    'Grape___Esca_(Black_Measles)',
    'Grape___Leaf_blight_(Isariopsis_Leaf_Spot)',
    'Grape___healthy',
    'Orange___Haunglongbing_(Citrus_greening)',
    'Peach___Bacterial_spot',
    'Peach___healthy',
    'Pepper,_bell___Bacterial_spot',
    'Pepper,_bell___healthy',
    'Potato___Early_blight',
    'Potato___Late_blight',
    'Potato___healthy',
    'Raspberry___healthy',
    'Soybean___healthy',
    'Squash___Powdery_mildew',
    'Strawberry___Leaf_scorch',
    'Strawberry___healthy',
    'Tomato___Bacterial_spot',
    'Tomato___Early_blight',
    'Tomato___Late_blight',
    'Tomato___Leaf_Mold',
    'Tomato___Septoria_leaf_spot',
    'Tomato___Spider_mites Two-spotted_spider_mite',
    'Tomato___Target_Spot',
    'Tomato___Tomato_Yellow_Leaf_Curl_Virus',
    'Tomato___Tomato_mosaic_virus',
    'Tomato___healthy'
]

# Treatment rules dictionary
treatment_rules = {
    'Apple___Apple_scab': {
    'en': {'default': 'Chemical: Apply a fungicide containing captan or mancozeb. Organic: Improve air circulation, remove fallen leaves.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреИрдкреНрдЯрди рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВ, рдЧрд┐рд░реЗ рд╣реБрдП рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНржпрж╛ржкржЯрзЗржи ржмрж╛ ржорзНржпрж╛ржиржХрзЛржЬрзЗржмржпрзБржХрзНржд ржПржХржЯрж┐ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржи, ржкржбрж╝рзЗ ржпрж╛ржУржпрж╝рж╛ ржкрж╛рждрж╛ рж╕рж░рж╛ржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлЗрккрлНркЯрки ркЕркерк╡рк╛ ркорлЗркиркХрлЛркЭрлЗркм ркзрк░рк╛рк╡ркдрк╛ рклрлВркЧркирк╛рк╢ркХркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: рк╣рк╡рк╛ рккрлНрк░рк╡рк╛рк╣ рк╕рлБркзрк╛рк░рлЛ, рккркбрлЗрк▓рк╛ рккрк╛рки ркжрлВрк░ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓пр▓╛р▓кр│Нр▓Яр▓ир│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Жр▓Вр▓Хр│Кр▓Ьр│Жр▓мр│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓Ер▓ир│Нр▓╡р▓пр▓┐р▓╕р▓┐. р▓Ьр│Ир▓╡р▓┐р▓Х: р▓Чр▓╛р▓│р▓┐ р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐, р▓мр▓┐р▓жр│Нр▓ж р▓Ор▓▓р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤пр┤╛р┤кр╡Нр┤▒р╡Нр┤▒р╡║ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор┤╛р╡╗р┤Хр╡Лр┤╕р╡Жр┤мр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ур╡╝р┤Чр┤╛р┤ир┤┐р┤Хр╡Н: р┤╡р┤╛р┤пр╡Бр┤╡р┤┐р┤ир╡Нр┤▒р╡Ж р┤╕р┤Юр╡Нр┤Ър┤╛р┤░р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х, р┤╡р╡Ар┤г р┤Зр┤▓р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЕрдкреНрдЯрди рдХрд┐рдВрд╡рд╛ рдордБрдХреЛрдЭреЗрдм рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛, рдкрдбрд▓реЗрд▓реА рдкрд╛рдиреЗ рдХрд╛рдврд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрдпрд╛рдкреНрдЯрди рд╡рд╛ рдореНрдпрд╛рдирдХреЛрдЬреЗрдм рднрдПрдХреЛ рдХреАрдЯрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╣рд╛рд╡рд╛ рд╕рдЮреНрдЪрд╛рд░ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рдЭрд░реЗрдХрд╛ рдкрд╛рддрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрнЯрм╛рмкрнНрмЯрми рмХрм┐рморнНрммрм╛ рморнНрнЯрм╛рмирмХрнЛрмЬрнЗрмм рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рм╛рмЧрнБ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рммрм╛рнЯрнБ рмЪрм╛рм│рмирм╛ рм╕рнБрмзрм╛рм░рмирнНрмдрнБ, рмкрмбрм╝рм┐рмерм┐рммрм╛ рмкрмдрнНрм░ рм╣рмЯрм╛рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: риХрйИрикриЯрии риЬри╛риВ риорйИриириХрйЛриЬри╝рйИрим ри╡ри╛ри▓рйА рилрилрйВрй░рижрйАриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╣ри╡ри╛ рижри╛ ри╕рй░риЪри╛ри░ ри╕рйБризри╛ри░рйЛ, рибри┐рй▒риЧрйЗ рикрй▒ридрйЗ ри╣риЯри╛риУред'},
    'ta': {'default': 'роЗро░роЪро╛ропройроорпН: роХрпЗрокрпНроЯройрпН роЕро▓рпНро▓родрпБ роорпЗройрпНроХрпЛроЪрпЖрокрпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН. роЗропро▒рпНроХрпИ: роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН, ро╡ро┐ро┤рпБроирпНрод роЗро▓рпИроХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░и: р░Хр▒Нр░пр░╛р░кр▒Нр░Яр░╛р░ир▒Н р░▓р▒Зр░жр░╛ р░ор▒Нр░пр░╛р░Вр░Хр▒Лр░Ьр▒Жр░мр▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р░╛р░бр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐, р░кр░бр░┐ р░Йр░ир▒Нр░и р░Жр░Хр▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘╛┘╣┘Ж █М╪з ┘Е█М┘Ж┌й┘И╪▓█М╪и ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│ ┌й╪┤ ┘Д┌п╪з╪ж█М┌║█Ф ╪н█М╪з╪к█М╪з╪к█М: █Б┘И╪з ┌й█М ┘Ж┌й╪з╪│█М ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║╪М ┌п╪▒█Т █Б┘И╪ж█Т ┘╛╪к█Т █Б┘╣╪з ╪п█М┌║█Ф'}
},
    'Apple___Black_rot': {
       'en': {'default': 'Chemical: Prune infected branches. Use a fungicide containing copper or myclobutanil. Organic: Remove mummified fruit, improve drainage.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рд╢рд╛рдЦрд╛рдУрдВ рдХреЛ рдЫрд╛рдБрдЯреЗрдВред рдХреЙрдкрд░ рдпрд╛ рдорд╛рдпрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ: рдордореАрдХреГрдд рдлрд▓реЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рдЬрд▓ рдирд┐рдХрд╛рд╕реА рдореЗрдВ рд╕реБрдзрд╛рд░ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: рж╕ржВржХрзНрж░ржорж┐ржд рж╢рж╛ржЦрж╛ржЧрзБрж▓рж┐ ржЫрж╛ржБржЯрж╛ржЗ ржХрж░рзБржиред ржХржкрж╛рж░ ржмрж╛ ржорж╛ржЗржХрзНрж▓рзЛржмрзБржЯрж╛ржирж┐рж▓ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржоржорж┐ ржХрж░рж╛ ржлрж▓ рж╕рж░рж╛ржи, ржирж┐рж╖рзНржХрж╛рж╢ржи ржЙржирзНржиржд ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд рк╢рк╛ркЦрк╛ркУркирлЗ ркХрк╛рккрлЛ. ркдрк╛ркВркмрлБркВ ркЕркерк╡рк╛ ркорк╛ркЗркХрлНрк▓рлЛркмрлНркпрлБркЯрк╛ркирк┐рк▓ ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк╡рк╛рккрк░рлЛ. ркЬрлИрк╡рк┐ркХ: ркоркорлНркорлАрклрк╛ркЗркб рклрк│рлЛ ркжрлВрк░ ркХрк░рлЛ, ркбрлНрк░рлЗркирлЗркЬ рк╕рлБркзрк╛рк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Хр│Кр▓Вр▓мр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓Хр▓др│Нр▓др▓░р▓┐р▓╕р▓┐. р▓др▓╛р▓ор│Нр▓░ р▓Ер▓ер▓╡р▓╛ р▓ор│Ир▓Хр│Нр▓▓р│Лр▓мр│Бр▓Яр▓╛р▓ир▓┐р▓▓р│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐. р▓Ьр│Ир▓╡р▓┐р▓Х: р▓ор▓ор│Нр▓ор│Ар▓Хр▓░р▓┐р▓╕р▓┐р▓ж р▓╣р▓гр│Нр▓гр│Бр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓ир│Ар▓░р▓┐р▓и р▓Хр▓╛р▓▓р│Бр▓╡р│Ж р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤мр┤╛р┤зр┤┐р┤др┤пр┤╛р┤п р┤╢р┤╛р┤Цр┤Хр┤│р╡НтАН р┤др╡Жр┤▒р╡Бр┤Хр╡Нр┤Хр╡Бр┤Х. р┤Хр╡Лр┤кр╡Нр┤кр┤░р╡НтАН р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р┤▓р╡НтАН р┤ор╡Ир┤Хр╡Нр┤▓р╡Лр┤мр╡Нр┤пр╡Вр┤Яр╡Нр┤Яр┤╛р┤ир┤┐р┤▓р╡НтАН р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ур┤░р╡НтАНр┤Чр┤╛р┤ир┤┐р┤Хр╡Н: р┤ор┤ор╡Нр┤ор┤┐р┤лр╡Ир┤бр╡Н р┤лр┤▓р┤Щр╡Нр┤Щр┤│р╡НтАН р┤ир╡Ар┤Хр╡Нр┤Хр┤Вр┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤ир┤┐р┤Хр╡Нр┤╖р╡Зр┤кр┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдлрд╛рдВрджреНрдпрд╛ рдЫрд╛рдЯрд╛рд╡реНрдпрд╛рдд. рдХреЙрдкрд░ рдХрд┐рдВрд╡рд╛ рдорд╛рдпрдХреЛрдмреНрдпреВрдЯрд╛рдирд┐рд▓ рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рдордореА рдХреЗрд▓реЗрд▓реЗ рдлрд│реЗ рдХрд╛рдврд╛, рдирд┐рдЪрд░рд╛ рд╕реБрдзрд╛рд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рд╣рд╛рдБрдЧрд╛ рдХрд╛рдЯреНрдиреБрд╣реЛрд╕реНред рдХрдкрд░ рд╡рд╛ рдорд╛рдпрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рднрдПрдХреЛ рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рдордореА рднрдПрдХрд╛ рдлрд▓рд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рдЬрд▓ рдирд┐рдХрд╛рд╕реА рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рм╢рм╛рмЦрм╛рморм╛рмирнЗ рмХрм╛рмЯрмирнНрмдрнБред рмХрмкрм░ рмХрм┐рморнНрммрм╛ рморм╛рмЗрмХрнНрм▓рнЛрммрнБрмЯрм╛рмирм┐рм▓рнН рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рморморм┐ рм╣рнЛрмЗрмерм┐рммрм╛ рмлрм│ рм╣рмЯрм╛рмирнНрмдрнБ, рмирм┐рм╖рнНрмХрм╛рм╢рми рммрнНрнЯрммрм╕рнНрмерм╛ рм╕рнБрмзрм╛рм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: ри╕рй░риХрйНри░риори┐рид риЯри╛ри╣ригрйАриЖриВ риирйВрй░ риХрй▒риЯрйЛред ридри╛риВримрйЗ риЬри╛риВ риори╛риЗриХри▓рйЛримри┐риКриЯрйИриири┐ри▓ ри╡ри╛ри▓рйА рилрилрйВрй░рижрйАриири╛ри╕ри╝риХ ри╡ри░ридрйЛред риЬрйИри╡ри┐риХ: риориорйА римригрйЗ рилри▓ ри╣риЯри╛риУ, риири┐риХри╛ри╕рйА ри╕рйБризри╛ри░рйЛред'},
    'ta': {'default': 'роЗро░роЪро╛ропройроорпН: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роХро┐ро│рпИроХро│рпИ ро╡рпЖроЯрпНроЯрпБроЩрпНроХро│рпН. роХро╛рокрпНрокро░рпН роЕро▓рпНро▓родрпБ роорпИроХрпНро│рпЛрокрпБроЯройро┐ро▓рпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН. роЗропро▒рпНроХрпИ: роороорпНрооро┐ропро╛роХрпНроХрокрпНрокроЯрпНроЯ рокро┤роЩрпНроХро│рпИ роЕроХро▒рпНро▒рпБроЩрпНроХро│рпН, ро╡роЯро┐роХро╛ро▓рпН ро╡роЪродро┐ропрпИ роорпЗроорпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░и: р░╕р░Вр░Хр▒Нр░░р░ор░┐р░д р░Хр▒Кр░ор▒Нр░ор░▓р░ир▒Б р░Хр░др▒Нр░др░┐р░░р░┐р░Вр░Ър░Вр░бр░┐. р░Хр░╛р░кр░░р▒Н р░▓р▒Зр░жр░╛ р░ор▒Ир░Хр▒Нр░▓р▒Лр░мр▒Нр░пр▒Вр░Яр░╛р░ир░┐р░▓р▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░ор░ор▒Нр░ор▒Ар░▓р░╛ р░ор░╛р░░р░┐р░и р░кр░Вр░бр▒Нр░▓р░ир▒Б р░др▒Ар░╕р░┐р░╡р▒Зр░пр░Вр░бр░┐, р░ир▒Ар░Яр░┐ р░ир░┐р░╖р▒Нр░Хр▒Нр░░р░ор░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┘Е╪к╪з╪л╪▒█Б ╪┤╪з╪о┘И┌║ ┌й┘И ╪к╪▒╪з╪┤█М┌║█Ф ╪к╪з┘Ж╪и█Т █М╪з ┘Е╪з╪ж█М┌й┘Д┘И╪и█М┘И┘╣╪з┘Ж┘Д ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│ ┌й╪┤ ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ╪н█М╪з╪к█М╪з╪к█М: ┘Е┘Е█М ╪┤╪п█Б ┘╛┌╛┘Д █Б┘╣╪з ╪п█М┌║╪М ┘Ж┌й╪з╪│█М ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║█Ф'}
},

    
    'Apple___Cedar_apple_rust': {
    'en': {'default': 'Chemical: Remove cedar trees within a certain radius. Apply a fungicide like myclobutanil or propiconazole. Organic: Remove galls from cedar trees.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдХ рдирд┐рд╢реНрдЪрд┐рдд рджрд╛рдпрд░реЗ рдХреЗ рднреАрддрд░ рджреЗрд╡рджрд╛рд░ рдХреЗ рдкреЗрдбрд╝реЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВред рдорд╛рдпрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рдпрд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рдЬреИрд╕реЗ рдХрд╡рдХрдирд╛рд╢реА рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ: рджреЗрд╡рджрд╛рд░ рдХреЗ рдкреЗрдбрд╝реЛрдВ рд╕реЗ рдкрд┐рддреНрдд рдХреЛ рд╣рдЯрд╛ рджреЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржкрж░рж┐рж╕рж░рзЗрж░ ржоржзрзНржпрзЗ рж╕рж┐ржбрж╛рж░ ржЧрж╛ржЫржЧрзБрж▓рж┐ рж╕рж░рж╛ржиред ржорж╛ржЗржХрзНрж▓рзЛржмрзБржЯрж╛ржирж┐рж▓ ржмрж╛ ржкрзНрж░рзЛржкрж┐ржХрзЛржирж╛ржЬрзЛрж▓ ржЬрж╛рждрзАржпрж╝ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: рж╕рж┐ржбрж╛рж░ ржЧрж╛ржЫ ржерзЗржХрзЗ ржЧрж▓рж╕ рж╕рж░рж╛ржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркирк┐рк╢рлНркЪрк┐ркд ркжрлЛрк░рк╛ркорк╛ркВ ркЖрк╡рлЗрк▓рк╛ рк╕рлАркбрк░ ркЭрк╛ркбрлЛ ркжрлВрк░ ркХрк░рлЛ. ркорк╛ркЗркХрлНрк▓рлЛркмрлНркпрлБркЯрк╛ркирк┐рк▓ ркЕркерк╡рк╛ рккрлНрк░рлЛрккрк┐ркХрлЛркирк╛ркЭрлЛрк▓ ркЬрлЗрк╡рк╛ рклрлВркЧркирк╛рк╢ркХркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: рк╕рлАркбрк░ ркЭрк╛ркбркорк╛ркВркерлА ркЧрлЛрк▓рлНрк╕ ркжрлВрк░ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓ир▓┐р▓░р│Нр▓жр▓┐р▓╖р│Нр▓Я р▓╡р│Нр▓пр▓╛р▓кр│Нр▓др▓┐р▓пр│Кр▓│р▓Чр▓┐р▓и р▓╕р│Ар▓бр▓░р│Н р▓ор▓░р▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐. р▓ор│Ир▓Хр│Нр▓▓р│Лр▓мр│Бр▓Яр▓╛р▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓кр│Нр▓░р│Кр▓кр▓┐р▓Хр│Кр▓ир▓╛р▓Ьр│Лр▓▓р│Н р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓Ър│Нр▓Ър▓┐. р▓Ьр│Ир▓╡р▓┐р▓Х: р▓╕р│Ар▓бр▓░р│Н р▓ор▓░р▓Чр▓│р▓┐р▓Вр▓ж р▓Чр▓╛р▓▓р│НтАМр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤ир┤┐р╡╝р┤жр╡Нр┤жр┤┐р┤╖р╡Нр┤Я р┤кр┤░р┤┐р┤зр┤┐р┤пр┤┐р╡╜ р┤╕р╡Ар┤бр┤╛р╡╝ р┤ор┤░р┤Щр╡Нр┤Щр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х. р┤ор╡Ир┤Хр╡Нр┤▓р╡Лр┤мр╡Нр┤пр╡Вр┤Яр╡Нр┤Яр┤╛р┤ир┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р╡Кр┤кр┤┐р┤Хр╡Нр┤Хр╡Лр┤ир┤╛р┤╕р╡Лр╡╛ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ур╡╝р┤Чр┤╛р┤ир┤┐р┤Хр╡Н: р┤╕р╡Ар┤бр┤╛р╡╝ р┤ор┤░р┤Щр╡Нр┤Щр┤│р┤┐р╡╜ р┤ир┤┐р┤ир╡Нр┤ир╡Бр┤│р╡Нр┤│ р┤Чр┤╛р╡╛р┤╕р╡Н р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдХрд╛ рд╡рд┐рд╢рд┐рд╖реНрдЯ рдкрд░рд┐рдШрд╛рддреАрд▓ рджреЗрд╡рджрд╛рд░рд╛рдЪреА рдЭрд╛рдбреЗ рдХрд╛рдврд╛. рдорд╛рдпрдХреЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдкреНрд░реЙрдкрд┐рдХреЛрдиреЕрдЭреЛрд▓ рдпрд╛рдВрд╕рд╛рд░рдЦреНрдпрд╛ рдмреБрд░рд╢реАрдирд╛рд╢рдХрд╛рдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рджреЗрд╡рджрд╛рд░рд╛рдЪреНрдпрд╛ рдЭрд╛рдбрд╛рдВрд╡рд░реАрд▓ рдЧрд╛рдареА рдХрд╛рдврд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддреЛрдХрд┐рдПрдХреЛ рдХреНрд╖реЗрддреНрд░рднрд┐рддреНрд░ рд░рд╣реЗрдХрд╛ рд╕рд┐рдбрд╛рд░рдХрд╛ рд░реБрдЦ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реНред рдорд╛рдЗрдХреНрд░реЛрдмреБрдЯрд╛рдирд┐рд▓ рд╡рд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рднрдПрдХреЛ рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╕рд┐рдбрд╛рд░рдХрд╛ рд░реБрдЦрдмрд╛рдЯ рдЧрд▓реНрд▓рд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмПрмХ рмирм┐рм░рнНрмжрнНрмзрм┐рм╖рнНрмЯ рмкрм░рм┐рм╕рм░ рмормзрнНрнЯрм░рнЗ рм╕рм┐рмбрм╛рм░ рмЧрмЫрмЧрнБрмбрм┐рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБред рморм╛рмЗрмХрнНрм▓рнЛрммрнБрмЯрм╛рмирм┐рм▓рнН рмХрм┐рморнНрммрм╛ рмкрнНрм░рнЛрмкрм┐рмХрнЛрмирм╛рмЬрнЛрм▓рнН рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рм╛рмЧрнБ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм╕рм┐рмбрм╛рм░ рмЧрмЫрм░рнБ рмЧрм▓рнНрм╕рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: риири┐ри╢риЪри┐рид рижри╛риЗри░рйЗ ри╡ри┐рй▒риЪ ри╕рйАрибри░ рижрйЗ рижри░рй▒риЦридри╛риВ риирйВрй░ ри╣риЯри╛риУред риори╛риИриХри▓рйЛримри┐риКриЯри╛риири┐ри▓ риЬри╛риВ рикрйНри░рйЛрикри┐риХрйЛриири╛риЬрйЛри▓ ри╡ри░риЧрйЗ рилрилрйВрй░рижрйАриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╕рйАрибри░ рижрйЗ рижри░рй▒риЦридри╛риВ ридрйЛриВ риЧри╛ри▓риЬри╝ ри╣риЯри╛риУред'},
    'ta': {'default': 'роЗро░роЪро╛ропройроорпН: роХрпБро▒ро┐рокрпНрокро┐роЯрпНроЯ роЪрпБро▒рпНро▒ро│ро╡ро┐ро▓рпН роЙро│рпНро│ роЪро┐роЯро╛ро░рпН рооро░роЩрпНроХро│рпИ роЕроХро▒рпНро▒рпБроЩрпНроХро│рпН. роорпИроХрпНро▓рпЛрокро┐ропрпВроЯрпНроЯро╛ройро┐ро▓рпН роЕро▓рпНро▓родрпБ рокро┐ро░рпЛрокрпНрокро┐роХрпЛройро╛роЪрпЛро▓рпН рокрпЛройрпНро▒ рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН. роЗропро▒рпНроХрпИ: роЪро┐роЯро╛ро░рпН рооро░роЩрпНроХро│ро┐ро▓рпН роЗро░рпБроирпНродрпБ роЙро░рпЛроороЩрпНроХро│рпИ роЕроХро▒рпНро▒рпБроЩрпНроХро│рпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░и: р░ир░┐р░░р▒Нр░жр░┐р░╖р▒Нр░Я р░кр░░р░┐р░зр░┐р░▓р▒Л р░Йр░ир▒Нр░и р░╕р▒Ар░бр░╛р░░р▒Н р░Ър▒Жр░Яр▒Нр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐. р░ор▒Ир░Хр▒Нр░▓р▒Лр░мр▒Нр░пр▒Вр░Яр░╛р░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░кр▒Нр░░р▒Лр░кр░┐р░Хр▒Лр░ир░╛р░Ьр▒Лр░▓р▒Н р░╡р░Вр░Яр░┐ р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р▒Зр░пр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░╕р▒Ар░бр░╛р░░р▒Н р░Ър▒Жр░Яр▒Нр░▓ р░ир▒Бр░Вр░бр░┐ р░Чр░╛р░▓р▒Нр░╕р▒НтАМр░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┘Е╪о╪╡┘И╪╡ ╪н╪п ┌й█Т ╪з┘Ж╪п╪▒ ╪п█М┘И╪п╪з╪▒ ┌й█Т ╪п╪▒╪о╪к █Б┘╣╪з ╪п█М┌║█Ф ┘Е╪з╪ж█М┌й┘Д┘И╪и█М┘И┘╣╪з┘Ж┘Д █М╪з ┘╛╪▒┘И┘╛█М┌й┘И┘Ж╪з╪▓┘И┘Д ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│ ┌й╪┤ ┘Д┌п╪з╪ж█М┌║█Ф ╪н█М╪з╪к█М╪з╪к█М: ╪п█М┘И╪п╪з╪▒ ┌й█Т ╪п╪▒╪о╪к┘И┌║ ╪│█Т ┌п╪з┘Д╪▓ ┘Ж┌й╪з┘Д ╪п█М┌║█Ф'}
},

    'Apple___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Жр▓п р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤пр┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░ рдЖрд╡рд╢реНрдпрдХ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВ ри╣рйИред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},

'Blueberry___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Жр▓п р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤пр┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░ рдЖрд╡рд╢реНрдпрдХ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВ ри╣рйИред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},

    'Cherry_(including_sour)___Powdery_mildew': {
    'en': {'default': 'Chemical: Apply a fungicide containing myclobutanil or sulfur. Organic: Improve air circulation, use neem oil.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдорд╛рдпрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рдпрд╛ рд╕рд▓реНрдлрд░ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВ, рдиреАрдо рдХреЗ рддреЗрд▓ рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржорж╛ржЗржХрзНрж▓рзЛржмрзБржЯрж╛ржирж┐рж▓ ржмрж╛ рж╕рж╛рж▓ржлрж╛рж░ ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржи, ржирж┐ржо рждрзЗрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркорк╛ркЗркХрлНрк▓рлЛркмрлНркпрлБркЯрк╛ркирк┐рк▓ ркЕркерк╡рк╛ рк╕рк▓рлНрклрк░ ркзрк░рк╛рк╡ркдрлЛ рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк╣рк╡рк╛ рккрлНрк░рк╡рк╛рк╣ рк╕рлБркзрк╛рк░рлЛ, ркирлАрко ркдрлЗрк▓ рк╡рк╛рккрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓ор│Ир▓Хр│Нр▓▓р│Лр▓мр│Бр▓Яр▓╛р▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓╕р▓▓р│Нр▓лр▓░р│Н р▓Тр▓│р▓Чр│Кр▓Вр▓б р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓Ър│Нр▓Ър▓┐. р▓Ьр│Ир▓╡р▓┐р▓Х: р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐, р▓ир│Ар▓ор│Н р▓Ор▓гр│Нр▓гр│Ж р▓мр▓│р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤ор╡Ир┤Хр╡Нр┤▓р╡Лр┤мр╡Нр┤пр╡Вр┤Яр╡Нр┤Яр┤╛р┤ир┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤╕р╡╛р┤лр╡╝ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤В: р┤╡р┤╛р┤пр╡Б р┤╕р┤Юр╡Нр┤Ър┤╛р┤░р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х, ╨╜╨╕╨╝ р┤Ор┤гр╡Нр┤г р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдорд╛рдпрдХреНрд▓реЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рд╕рд▓реНрдлрд░ рдпреБрдХреНрдд рдмреБрд░рд╢реАрдирд╛рд╢рдХ рдлрд╡рд╛рд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛, рдиреАрдо рддреЗрд▓ рд╡рд╛рдкрд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдорд╛рдЗрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рд╡рд╛ рд╕рд▓реНрдлрд░ рднрдПрдХреЛ рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╣рд╛рд╡рд╛ рд╕рдЮреНрдЪрд╛рд░ рд╕реБрдзрд╛рд░реНрдиреБрд╣реЛрд╕реН, рдирд┐рдо рддреЗрд▓ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рморм╛рмЗрмХрнНрм▓рнЛрммрнБрмЯрм╛рмирм┐рм▓рнН рмХрм┐рморнНрммрм╛ рм╕рм▓рмлрм░рнН рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рммрм╛рнЯрнБ рмкрнНрм░рммрм╛рм╣ рм╕рнБрмзрм╛рм░рмирнНрмдрнБ, рмирм┐рмо рмдрнЗрм▓ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: риори╛риЗриХри▓рйЛримри┐риКриЯри╛риири┐ри▓ риЬри╛риВ риЧрй░ризриХ ри╡ри╛ри▓рйА рилрилрйВрй░рижрйАриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╣ри╡ри╛ рижрйЗ ри╕рй░риЪри╛ри░ риирйВрй░ ри╕рйБризри╛ри░рйЛ, риирйАрио рижрйЗ ридрйЗри▓ рижрйА ри╡ри░ридрйЛриВ риХри░рйЛред'},
    'ta': {'default': 'роЗро░роЪро╛ропройроорпН: роорпИроХрпНро▓рпЛрокро┐ропрпВроЯрпНроЯро╛ройро┐ро▓рпН роЕро▓рпНро▓родрпБ роЪро▓рпНрокро░рпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН. роЗропро▒рпНроХрпИ: роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН, ро╡рпЗрокрпНрокрпЖрогрпНрогрпЖропрпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░и: р░ор▒Ир░Хр▒Нр░▓р▒Лр░мр▒Нр░пр▒Вр░Яр░╛р░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░╕р░▓р▒Нр░лр░░р▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р▒Зр░пр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░Чр░╛р░▓р▒А р░кр▒Нр░░р░╡р░╛р░╣р░╛р░ир▒Нр░ир░┐ р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐, р░╡р▒Зр░к р░ир▒Вр░ир▒Жр░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┘Е╪з╪ж█М┌й┘Д┘И╪и█М┘И┘╣╪з┘Ж┘Д █М╪з ╪│┘Д┘Б╪▒ ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│ ┌й╪┤ ┘Д┌п╪з╪ж█М┌║█Ф ╪н█М╪з╪к█М╪з╪к█М: █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ┌й┘И ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║╪М ┘Ж█М┘Е ┌й╪з ╪к█М┘Д ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф'}
},

    'Cherry_(including_sour)___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Жр▓п р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤пр┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░ рдЖрд╡рд╢реНрдпрдХ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВ ри╣рйИред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},

    'Corn_(maize)___Cercospora_leaf_spot Gray_leaf_spot': {
        'en': {'default': 'Chemical: Apply a fungicide containing azoxystrobin or propiconazole. Organic: Crop rotation, improve drainage.',},
        'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдЬрд╝реЛрдХреНрд╕реАрд╕реНрдЯреНрд░реЛрдмрд┐рди рдпрд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рдлрд╕рд▓ рдЪрдХреНрд░рдг, рдЬрд▓ рдирд┐рдХрд╛рд╕реА рдореЗрдВ рд╕реБрдзрд╛рд░ рдХрд░реЗрдВред',},
        'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржЕрзНржпрж╛ржЬржХрзНрж╕рж┐рж╕рзНржЯрзНрж░рзЛржмрж┐ржи ржмрж╛ ржкрзНрж░рзЛржкрж┐ржХрзЛржирж╛ржЬрзЛрж▓ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржлрж╕рж▓ ржкрж░рзНржпрж╛ржпрж╝ржХрзНрж░ржорзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи, ржирж┐рж╖рзНржХрж╛рж╢ржи ржЙржирзНржиржд ржХрж░рзБржиред'},
        'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркПркЭрлЛркХрлНрк╕рк┐рк╕рлНркЯрлНрк░рлЛркмрк┐рки ркЕркерк╡рк╛ рккрлНрк░рлЛрккрк┐ркХрлЛркирк╛ркЭрлЛрк▓ ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рккрк╛ркХ рклрлЗрк░рклрк╛рк░ ркХрк░рлЛ, ркирк┐ркХрк╛рк╕ рк╕рлБркзрк╛рк░рлЛ.'},
        'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Ер▓Ьр▓╛р▓Хр│Нр▓╕р▓┐р▓╕р│Нр▓Яр│Нр▓░р│Лр▓мр▓┐р▓ир│Н р▓Ер▓ер▓╡р▓╛ р▓кр│Нр▓░р│Кр▓кр▓┐р▓Хр│Кр▓ир▓╛р▓Ьр│Лр▓▓р│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Х р▓╣р▓Ър│Нр▓Ър▓┐. р▓Ьр│Ир▓╡р▓┐р▓Х: р▓мр│Жр▓│р│Ж р▓кр▓░р▓┐р▓╡р▓░р│Нр▓др▓ир│Ж р▓ор▓╛р▓бр▓┐, р▓ир│Ар▓░р│Б р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
        'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ер┤╕р╡Лр┤Хр╡Нр┤╕р┤┐р┤╕р╡НтАМр┤Яр╡Нр┤░р╡Лр┤мр┤┐р╡╗ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р╡Кр┤кр┤┐р┤Хр╡Лр┤гр┤╛р┤╕р╡Лр╡╛ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤В: р┤╡р┤┐р┤│р┤кр┤░р┤┐р┤╖р╡Нр┤Хр┤░р┤гр┤В р┤ир┤Яр┤др╡Нр┤др╡Бр┤Х, р┤╡р┤╛р┤пр╡Б р┤Тр┤┤р╡Бр┤Хр╡Нр┤Хр╡Н р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
        'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдЕрдЭреЙрдХреНрд╕реАрд╕реНрдЯреНрд░реЛрдмрд┐рди рдХрд┐рдВрд╡рд╛ рдкреНрд░реЙрдкрд┐рдХреЛрдиреЕрдЭреЛрд▓ рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рдкрд┐рдХрд╛рдВрдЪреА рдлреЗрд░рдлрд╛рд░ рдХрд░рд╛, рдирд┐рдЪрд░рд╛ рд╕реБрдзрд╛рд░рд╛рд╡рд╛.'},
        'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдЬреЛрдХреНрд╕рд┐рд╕реНрдЯреЛрдмрд┐рди рд╡рд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рднрдПрдХреЛ рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рдмрд╛рд▓реА рдкрд░рд┐рд╡рд░реНрддрди рдЧрд░реНрдиреБрд╣реЛрд╕реН, рдирд┐рдХрд╛рд╕ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
        'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмПрмЬрнЛрмХрнНрм╕рм┐рм╕рнНрмЯрнНрм░рнЛрммрм┐рмирнН рмХрм┐рморнНрммрм╛ рмкрнНрм░рнЛрмкрм┐рмХрнЛрмирм╛рмЬрнЛрм▓рнН рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рмЪрм╛рм╖ рмкрм░рм┐рммрм░рнНрмдрнНрмдрми рмХрм░рмирнНрмдрнБ, рмирм┐рмХрм╛рм╕ рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБред'},
        'pa': {'default': 'ри░ри╕ри╛риЗригриХ: риРриЬрйЛриХри╕рйАри╕риЯрйНри░рйЛримри┐рии риЬри╛риВ рикрйНри░рйЛрикрйАриХрйЛриири╛риЬрйЛри▓ ри╡ри╛ри▓рйА рилрилрйВрй░рижрйАриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: рилри╕ри▓ри╛риВ рижрйА ри░рйЛриЯрйЗри╕ри╝рии риХри░рйЛ, риири┐риХри╛ри╕рйА ри╕рйБризри╛ри░рйЛред'},
        'ta': {'default': 'роЗро░роЪро╛ропройроорпН: роЕроЪрпЛроХрпНро╕ро┐ро╕рпНроЯрпНро░рпЛрокро┐ройрпН роЕро▓рпНро▓родрпБ рокро┐ро░рпКрокро┐роХрпКройро╛роЪрпЛро▓рпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роЗропро▒рпНроХрпИ: рокропро┐ро░рпН роЪрпБро┤ро▒рпНроЪро┐ рокро┐ройрпНрокро▒рпНро▒ро╡рпБроорпН, роирпАро░рпНроиро┐ро▓рпИропрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
        'te': {'default': 'р░░р░╕р░╛р░пр░и: р░Ер░Ьр░╛р░Хр▒Нр░╕р░┐р░╕р▒Нр░Яр▒Нр░░р▒Лр░мр░┐р░ир▒Н р░▓р▒Зр░жр░╛ р░кр▒Нр░░р▒Кр░кр░┐р░Хр▒Лр░ир░╛р░Ьр▒Лр░▓р▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░кр░Вр░Яр░▓ р░ор░╛р░░р▒Нр░кр░┐р░бр░┐ р░Ър▒Зр░пр░Вр░бр░┐, р░ир▒Ар░Яр░┐ р░Хр░╛р░▓р▒Бр░╡р░▓р▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
        'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪з█М╪▓┘И┌й╪│╪│┘╣╪▒┘И╪и┘Ж █М╪з ┘╛╪▒┘И┘╛█М┌й┘И┘Ж╪з╪▓┘И┘Д ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│ ┌й╪┤ ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ╪н█М╪з╪к█М╪з╪к█М: ┘Б╪╡┘Д┘И┌║ ┌й█М ┌п╪▒╪п╪┤ ┌й╪▒█М┌║╪М ┘Ж┌й╪з╪│█М ╪в╪и ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║█Ф'}
    },
    
    'Corn_(maize)___Common_rust_': {
        'en': {'default': 'Chemical: Apply a fungicide containing azoxystrobin or propiconazole. Organic: Plant resistant varieties.',},
        'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдЬрд╝реЛрдХреНрд╕реАрд╕реНрдЯреНрд░реЛрдмрд┐рди рдпрд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рдкреНрд░рддрд┐рд░реЛрдзреА рдХрд┐рд╕реНрдореЛрдВ рдХреЛ рд▓рдЧрд╛рдПрдВред',}},'Corn_(maize)___Common_rust_': {
        'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржЕрзНржпрж╛ржЬржХрзНрж╕рж┐рж╕рзНржЯрзНрж░рзЛржмрж┐ржи ржмрж╛ ржкрзНрж░рзЛржкрж┐ржХрзЛржирж╛ржЬрзЛрж▓ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзА ржЬрж╛ржд рж░рзЛржкржг ржХрж░рзБржиред'},
        'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркПркЭрлЛркХрлНрк╕рк┐рк╕рлНркЯрлНрк░рлЛркмрк┐рки ркЕркерк╡рк╛ рккрлНрк░рлЛрккрк┐ркХрлЛркирк╛ркЭрлЛрк▓ ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк░рлЛркЧрккрлНрк░ркдрк┐ркХрк╛рк░ркХ ркЬрк╛ркдрк┐ркУ рк╡рк╛рк╡рлЛ.'},
        'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Ер▓Ьр▓╛р▓Хр│Нр▓╕р▓┐р▓╕р│Нр▓Яр│Нр▓░р│Лр▓мр▓┐р▓ир│Н р▓Ер▓ер▓╡р▓╛ р▓кр│Нр▓░р│Кр▓кр▓┐р▓Хр│Кр▓ир▓╛р▓Ьр│Лр▓▓р│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Х р▓╣р▓Ър│Нр▓Ър▓┐. р▓Ьр│Ир▓╡р▓┐р▓Х: р▓░р│Лр▓Ч р▓кр│Нр▓░р▓др▓┐р▓░р│Лр▓зр▓Х р▓др▓│р▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓ир▓╛р▓Яр▓┐.'},
        'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ер┤╕р╡Лр┤Хр╡Нр┤╕р┤┐р┤╕р╡НтАМр┤Яр╡Нр┤░р╡Лр┤мр┤┐р╡╗ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р╡Кр┤кр┤┐р┤Хр╡Лр┤гр┤╛р┤╕р╡Лр╡╛ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤В: р┤░р╡Лр┤Чр┤кр╡Нр┤░р┤др┤┐р┤░р╡Лр┤з р┤╢р╡Зр┤╖р┤┐р┤пр╡Бр┤│р╡Нр┤│ р┤Зр┤ир┤Щр╡Нр┤Щр╡╛ р┤ир┤Яр╡Нр┤Яр╡Б р┤╡р┤│р╡╝р┤др╡Нр┤др╡Бр┤Х.'},
        'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдЕрдЭреЙрдХреНрд╕реАрд╕реНрдЯреНрд░реЛрдмрд┐рди рдХрд┐рдВрд╡рд╛ рдкреНрд░реЙрдкрд┐рдХреЛрдиреЕрдЭреЛрд▓ рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд░реЛрдЧрдкреНрд░рддрд┐рдХрд╛рд░рдХ рд╡рд╛рдг рд▓рд╛рд╡рд╛.'},
        'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдЬреЛрдХреНрд╕рд┐рд╕реНрдЯреЛрдмрд┐рди рд╡рд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рднрдПрдХреЛ рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд░реЛрдЧ рдкреНрд░рддрд┐рд░реЛрдзреА рдЬрд╛рдд рд░реЛрдкреНрдиреБрд╣реЛрд╕реНред'},
        'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмПрмЬрнЛрмХрнНрм╕рм┐рм╕рнНрмЯрнНрм░рнЛрммрм┐рмирнН рмХрм┐рморнНрммрм╛ рмкрнНрм░рнЛрмкрм┐рмХрнЛрмирм╛рмЬрнЛрм▓рнН рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм░рнЛрмЧ рмкрнНрм░рмдрм┐рм░рнЛрмзрмХ рмЬрм╛рмдрм┐ рм░рнЛрмкрмг рмХрм░рмирнНрмдрнБред'},
        'pa': {'default': 'ри░ри╕ри╛риЗригриХ: риРриЬрйЛриХри╕рйАри╕риЯрйНри░рйЛримри┐рии риЬри╛риВ рикрйНри░рйЛрикрйАриХрйЛриири╛риЬрйЛри▓ ри╡ри╛ри▓рйА рилрилрйВрй░рижрйАриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри░рйЛриЧ рикрйНри░ридрйАри░рйЛризриХ риХри┐ри╕риори╛риВ рижрйА римри┐риЬри╛риИ риХри░рйЛред'},
        'ta': {'default': 'роЗро░роЪро╛ропройроорпН: роЕроЪрпЛроХрпНро╕ро┐ро╕рпНроЯрпНро░рпЛрокро┐ройрпН роЕро▓рпНро▓родрпБ рокро┐ро░рпКрокро┐роХрпКройро╛роЪрпЛро▓рпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роЗропро▒рпНроХрпИ: роирпЛропрпН роОродро┐ро░рпНрокрпНрокрпБ ро╡роХрпИроХро│рпИ роироЯро╡рпБроорпН.'},
        'te': {'default': 'р░░р░╕р░╛р░пр░и: р░Ер░Ьр░╛р░Хр▒Нр░╕р░┐р░╕р▒Нр░Яр▒Нр░░р▒Лр░мр░┐р░ир▒Н р░▓р▒Зр░жр░╛ р░кр▒Нр░░р▒Кр░кр░┐р░Хр▒Лр░ир░╛р░Ьр▒Лр░▓р▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░╡р▒Нр░пр░╛р░зр░┐ р░ир░┐р░░р▒Лр░зр░Х р░░р░Хр░╛р░▓р▒Нр░ир░┐ р░╡р▒Зр░░р▒Нр░▓р▒Зр░пр░Вр░бр░┐.'},
        'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪з█М╪▓┘И┌й╪│╪│┘╣╪▒┘И╪и┘Ж █М╪з ┘╛╪▒┘И┘╛█М┌й┘И┘Ж╪з╪▓┘И┘Д ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│ ┌й╪┤ ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ╪н█М╪з╪к█М╪з╪к█М: ╪и█М┘Е╪з╪▒█М ╪│█Т ┘Е╪▓╪з╪н┘Е ╪з┘В╪│╪з┘Е ┌й╪з╪┤╪к ┌й╪▒█М┌║█Ф'}
},

    'Corn_(maize)___Northern_Leaf_Blight': {
    'en': {'default': 'Chemical: Apply a fungicide containing azoxystrobin or propiconazole. Organic: Crop rotation, remove infected debris.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдЬрд╝реЛрдХреНрд╕реАрд╕реНрдЯреНрд░реЛрдмрд┐рди рдпрд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рдлрд╕рд▓ рдЪрдХреНрд░рдг, рд╕рдВрдХреНрд░рдорд┐рдд рдорд▓рдмреЗ рдХреЛ рд╣рдЯрд╛ рджреЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржЕрзНржпрж╛ржЬржХрзНрж╕рж┐рж╕рзНржЯрзНрж░рзЛржмрж┐ржи ржмрж╛ ржкрзНрж░рзЛржкрж┐ржХрзЛржирж╛ржЬрзЛрж▓ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржлрж╕рж▓ ржЖржмрж░рзНрждржи, рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржзрзНржмржВрж╕рж╛ржмрж╢рзЗрж╖ рж╕рж░рж╛ржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркПркЭрлЛркХрлНрк╕рлАрк╕рлНркЯрлНрк░рлЛркмрк┐рки ркЕркерк╡рк╛ рккрлНрк░рлЛрккрк┐ркХрлЛркирк╛ркЭрлЛрк▓ ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рккрк╛ркХ ркЪркХрлНрк░, рк╕ркВркХрлНрк░ркорк┐ркд ркЕрк╡рк╢рлЗрк╖ ркжрлВрк░ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Ер▓Ьр▓╛р▓Хр│Нр▓╕р▓┐р▓╕р│Нр▓Яр│Нр▓░р│Лр▓мр▓┐р▓ир│Н р▓Ер▓ер▓╡р▓╛ р▓кр│Нр▓░р│Лр▓кр▓┐р▓Хр│Кр▓ир▓╛р▓Ьр│Лр▓▓р│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓╛р▓Хр▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓мр│Жр▓│р│Жр▓п р▓кр▓░р▓┐р▓╡р▓░р│Нр▓др▓ир│Ж, р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Ер▓╡р▓╢р│Зр▓╖р▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ер┤╕р╡Лр┤Хр╡Нр┤╕р┤┐р┤╕р╡Нр┤Яр╡Нр┤░р╡Лр┤мр┤┐р╡╗ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р╡Кр┤кр┤┐р┤Хр╡Лр┤ир┤╛р┤╕р╡Лр╡╛ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤Хр╡Гр┤╖р┤┐: р┤╡р┤┐р┤│р┤╛р┤нр╡Нр┤░р┤╛р┤ир╡Нр┤др┤┐, р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤Ер┤╡р┤╢р┤┐р┤╖р╡Нр┤Яр┤Щр╡Нр┤Щр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдЕтАНреЕрдЭреЙрдХреНрд╕реАрд╕реНрдЯреНрд░реЛрдмрд┐рди рдХрд┐рдВрд╡рд╛ рдкреНрд░реЙрдкрд┐рдХреЛрдирд╛рдЭреЛрд▓ рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рдкрд┐рдХ рдлреЗрд░рдкрд╛рд▓рдЯ рдХрд░рд╛, рд╕рдВрдХреНрд░рдорд┐рдд рдЕрд╡рд╢реЗрд╖ рдХрд╛рдвреВрди рдЯрд╛рдХрд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдЬреЛрдХреНрд╕реАрд╕реНрдЯреНрд░реЛрдмрд┐рди рд╡рд╛ рдкреНрд░реЛрдкрд┐рдХреЛрдирд╛рдЬреЛрд▓ рднрдПрдХреЛ рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рдмрд╛рд▓реА рдЪрдХреНрд░, рд╕рдВрдХреНрд░рдорд┐рдд рдлреЛрд╣рд░ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмПрмЬрнЛрмХрнНрм╕рм┐рм╖рнНрмЯрнНрм░рнЛрммрм┐рми рмХрм┐рморнНрммрм╛ рмкрнНрм░рнЛрмкрм┐рмХрнЛрмирм╛рмЬрнЛрм▓ рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рмлрм╕рм│ рмкрм░рм┐рммрм░рнНрмдрнНрмдрми, рм╕рмВрмХрнНрм░рморм┐рмд рмЕрммрм╢рнЗрм╖рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риРриЬри╝рйЛриХри╕рйАри╕риЯри░рйЛримри┐рии риЬри╛риВ рикрйНри░рйЛрикрйАриХрйЛриири╛риЬри╝рйЛри▓ ри╡ри╛ри▓рйА рилриВриЧрйАри╕ри╛риИриб ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: рилри╕ри▓ риЪрй▒риХри░, ри╕рй░риХри░риори┐рид риори▓римри╛ ри╣риЯри╛риУред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роЕроЪрпЛроХрпНро╕ро┐ро╕рпНроЯрпНро░рпЛрокро┐ройрпН роЕро▓рпНро▓родрпБ рокро┐ро░рпЛрокро┐роХрпЛройро╛роЪрпЛро▓рпН роЙро│рпНро│ рокрпВроЮрпНроЪрпИропро╛роЪро┐ро╡рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро░ро┐роороорпН: рокропро┐ро░рпН роЪрпБро┤ро▒рпНроЪро┐, рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЪро┐родрпИро╡рпИ роЕроХро▒рпНро▒ро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░Ер░Ьр▒Лр░Хр▒Нр░╕р░┐р░╕р▒Нр░Яр▒Нр░░р▒Лр░мр░┐р░ир▒Н р░▓р▒Зр░жр░╛ р░кр▒Нр░░р▒Лр░кр░┐р░Хр▒Лр░ир░╛р░Ьр▒Лр░▓р▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р░╛р░бр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п р░кр░жр▒Нр░зр░др░┐: р░кр░Вр░Яр░▓ р░ор░╛р░░р▒Нр░кр░┐р░бр░┐, р░╕р░Вр░Хр▒Нр░░р░ор░┐р░д р░Ер░╡р░╢р▒Зр░╖р░╛р░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪з█М╪│█М ┘Б┘Ж┌п╪│ ┌й╪┤ ╪п┘И╪з ┘Д┌п╪з╪ж█М┌║ ╪м╪│ ┘Е█М┌║ ╪з█М╪▓┘И┌й╪│╪│┘╣╪▒┘И╪и┘Ж █М╪з ┘╛╪▒┘И┘╛█М┌й┘И┘Ж╪з╪▓┘И┘Д █Б┘И█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Б╪╡┘Д┘И┌║ ┌й█М ╪к╪и╪п█М┘Д█М╪М ┘Е╪к╪з╪л╪▒█Б ┘Е┘Д╪и█Б █Б┘╣╪з ╪п█М┌║█Ф'}
},
    
    'Corn_(maize)___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤╡р╡Зр┤гр╡Нр┤Яр┤др┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░рдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
    'Grape___Black_rot': {
    'en': {'default': 'Chemical: Apply a fungicide containing captan or myclobutanil. Organic: Remove infected berries, improve air circulation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреИрдкреНрдЯрди рдпрд╛ рдорд╛рдпрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдЬрд╛рдореБрди рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНржпрж╛ржкржЯрж╛ржи ржмрж╛ ржорж╛ржЗржХрзНрж▓рзЛржмрзБржЯрж╛ржирж┐рж▓ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржЖржЩрзБрж░ рж╕рж░рж╛ржи, ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлЗрккрлНркЯрки ркЕркерк╡рк╛ ркорк╛ркЗркХрлНрк▓рлЛркмрлНркпрлБркЯрк╛ркирлАрк▓ ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд ркжрлНрк░рк╛ркХрлНрк╖ ркжрлВрк░ ркХрк░рлЛ, рк╣рк╡рк╛ркорк╛ркВ рк╡рк╣рки рк╕рлБркзрк╛рк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓пр▓╛р▓кр│Нр▓Яр▓╛р▓ир│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Ир▓Хр│Нр▓▓р│Лр▓мр│Бр▓Яр▓╛р▓ир▓┐р▓▓р│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓╛р▓Хр▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓жр│Нр▓░р▓╛р▓Хр│Нр▓╖р▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓Чр▓╛р▓│р▓┐р▓п р▓кр│Нр▓░р▓╕р▓░р▓гр▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр┤╛р┤кр╡Нр┤▒р╡Нр┤▒р╡╗ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор╡Ир┤Хр╡Нр┤▓р╡Лр┤мр╡Бр┤Яр┤╛р┤ир┤┐р╡╜ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤Хр╡Гр┤╖р┤┐: р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤ор╡Бр┤ир╡Нр┤др┤┐р┤░р┤┐р┤кр╡Нр┤кр┤┤р┤Щр╡Нр┤Щр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЕрдкреНрдЯрди рдХрд┐рдВрд╡рд╛ рдорд╛рдпреНрдХреНрд▓реЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рджреНрд░рд╛рдХреНрд╖реЗ рдХрд╛рдврд╛, рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрдпрд╛рдкреНрдЯрди рд╡рд╛ рдорд╛рдЗрдХреНрд▓реЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рднрдПрдХреЛ рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдЕрдВрдЧреБрд░ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рд╣рд╛рд╡рд╛ рд╕рд░реНрдХреБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрнЯрм╛рмкрнНрмЯрм╛рми рмХрм┐рморнНрммрм╛ рморм╛рмЗрмХрнНрм▓рнЛрммрнБрмЯрм╛рмирм┐рм▓ рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмжрм╛рмЖрмБ рм╣рмЯрм╛рмирнНрмдрнБ, рммрм╛рнЯрнБ рм╕рмВрмЪрм╛рм│рми рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХрйИрикриЯрии риЬри╛риВ риори╛риЗриХри▓рйЛримрйБриЯри╛риири┐ри▓ ри╡ри╛ри▓рйА рилриВриЧрйАри╕ри╛риИриб ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид риЕрй░риЧрйВри░ ри╣риЯри╛риУ, ри╣ри╡ри╛ рижри╛ ри╕рй░риЪри╛ри░ ри╡ризри╛риУред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роХро╛рокрпНроЯройрпН роЕро▓рпНро▓родрпБ роорпИроХрпНро▓рпЛрокро┐ропрпВроЯро╛ройро┐ро▓рпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИропро╛роЪро┐ро╡рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро░ро┐роороорпН: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ родро┐ро░ро╛роЯрпНроЪрпИ роЕроХро▒рпНро▒ро╡рпБроорпН, роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░Хр░╛р░кр▒Нр░Яр░╛р░ир▒Н р░▓р▒Зр░жр░╛ р░ор▒Ир░Хр▒Нр░▓р▒Лр░мр▒Нр░пр▒Вр░Яр░╛р░ир░┐р░▓р▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р░╛р░бр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п р░кр░жр▒Нр░зр░др░┐: р░╕р░Вр░Хр▒Нр░░р░ор░┐р░д р░жр▒Нр░░р░╛р░Хр▒Нр░╖ р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░г р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й█М┘╛┘╣┘Ж █М╪з ┘Е╪з╪ж█М┌й┘Д ╪и█М┘И┘╣╪з┘Ж┘Д ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│ ┌й╪┤ ╪п┘И╪з ┘Д┌п╪з╪ж█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ╪з┘Ж┌п┘И╪▒ ┌й┘И █Б┘╣╪з╪ж█М┌║╪М █Б┘И╪з ┌й█М ╪в┘Е╪п┘И╪▒┘Б╪к ╪и█Б╪к╪▒ ┌й╪▒█М┌║█Ф'}
},
    'Grape___Esca_(Black_Measles)': {
    'en': {'default': 'Chemical: There is no effective chemical control. Organic: Prune infected wood, sanitize tools.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЛрдИ рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рд▓рдХрдбрд╝реА рдХреЛ рдЫрд╛рдБрдЯреЗрдВ, рдЙрдкрдХрд░рдгреЛрдВ рдХреЛ рд╕рд╛рдл рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзЛржиржУ ржХрж╛рж░рзНржпржХрж░ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржирзЗржЗред ржЬрзИржмрж┐ржХ: рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржХрж╛ржа ржЫрж╛ржБржЯрж╛ржЗ ржХрж░рзБржи, ржпржирзНрждрзНрж░ржкрж╛рждрж┐ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлЛркИ ркЕрк╕рк░ркХрк╛рк░ркХ рк░рк╛рк╕рк╛ркпркгрк┐ркХ ркирк┐ркпркВркдрлНрк░ркг ркиркерлА. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд рк▓рк╛ркХркбрк╛ркирлЗ ркЫрк╛ркВркЯрлЛ, рк╕рк╛ркзркирлЛркирлЗ рк╕рлНрк╡ркЪрлНркЫ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓кр▓░р▓┐р▓гр▓╛р▓ор▓Хр▓╛р▓░р▓┐ р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓г р▓▓р▓нр│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓ор▓░р▓╡р▓ир│Нр▓ир│Б р▓Хр▓др│Нр▓др▓░р▓┐р▓╕р▓┐, р▓Йр▓кр▓Хр▓░р▓гр▓Чр▓│р▓ир│Нр▓ир│Б р▓╕р│Нр▓╡р▓Ър│Нр▓Ыр▓Чр│Кр▓│р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤лр┤▓р┤кр╡Нр┤░р┤жр┤ор┤╛р┤п р┤░р┤╛р┤╕ р┤ир┤┐р┤пр┤ир╡Нр┤др╡Нр┤░р┤гр┤В р┤Зр┤▓р╡Нр┤▓. р┤Ьр╡Ир┤╡р┤Хр╡Гр┤╖р┤┐: р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤ор┤░р┤Хр╡Нр┤Хр┤╖р┤гр┤В р┤др┤┐р┤░р╡Бр┤ор╡Нр┤ор╡Бр┤Х, р┤Йр┤кр┤Хр┤░р┤гр┤Щр╡Нр┤Щр╡╛ р┤╢р╡Бр┤Ър┤┐р┤др╡Нр┤╡р┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЛрдгрддрд╛рд╣реА рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдЙрдкрд╛рдп рдЙрдкрд▓рдмреНрдз рдирд╛рд╣реА. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рд▓рд╛рдХреВрдб рдЫрд╛рдЯрдгреЗ, рдЙрдкрдХрд░рдгреЗ рд╕реНрд╡рдЪреНрдЫ рдХрд░рдгреЗ.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреБрдиреИ рдкреНрд░рднрд╛рд╡рдХрд╛рд░реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдиреНрддреНрд░рдг рдЫреИрдиред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдХрд╛рда рдХрд╛рдЯреНрдиреБрд╣реЛрд╕реН, рдЙрдкрдХрд░рдгрд╣рд░реВ рд╕рдлрд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнМрмгрм╕рм┐ рмкрнНрм░рмнрм╛рммрнА рм░рм╕рм╛рнЯрмирм┐рмХ рмирм┐рнЯрмирнНрмдрнНрм░рмг рмирм╛рм╣рм┐рмБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмХрм╛рмармХрнБ рмХрм╛рмЯрмирнНрмдрнБ, рмЙрмкрмХрм░рмгрмЧрнБрмбрм╝рм┐рмХрнБ рмкрм░рм┐рм╖рнНрмХрм╛рм░ рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХрйЛриИ рикрйНри░ринри╛ри╡ри╕ри╝ри╛ри▓рйА ри░ри╕ри╛риЗригриХ риХрй░риЯри░рйЛри▓ риири╣рйАриВ ри╣рйИред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид ри▓рй▒риХрйЬ рижрйА риЫриЯри╛риИ риХри░рйЛ, ри╕ри╛ризриири╛риВ риирйВрй░ ри╕ри╛рилри╝ риХри░рйЛред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роОроирпНродро╡рпКро░рпБ ро╡ро┐ро│рпИро╡рпБро│рпНро│ ро╡рпЗродро┐ропро┐ропро▓рпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБроорпН роЗро▓рпНро▓рпИ. роХро░ро┐роороорпН: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ рооро░родрпНродрпИ родро┐ро░рпБродрпНродро╡рпБроорпН, роХро░рпБро╡ро┐роХро│рпИ роЪрпБродрпНродроорпН роЪрпЖропрпНропро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░кр▒Нр░░р░нр░╛р░╡р░╡р░Вр░др░ор▒Ир░и р░░р░╕р░╛р░пр░и р░ир░┐р░пр░Вр░др▒Нр░░р░г р░▓р▒Зр░жр▒Б. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п р░кр░жр▒Нр░зр░др░┐: р░╕р░Вр░Хр▒Нр░░р░ор░┐р░д р░Хр░▓р░кр░ир▒Б р░Хр░др▒Нр░др░┐р░░р░┐р░Вр░Ър░Вр░бр░┐, р░кр░░р░┐р░Хр░░р░╛р░▓р░ир▒Б р░╢р▒Бр░нр▒Нр░░р░В р░Ър▒Зр░пр░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘И╪ж█М ┘Е╪д╪л╪▒ ┌й█М┘Е█М╪з╪ж█М ┌й┘Ж┘╣╪▒┘И┘Д ┘Ж█Б█М┌║ █Б█Т█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ┘Д┌й┌С█М ┌й┘И ┌й╪з┘╣█М┌║╪М ╪з┘И╪▓╪з╪▒ ╪╡╪з┘Б ┌й╪▒█М┌║█Ф'}
},

    'Grape___Leaf_blight_(Isariopsis_Leaf_Spot)': {
    'en': {'default': 'Chemical: Apply a copper-based fungicide. Organic: Remove infected leaves, improve air circulation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЙрдкрд░ рдЖрдзрд╛рд░рд┐рдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: рждрж╛ржорж╛-ржнрж┐рждрзНрждрж┐ржХ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржкрж╛рждрж╛ржЧрзБрж▓рж┐ рж╕рж░рж╛ржи, ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркдрк╛ркВркмрк╛ркирк╛ ркЖркзрк╛рк░рк┐ркд рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд рккрк╛ркВркжркбрк╛ркУ ркжрлВрк░ ркХрк░рлЛ, рк╣рк╡рк╛ркорк╛ркВ рк╡рк╣рки рк╕рлБркзрк╛рк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓др▓╛р▓Вр▓мр│Ж р▓Жр▓зр▓╛р▓░р▓┐р▓д р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓╛р▓Хр▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Ор▓▓р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ър╡Жр┤ор╡Нр┤кр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤Хр╡Гр┤╖р┤┐: р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤Зр┤▓р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддрд╛рдВрдмреНрдпрд╛рдЪреНрдпрд╛ рдЖрдзрд╛рд░реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рдиреЗ рдХрд╛рдврд╛, рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХрдкрд░рдорд╛ рдЖрдзрд╛рд░рд┐рдд рдлрдЩреНрдЧреАрд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рддрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рд╣рд╛рд╡рд╛ рд╕рд░реНрдХреБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмдрм╛рморм╛ рмЖрмзрм╛рм░рм┐рмд рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмкрмдрнНрм░ рм╣рмЯрм╛рмирнНрмдрнБ, рммрм╛рнЯрнБ рм╕рмВрмЪрм╛рм│рми рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: ридри╛риоримрйЗ риЖризри╛ри░рид рилриВриЧрйАри╕ри╛риИриб ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид рикрй▒ридрйЗ ри╣риЯри╛риУ, ри╣ри╡ри╛ рижри╛ ри╕рй░риЪри╛ри░ ри╡ризри╛риУред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роЪрпЖроорпНрокрпБ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой рокрпВроЮрпНроЪрпИропро╛роЪро┐ро╡рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро░ро┐роороорпН: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЗро▓рпИроХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН, роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░░р░╛р░Чр░┐ р░Жр░зр░╛р░░р░┐р░д р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р░╛р░бр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п р░кр░жр▒Нр░зр░др░┐: р░╕р░Вр░Хр▒Нр░░р░ор░┐р░д р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░г р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪к╪з┘Ж╪и╪з ┘╛╪▒ ┘Е╪и┘Ж█М ┘Б┘Ж┌п╪│ ┌й╪┤ ╪п┘И╪з ┘Д┌п╪з╪ж█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ┘╛╪к█Т █Б┘╣╪з╪ж█М┌║╪М █Б┘И╪з ┌й█М ╪в┘Е╪п┘И╪▒┘Б╪к ╪и█Б╪к╪▒ ┌й╪▒█М┌║█Ф'}
},

    'Grape___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤╡р╡Зр┤гр╡Нр┤Яр┤др┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░рдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
    'Orange___Haunglongbing_(Citrus_greening)': {
    'en': {'default': 'Chemical: No effective chemical control.  Organic: Remove infected trees, control psyllid vectors.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЛрдИ рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкреЗрдбрд╝реЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рд╕рд╛рдЗрд▓рд┐рдб рд╡реИрдХреНрдЯрд░ рдХреЛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзЛржиржУ ржХрж╛рж░рзНржпржХрж░ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржирзЗржЗред ржЬрзИржмрж┐ржХ: рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржЧрж╛ржЫ рж╕рж░рж╛ржи, рж╕рж╛ржЗрж▓рж┐ржб ржмрж╛рж╣ржХ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлЛркИ ркЕрк╕рк░ркХрк╛рк░ркХ рк░рк╛рк╕рк╛ркпркгрк┐ркХ ркирк┐ркпркВркдрлНрк░ркг ркиркерлА. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд ркЭрк╛ркбрлЛ ркжрлВрк░ ркХрк░рлЛ, рк╕рк╛ркЗрк▓рк┐ркб рк╡рк╛рк╣ркХрлЛркирлЗ ркирк┐ркпркВркдрлНрк░рк┐ркд ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓кр▓░р▓┐р▓гр▓╛р▓ор▓Хр▓╛р▓░р▓┐ р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓гр▓╡р▓┐р▓▓р│Нр▓▓. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓ор▓░р▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓╕р│Ир▓▓р▓┐р▓бр│Н р▓╡р│Ар▓Хр▓░р▓Чр▓│р▓ир│Нр▓ир│Б р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤лр┤▓р┤кр╡Нр┤░р┤жр┤ор┤╛р┤п р┤░р┤╛р┤╕ р┤ир┤┐р┤пр┤ир╡Нр┤др╡Нр┤░р┤гр┤В р┤Зр┤▓р╡Нр┤▓. р┤Ьр╡Ир┤╡р┤Хр╡Гр┤╖р┤┐: р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤ор┤░р┤Щр╡Нр┤Щр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤╕р╡Ир┤▓р┤┐р┤бр╡Н р┤╡р┤Хр╡Нр┤Яр┤▒р╡Бр┤Хр╡╛ р┤ир┤┐р┤пр┤ир╡Нр┤др╡Нр┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЛрдгрддрд╛рд╣реА рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдЙрдкрд╛рдп рдирд╛рд╣реА. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рдЭрд╛рдбреЗ рд╣рдЯрд╡рд╛, рд╕рд╛рдпрд▓реАрдб рд╡рд╛рд╣рдХрд╛рдВрд╡рд░ рдирд┐рдпрдВрддреНрд░рдг рдареЗрд╡рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреБрдиреИ рдкреНрд░рднрд╛рд╡рдХрд╛рд░реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдиреНрддреНрд░рдг рдЫреИрдиред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рд░реВрдЦрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рд╕рд╛рдЗрд▓рд┐рдб рд╡рд╛рд╣рдХрд▓рд╛рдИ рдирд┐рдпрдиреНрддреНрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнМрмгрм╕рм┐ рмкрнНрм░рмнрм╛рммрнА рм░рм╕рм╛рнЯрмирм┐рмХ рмирм┐рнЯрмирнНрмдрнНрм░рмг рмирм╛рм╣рм┐рмБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмЧрмЫрмЧрнБрмбрм╝рм┐рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБ, рм╕рм╛рмЗрм▓рм┐рмбрнН рмнрнЗрмХрнНрмЯрм░рмХрнБ рмирм┐рнЯрмирнНрмдрнНрм░рмг рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХрйЛриИ рикрйНри░ринри╛ри╡ри╕ри╝ри╛ри▓рйА ри░ри╕ри╛риЗригриХ риХрй░риЯри░рйЛри▓ риири╣рйАриВ ри╣рйИред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид рижри░рй▒риЦрид ри╣риЯри╛риУ, ри╕ри╛риЗри▓ри┐риб ри╡рйИриХриЯри░ риирйВрй░ риири┐рипрй░ридрйНри░ри┐рид риХри░рйЛред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роОроирпНродро╡рпКро░рпБ ро╡ро┐ро│рпИро╡рпБро│рпНро│ ро╡рпЗродро┐ропро┐ропро▓рпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБроорпН роЗро▓рпНро▓рпИ. роХро░ро┐роороорпН: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ рооро░роЩрпНроХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН, роЪрпИро▓ро┐роЯрпН ро╡рпЗроХрпНроЯро░рпНроХро│рпИроХрпН роХроЯрпНроЯрпБрокрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░кр▒Нр░░р░нр░╛р░╡р░╡р░Вр░др░ор▒Ир░и р░░р░╕р░╛р░пр░и р░ир░┐р░пр░Вр░др▒Нр░░р░г р░▓р▒Зр░жр▒Б. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п р░кр░жр▒Нр░зр░др░┐: р░╕р░Вр░Хр▒Нр░░р░ор░┐р░д р░Ър▒Жр░Яр▒Нр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░╕р▒Ир░▓р░┐р░бр▒Н р░╡р▒Нр░пр░╛р░Хр▒Нр░Яр░░р▒Нр░▓р░ир▒Б р░ир░┐р░пр░Вр░др▒Нр░░р░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘И╪ж█М ┘Е╪д╪л╪▒ ┌й█М┘Е█М╪з╪ж█М ┌й┘Ж┘╣╪▒┘И┘Д ┘Ж█Б█М┌║ █Б█Т█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ╪п╪▒╪о╪к┘И┌║ ┌й┘И █Б┘╣╪з╪ж█М┌║╪М ╪│╪з╪ж┘Д┌И ┘И█М┌й┘╣╪▒╪▓ ┌й┘И ┌й┘Ж┘╣╪▒┘И┘Д ┌й╪▒█М┌║█Ф'}
},
    'Peach___Bacterial_spot': {
    'en': {'default': 'Chemical: Apply copper-based bactericides. Organic: Use disease-free nursery stock, improve air circulation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЙрдкрд░ рдЖрдзрд╛рд░рд┐рдд рдЬреАрд╡рд╛рдгреБрдирд╛рд╢рдХ рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд░реЛрдЧ-рдореБрдХреНрдд рдирд░реНрд╕рд░реА рд╕реНрдЯреЙрдХ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ, рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: рждрж╛ржорж╛-ржнрж┐рждрзНрждрж┐ржХ ржмрзНржпрж╛ржХржЯрзЗрж░рж┐рж╕рж╛ржЗржб ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: рж░рзЛржЧржорзБржХрзНржд ржирж╛рж░рзНрж╕рж╛рж░рж┐ рж╕рзНржЯржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи, ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркдрк╛ркВркмрк╛ ркЖркзрк╛рк░рк┐ркд ркмрлЗркХрлНркЯрлЗрк░рк┐рк╕рк╛ркЗркбрлНрк╕ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк░рлЛркЧркорлБркХрлНркд ркирк░рлНрк╕рк░рлА рк╕рлНркЯрлЛркХркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ, рк╣рк╡рк╛ркорк╛ркВ рк╡рк╣рки рк╕рлБркзрк╛рк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓др▓╛р▓Вр▓мр│Жр▓п р▓Жр▓зр▓╛р▓░р▓┐р▓д р▓мр│Нр▓пр▓╛р▓Хр│Нр▓Яр│Ар▓░р▓┐р▓╕р│Ир▓бр│Н р▓Ер▓ир│Нр▓ир│Б р▓╣р▓╛р▓Хр▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓░р│Лр▓Чр▓░р▓╣р▓┐р▓д р▓ир▓░р│Нр▓╕р▓░р▓┐ р▓╕р│Нр▓Яр▓╛р▓Хр│Н р▓мр▓│р▓╕р▓┐, р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ър╡Жр┤ор╡Нр┤кр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤мр┤╛р┤Хр╡Нр┤Яр╡Ар┤░р┤┐р┤╕р╡Ир┤бр╡Бр┤Хр╡╛ р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤Хр╡Гр┤╖р┤┐: р┤░р╡Лр┤Чр┤░р┤╣р┤┐р┤д р┤ир┤┤р╡Нр┤╕р┤▒р┤┐ р┤╕р╡Нр┤▒р╡Лр┤Хр╡Нр┤Хр╡Н р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х, р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддрд╛рдВрдмреНрдпрд╛рдЪреНрдпрд╛ рдЖрдзрд╛рд░реЗ рдЬреАрд╡рд╛рдгреВрдирд╛рд╢рдХреЗ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд░реЛрдЧрдореБрдХреНрдд рдирд░реНрд╕рд░реА рд╕реНрдЯреЙрдХ рд╡рд╛рдкрд░рд╛, рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╡рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддрд╛рдорд╛ рдЖрдзрд╛рд░рд┐рдд рдмреНрдпрд╛рдХреНрдЯреЗрд░рд┐рд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд░реЛрдЧ-рдореБрдХреНрдд рдирд░реНрд╕рд░реА рд╕реНрдЯрдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рд╣рд╛рд╡рд╛ рд╕рд░реНрдХреБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмдрм╛рморм╛ рмЖрмзрм╛рм░рм┐рмд рммрнНрнЯрм╛рмХрнНрмЯрнЗрм░рм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм░рнЛрмЧ рморнБрмХрнНрмд рмирм░рнНрм╕рнЗрм░рнА рм╖рнНрмЯрмХрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБ, рммрм╛рнЯрнБ рм╕рмВрмЪрм╛рм│рми рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: ридри╛риоримрйЗ риЖризри╛ри░рид римрйИриХриЯрйАри░рйАри╕ри╛риИриб ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри░рйЛриЧриорйБриХрид риири░ри╕ри░рйА ри╕риЯри╛риХ ри╡ри░ридрйЛриВ, ри╣ри╡ри╛ рижри╛ ри╕рй░риЪри╛ри░ ри╡ризри╛риУред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роЪрпЖроорпНрокрпБ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой рокро╛роХрпНроЯрпАро░ро┐ропро╛роХрпНроХро│рпИроХрпН роХроЯрпНроЯрпБрокрпНрокроЯрпБродрпНродрпБроорпН рооро░рпБроирпНродрпБроХро│рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро░ро┐роороорпН: роирпЛропро┐ро▓рпНро▓ро╛род роиро░рпНроЪро░ро┐ роЪрпЖроЯро┐роХро│рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН, роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░░р░╛р░Чр░┐ р░Жр░зр░╛р░░р░┐р░д р░мр▒Нр░пр░╛р░Хр▒Нр░Яр▒Ар░░р░┐р░╕р▒Ир░бр▒НтАМр░▓р░ир▒Б р░╡р░╛р░бр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п р░кр░жр▒Нр░зр░др░┐: р░╡р▒Нр░пр░╛р░зр░┐р░▓р▒Зр░ир░┐ р░ир░░р▒Нр░╕р░░р▒А р░╕р▒Нр░Яр░╛р░Хр▒Н р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐, р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░г р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪к╪з┘Ж╪и╪з ┘╛╪▒ ┘Е╪и┘Ж█М ╪и█М┌й┘╣█М╪▒█М ╪│╪з╪ж█М┌И ┘Д┌п╪з╪ж█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ╪и█М┘Е╪з╪▒█М ╪│█Т ┘╛╪з┌й ┘Ж╪▒╪│╪▒█М ┌й╪з ┘Е┘И╪з╪п ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║╪М █Б┘И╪з ┌й█М ╪в┘Е╪п┘И╪▒┘Б╪к ╪и█Б╪к╪▒ ┌й╪▒█М┌║█Ф'}
},
    'Peach___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤╡р╡Зр┤гр╡Нр┤Яр┤др┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░рдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
    'Pepper,_bell___Bacterial_spot': {
    'en': {'default': 'Chemical: Use copper-based fungicides. Avoid overhead watering. Organic: Use disease-free seeds, crop rotation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЙрдкрд░ рдЖрдзрд╛рд░рд┐рдд рдХрд╡рдХрдирд╛рд╢реА рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред рдКрдкрд░ рд╕реЗ рдкрд╛рдиреА рджреЗрдирд╛ рдЕрд╡реЙрдпрдб рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ: рд░реЛрдЧ-рдореБрдХреНрдд рдмреАрдЬреЛрдВ рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВ, рдлрд╕рд▓ рдЪрдХреНрд░рдг рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: рждрж╛ржорж╛-ржнрж┐рждрзНрждрж┐ржХ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред ржЙржкрж░рзЗрж░ ржжрж┐ржХ ржерзЗржХрзЗ ржкрж╛ржирж┐ ржжрзЗржУржпрж╝рж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржЪрж▓рзБржиред ржЬрзИржм: рж░рзЛржЧржорзБржХрзНржд ржмрзАржЬ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи, ржлрж╕рж▓рзЗрж░ ржЖржмрж░рзНрждржи ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркдрк╛ркВркмрк╛ ркЖркзрк╛рк░рк┐ркд рклрлВркЧркирк╛рк╢ркХрлЛркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. ркЙрккрк░ркерлА рккрк╛ркгрлА ркЖрккрк╡рк╛ркирлБркВ ркЯрк╛рк│рлЛ. ркЬрлИрк╡рк┐ркХ: рк░рлЛркЧркорлБркХрлНркд ркмрлАркЬрлЛркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ, рккрк╛ркХ рклрлЗрк░рклрк╛рк░ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓др▓╛р▓ор│Нр▓░ р▓Жр▓зр▓╛р▓░р▓┐р▓д р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐. р▓ор│Зр▓▓р▓┐р▓ир▓┐р▓Вр▓ж р▓ир│Ар▓░р│Б р▓╣р▓╛р▓Хр│Бр▓╡р│Бр▓жр▓ир│Нр▓ир│Б р▓др▓кр│Нр▓кр▓┐р▓╕р▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓░р│Лр▓Чр▓░р▓╣р▓┐р▓д р▓мр│Ар▓Ьр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐, р▓мр│Жр▓│р│Ж р▓кр▓░р▓┐р▓╡р▓░р│Нр▓др▓ир│Ж р▓ор▓╛р▓бр▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ър╡Жр┤ор╡Нр┤кр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Бр┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤ор╡Бр┤Хр┤│р┤┐р┤▓р╡Вр┤Яр╡Ж р┤╡р╡Жр┤│р╡Нр┤│р┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤ир┤др╡Н р┤Тр┤┤р┤┐р┤╡р┤╛р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤░р╡Лр┤Чр┤░р┤╣р┤┐р┤др┤ор┤╛р┤п р┤╡р┤┐р┤др╡Нр┤др╡Бр┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х, р┤╡р┤┐р┤│ р┤Ър┤Хр╡Нр┤░р┤В р┤кр┤╛р┤▓р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддрд╛рдВрдмреНрдпрд╛рдЪреНрдпрд╛ рдЖрдзрд╛рд░реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХреЗ рд╡рд╛рдкрд░рд╛. рд╡рд░реВрди рдкрд╛рдгреА рджреЗрдгреЗ рдЯрд╛рд│рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд░реЛрдЧрдореБрдХреНрдд рдмрд┐рдпрд╛рдгреЗ рд╡рд╛рдкрд░рд╛, рдкреАрдХ рдлреЗрд░рдлрд╛рд░ рдХрд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддрд╛рдорд╛ рдЖрдзрд╛рд░рд┐рдд рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдорд╛рдерд┐рдмрд╛рдЯ рдкрд╛рдиреА рд╣рд╛рд▓реНрди рдирджрд┐рдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд░реЛрдЧрдореБрдХреНрдд рдмреАрдЙ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рдмрд╛рд▓реА рдЪрдХреНрд░ рдкрд░рд┐рд╡рд░реНрддрди рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмдрм╛рморм╛ рмЖрмзрм╛рм░рм┐рмд рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЙрмкрм░рнБ рмкрм╛рмгрм┐ рмжрнЗрммрм╛рмХрнБ рмПрмбрм╝рм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм░рнЛрмЧрморнБрмХрнНрмд рммрнАрмЬ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБ, рмлрм╕рм▓ рмЪрмХрнНрм░рмг рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: ридри╛риорйЗ риЖризри╛ри░рид рилрилрйВрй░рижриири╛ри╕ри╝риХ ри╡ри░ридрйЛред риЙрикри░рйЛриВ рикри╛ригрйА рижрйЗригри╛ ридри┐риЖриЧрйЛред риЬрйИри╡ри┐риХ: ри░рйЛриЧ-риорйБриХрид римрйАриЬ ри╡ри░ридрйЛ, рилри╕ри▓ риЪрй▒риХри░ риХри░рйЛред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роЪрпЖроорпНрокрпБ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой рокрпВроЮрпНроЪрпИ роиро╛роЪро┐ройро┐роХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роорпЗро▓ро┐ро░рпБроирпНродрпБ роирпАро░рпН роКро▒рпНро▒рпБро╡родрпИ родро╡ро┐ро░рпНроХрпНроХро╡рпБроорпН. роХро░ро┐роороорпН: роирпЛропро▒рпНро▒ ро╡ро┐родрпИроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН, рокропро┐ро░рпН роЪрпБро┤ро▒рпНроЪро┐ роЪрпЖропрпНропро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░░р░╛р░Чр░┐ р░Жр░зр░╛р░░р░┐р░д р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░Хр░╛р░▓р▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░кр▒И р░ир▒Бр░Вр░бр░┐ р░ир▒Ар░░р▒Б р░кр▒Лр░пр░бр░В р░ир░┐р░╡р░╛р░░р░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п: р░╡р▒Нр░пр░╛р░зр░┐ р░░р░╣р░┐р░д р░╡р░┐р░др▒Нр░др░ир░╛р░▓р▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐, р░кр░Вр░Яр░▓ р░ор░╛р░░р▒Нр░кр░┐р░бр░┐ р░Ър▒Зр░пр░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪к╪з┘Ж╪и╪з ┘╛╪▒ ┘Е╪и┘Ж█М ┘Б┘Ж┌п╪│╪з╪ж┌И╪▓ ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ╪з┘И┘╛╪▒ ╪│█Т ┘╛╪з┘Ж█М ╪п█М┘Ж╪з ┌п╪▒█М╪▓ ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ╪и█М┘Е╪з╪▒█М ╪│█Т ┘╛╪з┌й ╪и█М╪м ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║╪М ┘Б╪╡┘Д┘И┌║ ┌й█М ┌п╪▒╪п╪┤ ┌й╪▒█М┌║█Ф'}
},
    'Pepper,_bell___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤╡р╡Зр┤гр╡Нр┤Яр┤др┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░рдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
    'Potato___Early_blight': {
    'en': {'default': 'Chemical: Apply a fungicide containing chlorothalonil or mancozeb. Organic: Improve soil health, remove infected leaves.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рдорд┐рдЯреНрдЯреА рдХреЗ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдореЗрдВ рд╕реБрдзрд╛рд░ рдХрд░реЗрдВ, рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНрж▓рзЛрж░рзЛржерж╛рж▓рзЛржирж┐рж▓ ржмрж╛ ржорзНржпрж╛ржиржХрзЛржЬрзЗржм рж╕ржоржирзНржмрж┐ржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржм: ржорж╛ржЯрж┐рж░ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЙржирзНржиржд ржХрж░рзБржи, рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржкрж╛рждрж╛ рж╕рж░рж╛ржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлНрк▓рлЛрк░рлЛркерк╛рк▓рлЛркирк┐рк▓ ркЕркерк╡рк╛ ркорлЗркиркХрлЛркЭрлЗркм ркзрк░рк╛рк╡ркдрлА рклрлВркЧркирк╛рк╢ркХ рк▓рк╛ркЧрлБ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: ркорк╛ркЯрлАркирк╛ ркЖрк░рлЛркЧрлНркпркорк╛ркВ рк╕рлБркзрк╛рк░рлЛ ркХрк░рлЛ, рк╕ркВркХрлНрк░ркорк┐ркд рккрк╛ркВркжркбрк╛ркУ ркжрлВрк░ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓▓р│Лр▓░р│Лр▓ер▓╛р▓▓р│Лр▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Нр▓пр▓╛р▓Вр▓Хр│Лр▓Ьр│Жр▓мр│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓Ер▓ир│Нр▓╡р▓пр▓┐р▓╕р▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓ор▓гр│Нр▓гр▓┐р▓и р▓Жр▓░р│Лр▓Чр│Нр▓пр▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐, р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Ор▓▓р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤▓р╡Лр┤▒р╡Лр┤др┤╛р┤▓р╡Лр┤гр┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор┤╛р╡╗р┤Хр╡Лр┤╕р╡Жр┤мр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤ор┤гр╡Нр┤гр┤┐р┤ир╡Нр┤▒р╡Ж р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х, р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤Зр┤▓р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдореЕрдиреНрдХреЛрдЭреЗрдм рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рдорд╛рддреАрдЪреНрдпрд╛ рдЖрд░реЛрдЧреНрдпрд╛рдд рд╕реБрдзрд╛рд░рдгрд╛ рдХрд░рд╛, рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рдиреЗ рдХрд╛рдврд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рд╡рд╛ рдореНрдпрд╛рдирдХреЛрдЬреЗрдм рднрдПрдХреЛ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рдорд╛рдЯреЛрдХреЛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рддрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрм▓рнЛрм░рнЛрмерм╛рм▓рнЛрмирм┐рм▓ рмХрм┐рморнНрммрм╛ рморнНрнЯрм╛рмирмХрнЛрмЬрнЗрмм рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рморм╛рмЯрм┐рм░ рм╕рнНрн▒рм╛рм╕рнНрмернНрнЯ рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБ, рм╕рмВрмХрнНрм░рморм┐рмд рмкрмдрнНрм░рмЧрнБрмбрм┐рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХри▓рйЛри░рйЛриери╛ри▓рйЛриири┐ри▓ риЬри╛риВ риорйИриириХрйЛриЬри╝рйЗрим ри╡ри╛ри▓ри╛ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: риори┐рй▒риЯрйА рижрйА ри╕ри┐ри╣рид ри╡ри┐рй▒риЪ ри╕рйБризри╛ри░ риХри░рйЛ, ри╕рй░риХри░риори┐рид рикрй▒ридри┐риЖриВ риирйВрй░ ри╣риЯри╛риУред'},
    'ta': {'default': 'ро░ро╛роЪро╛ропройро┐роХроорпН: роХро┐ро│рпЛро░рпЛродрпНродро╛ро▓рпЛройро┐ро▓рпН роЕро▓рпНро▓родрпБ рооро╛ройрпНроХрпЛроЪрпЖрокрпН роЙро│рпНро│ рокрпВроЮрпНроЪрпИропрпКродрпНродрпБ рооро░рпБроирпНродрпИ рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН. роЙропро┐ро░рпН ро╡ро┤ро┐: роорогрпНрогро┐ройрпН роЖро░рпЛроХрпНроХро┐ропродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН, рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЗро▓рпИроХро│рпИ роЕроХро▒рпНро▒рпБроЩрпНроХро│рпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Х: р░Хр▒Нр░▓р▒Лр░░р▒Лр░ер░╛р░▓р▒Лр░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░ор░╛р░ир▒Нр░Хр▒Лр░Ьр▒Жр░мр▒Н р░Йр░ир▒Нр░и р░лр░Вр░Чр░┐р░╕р▒Ир░бр▒НтАМр░ир░┐ р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░ир▒Зр░▓ р░Жр░░р▒Лр░Чр▒Нр░пр░╛р░ир▒Нр░ир░┐ р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐, р░╕р▒Лр░Хр░┐р░и р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘Д┘И╪▒┘И╪к┌╛╪з┘Д┘И┘Ж█М┘Д █М╪з ┘Е█М┘Ж┌й┘И╪▓█М╪и ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж╪м█М ╪│╪з╪ж█М┌И ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е┘╣█М ┌й█М ╪╡╪н╪к ┌й┘И ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║╪М ┘Е╪к╪з╪л╪▒█Б ┘╛╪к┘И┌║ ┌й┘И █Б┘╣╪з ╪п█М┌║█Ф'}
},
    'Potato___Late_blight': {
    'en': {'default': 'Chemical: Use a fungicide containing chlorothalonil or protectant fungicides like mancozeb. Organic: Improve air circulation, use resistant varieties.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдЬреИрд╕реЗ рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдХрд╡рдХрдирд╛рд╢реА рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ: рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВ, рдкреНрд░рддрд┐рд░реЛрдзреА рдХрд┐рд╕реНрдореЛрдВ рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНрж▓рзЛрж░рзЛржерж╛рж▓рзЛржирж┐рж▓ ржмрж╛ ржорзНржпрж╛ржиржХрзЛржЬрзЗржм ржЬрж╛рждрзАржпрж╝ ржкрзНрж░рждрж┐рж░ржХрзНрж╖рж╛ржорзВрж▓ржХ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред ржЬрзИржм: ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржи, ржкрзНрж░рждрж┐рж░рзЛржзрзА ржЬрж╛ржд ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлНрк▓рлЛрк░рлЛркерк╛рк▓рлЛркирк┐рк▓ ркЕркерк╡рк╛ ркорлЗркиркХрлЛркЭрлЗркм ркЬрлЗрк╡рк╛ рк╕рлБрк░ркХрлНрк╖рк╛ркдрлНркоркХ рклрлВркЧркирк╛рк╢ркХркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: рк╣рк╡рк╛ рккрлНрк░рк╕рк░ркг рк╕рлБркзрк╛рк░рк╡рк╛ ркЕркирлЗ рккрлНрк░ркдрк┐рк░рлЛркзркХ ркЬрк╛ркдрлЛркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓▓р│Лр▓░р│Лр▓ер▓╛р▓▓р│Лр▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Нр▓пр▓╛р▓Вр▓Хр│Лр▓Ьр│Жр▓мр│Н р▓ир▓Вр▓др▓╣ р▓░р▓Хр│Нр▓╖р▓гр▓╛р▓др│Нр▓ор▓Х р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Х р▓мр▓│р▓╕р▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐, р▓кр│Нр▓░р▓др▓┐р▓░р│Лр▓зр▓Х р▓др▓│р▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤▓р╡Лр┤▒р╡Лр┤др┤╛р┤▓р╡Лр┤гр┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор┤╛р╡╗р┤Хр╡Лр┤╕р╡Жр┤мр╡Н р┤кр╡Лр┤▓р╡Бр┤│р╡Нр┤│ р┤╕р┤Вр┤░р┤Хр╡Нр┤╖р┤г р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Бр┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х, р┤кр╡Нр┤░р┤др┤┐р┤░р╡Лр┤з р┤╢р╡Зр┤╖р┤┐р┤пр╡Бр┤│р╡Нр┤│ р┤Зр┤ир┤Щр╡Нр┤Щр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдореЕрдиреНрдХреЛрдЭреЗрдмрд╕рд╛рд░рдЦреНрдпрд╛ рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдмреБрд░рд╢реАрдирд╛рд╢рдХрд╛рдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛, рдкреНрд░рддрд┐рд░реЛрдзрдХ рд╡рд╛рдг рд╡рд╛рдкрд░рд╛рд╡реЗрдд.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рд╡рд╛ рдореНрдпрд╛рдирдХреЛрдЬреЗрдмрдЬрд╕реНрддрд╛ рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╣рд╛рд╡рд╛рдХреЛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рдкреНрд░рддрд┐рд░реЛрдзреА рдЬрд╛рдд рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрм▓рнЛрм░рнЛрмерм╛рм▓рнЛрмирм┐рм▓ рмХрм┐рморнНрммрм╛ рморнНрнЯрм╛рмирмХрнЛрмЬрнЗрмм рмнрм│рм┐ рм╕рнБрм░рмХрнНрм╖рм╛рморнВрм│рмХ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рмкрммрми рмкрнНрм░рммрм╛рм╣ рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБ, рмкрнНрм░рмдрм┐рм░рнЛрмзрмХ рмЬрм╛рмдрм┐ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХри▓рйЛри░рйЛриери╛ри▓рйЛриири┐ри▓ риЬри╛риВ риорйИриириХрйЛриЬри╝рйЗрим ри╡ри░риЧрйЗ ри╕рйБри░рй▒риЦри┐риЖридриориХ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри╡ри░ридрйЛред риЬрйИри╡ри┐риХ: ри╣ри╡ри╛ рижри╛ риЧрйЗрйЬ ри╕рйБризри╛ри░рйЛ, ри░рйЛризриХ риХри┐ри╕риори╛риВ ри╡ри░ридрйЛред'},
    'ta': {'default': 'ро░ро╛роЪро╛ропройро┐роХроорпН: роХро┐ро│рпЛро░рпЛродрпНродро╛ро▓рпЛройро┐ро▓рпН роЕро▓рпНро▓родрпБ рооро╛ройрпНроХрпЛроЪрпЖрокрпН рокрпЛройрпНро▒ рокро╛родрпБроХро╛рокрпНрокро╛рой рокрпВроЮрпНроЪрпИропрпКродрпНродрпБ рооро░рпБроирпНродрпБроХро│рпИ рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН. роЙропро┐ро░рпН ро╡ро┤ро┐: роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН, роОродро┐ро░рпНрокрпНрокрпБ ро╡роХрпИроХро│рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Х: р░Хр▒Нр░▓р▒Лр░░р▒Лр░ер░╛р░▓р▒Лр░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░ор░╛р░ир▒Нр░Хр▒Лр░Ьр▒Жр░мр▒Н р░╡р░Вр░Яр░┐ р░░р░Хр▒Нр░╖р░гр░╛р░др▒Нр░ор░Х р░╢р░┐р░▓р▒Ар░Вр░жр▒Нр░░р░ир░╛р░╢р░Хр░╛р░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐, р░ир░┐р░░р▒Лр░зр░Х р░░р░Хр░╛р░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘Д┘И╪▒┘И╪к┌╛╪з┘Д┘И┘Ж█М┘Д █М╪з ┘Е█М┘Ж┌й┘И╪▓█М╪и ╪м█М╪│█Т ╪н┘Б╪з╪╕╪к█М ┘Б┘Ж╪м█М ╪│╪з╪ж█М┌И╪▓ ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║╪М ┘Е╪▓╪з╪н┘Е ╪з┘В╪│╪з┘Е ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф'}
},
    'Potato___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤╡р╡Зр┤гр╡Нр┤Яр┤др┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░рдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
    'Raspberry___healthy': {
  'en': {'default': 'No treatment needed.'},
  'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
  'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
  'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
  'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
  'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤╡р╡Зр┤гр╡Нр┤Яр┤др┤┐р┤▓р╡Нр┤▓.'},
  'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
  'ne': {'default': 'рдЙрдкрдЪрд╛рд░рдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЫреИрдиред'},
  'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
  'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
  'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
  'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
  'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
   'Soyabean___healthy': {
  'en': {'default': 'No treatment needed.'},
  'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
  'bn': {'default': 'ржХрзЛржиржУ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
  'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
  'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
  'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤╡р╡Зр┤гр╡Нр┤Яр┤др┤┐р┤▓р╡Нр┤▓.'},
  'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
  'ne': {'default': 'рдЙрдкрдЪрд╛рд░рдХреЛ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЫреИрдиред'},
  'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
  'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
  'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
  'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
  'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
    'Squash___Powdery_mildew': {
  'en': {'default': 'Chemical: Apply a fungicide containing myclobutanil or sulfur. Organic: Improve air circulation, use neem oil or baking soda spray.'},
  'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдорд╛рдпрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рдпрд╛ рд╕рд▓реНрдлрд░ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВ, рдиреАрдо рдХреЗ рддреЗрд▓ рдпрд╛ рдмреЗрдХрд┐рдВрдЧ рд╕реЛрдбрд╛ рд╕реНрдкреНрд░реЗ рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред'},
  'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржорж╛ржЗржХрзНрж▓рзЛржмрзБржЯрж╛ржирж┐рж▓ ржмрж╛ рж╕рж╛рж▓ржлрж╛рж░ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржм: ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржи, ржирж┐ржо рждрзЗрж▓ ржмрж╛ ржмрзЗржХрж┐ржВ рж╕рзЛржбрж╛ рж╕рзНржкрзНрж░рзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред'},
  'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркорк╛ркЗркХрк▓рлЛркмрлНркпрлБркЯрк╛ркирк┐рк▓ ркЕркерк╡рк╛ ркЧркВркзркХ ркзрк░рк╛рк╡ркдрлА рклрлВркЧркирк╛рк╢ркХ рк▓рк╛ркЧрлБ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: рк╣рк╡рк╛ рккрлНрк░рк╡рк╛рк╣ рк╕рлБркзрк╛рк░рлЛ, ркирлАрко ркдрлЗрк▓ ркЕркерк╡рк╛ ркмрлЗркХрк┐ркВркЧ рк╕рлЛркбрк╛ рк╕рлНрккрлНрк░рлЗ ркЙрккркпрлЛркЧ ркХрк░рлЛ.'},
  'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓ор│Ир▓Хр│Нр▓▓р│Лр▓мр│Нр▓пр│Вр▓Яр▓╛р▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓╕р▓▓р│Нр▓лр▓░р│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐р▓░р▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓Чр▓╛р▓│р▓┐р▓Ър▓▓р▓ир│Ж р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐, ╨╜╨╕╨╝ р▓др│Ир▓▓ р▓Ер▓ер▓╡р▓╛ р▓мр│Жр│Хр▓Хр▓┐р▓Вр▓Чр│Н р▓╕р│Лр▓бр▓╛ р▓╕р│Нр▓кр│Нр▓░р│Жр│Х р▓мр▓│р▓╕р▓┐.'},
  'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤ор╡Ир┤Хр╡Нр┤▓р╡Лр┤мр╡Бр┤Яр╡Нр┤Яр┤╛р┤ир┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤╕р╡╛р┤лр╡╝ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х, р┤Зр┤▓ р┤ир┤╛р┤░р┤Щр╡Нр┤Щ р┤Ор┤гр╡Нр┤гр┤пр╡Л р┤мр╡Зр┤Хр╡Нр┤Хр┤┐р┤Вр┤Чр╡Н р┤╕р╡Лр┤бр┤пр╡Л р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'},
  'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдорд╛рдпрдХреЛрд▓реЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдЧрдВрдзрдХ рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛, рдиреАрдо рддреЗрд▓ рдХрд┐рдВрд╡рд╛ рдмреЗрдХрд┐рдВрдЧ рд╕реЛрдбрд╛ рд╕реНрдкреНрд░реЗ рд╡рд╛рдкрд░рд╛.'},
  'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдорд╛рдпрдХреНрд▓реЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рд╡рд╛ рд╕рд▓реНрдлрд░ рднрдПрдХреЛ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╣рд╛рд╡рд╛рдХреЛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рдиреАрдо рддреЗрд▓ рд╡рд╛ рдмреЗрдХрд┐рдВрдЧ рд╕реЛрдбрд╛ рд╕реНрдкреНрд░реЗ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
  'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рморм╛рмЗрмХрнНрм▓рнЛрммрнНрнЯрнБрмЯрм╛рмирм┐рм▓ рмХрм┐рморнНрммрм╛ рмЧрмирнНрмзрмХ рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рмкрммрми рмкрнНрм░рммрм╛рм╣ рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБ, рмирм┐рмо рмдрнЗрм▓ рммрм╛ рммрнЗрмХрм┐рмВ рм╕рнЛрмбрм╛ рмЫрм┐рмЯрм╛рмпрм┐рммрм╛ рмЙрмкрмпрнЛрмЧ рмХрм░рмирнНрмдрнБред'},
  'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риори╛риИриХри▓рйЛримри┐риКриЯрйИриири┐ри▓ риЬри╛риВ риЧрй░ризриХ ри╡ри╛ри▓ри╛ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╣ри╡ри╛ рижри╛ риЧрйЗрйЬ ри╕рйБризри╛ри░рйЛ, риирйАрио рижри╛ ридрйЗри▓ риЬри╛риВ римрйЗриХри┐рй░риЧ ри╕рйЛрибри╛ риЫри┐рйЬриХри╛риЕ ри╡ри░ридрйЛред'},
  'ta': {'default': 'ро░ро╛роЪро╛ропройро┐роХроорпН: роорпИроХрпНроХрпБро│рпЛрокрпБроЯро╛ройро┐ро▓рпН роЕро▓рпНро▓родрпБ роЪро▓рпНрокро░рпН роЕроЯроЩрпНроХро┐роп рокрпВроЮрпНроЪрпИ роОродро┐ро░рпНрокрпНрокрпБ рооро░рпБроирпНродрпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роЙропро┐ро░рпН ро╡ро┤ро┐: роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН, ро╡рпЗрокрпНрокрпЖрогрпНрогрпЖропрпН роЕро▓рпНро▓родрпБ рокрпЗроХрпНроХро┐роЩрпН роЪрпЛроЯро╛ родрпЖро│ро┐ро╡рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
  'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Х: р░ор▒Ир░Хр▒Нр░▓р▒Лр░мр▒Нр░пр▒Вр░Яр░╛р░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░╕р░▓р▒Нр░лр░░р▒Н р░Йр░ир▒Нр░и р░лр░Вр░Чр░┐р░╕р▒Ир░бр▒НтАМр░ир░┐ р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░г р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐, р░ир░┐р░ор▒Нр░ор░Ър▒Жр░Яр▒Нр░Яр▒Б р░ир▒Вр░ир▒Ж р░▓р▒Зр░жр░╛ р░мр▒Зр░Хр░┐р░Вр░Чр▒Н р░╕р▒Лр░бр░╛ р░╕р▒Нр░кр▒Нр░░р▒З р░╡р░╛р░бр░Вр░бр░┐.'},
  'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┘Е╪з╪ж█М┌й┘Д┘И╪и█М┘И┘╣╪з┘Ж█М┘Д █М╪з ╪│┘Д┘Б╪▒ ┘И╪з┘Д╪з ┘Б┘Ж╪м█М ╪│╪з╪ж█М┌И ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ╪и█Б╪к╪▒ ┌й╪▒█М┌║╪М ┘Ж█М┘Е ┌й╪з ╪к█М┘Д █М╪з ╪и█М┌й┘Ж┌п ╪│┘И┌И╪з ╪з╪│┘╛╪▒█Т ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф'}

},
    'Strawberry___Leaf_scorch': {
  'en': {'default': 'Chemical: Apply a fungicide containing captan or myclobutanil. Organic: Remove infected leaves, improve air circulation.'},
  'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреИрдкреНрдЯрди рдпрд╛ рдорд╛рдпрдХреНрд▓реЛрдмреБрдЯрд╛рдирд┐рд▓ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред'},
  'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНржпрж╛ржкржЯрж╛ржи ржмрж╛ ржорж╛ржЗржХрзНрж▓рзЛржмрзБржЯрж╛ржирж┐рж▓ржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржм: рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржкрж╛рждрж╛ рж╕рж░рж╛ржи, ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржиред'},
  'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлЗрккрлНркЯрк╛рки ркЕркерк╡рк╛ ркорк╛ркЗркХрк▓рлЛркмрлНркпрлБркЯрк╛ркирк┐рк▓ ркзрк░рк╛рк╡ркдрлА рклрлВркЧркирк╛рк╢ркХ рк▓рк╛ркЧрлБ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд рккрк╛ркВркжркбрк╛ркУ ркжрлВрк░ ркХрк░рлЛ, рк╣рк╡рк╛ рккрлНрк░рк╡рк╛рк╣ рк╕рлБркзрк╛рк░рлЛ.'},
  'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓пр▓╛р▓кр│Нр▓Яр▓ир│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Ир▓Хр│Нр▓▓р│Лр▓мр│Нр▓пр│Вр▓Яр▓╛р▓ир▓┐р▓▓р│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Х р▓мр▓│р▓╕р▓┐. р▓╕р▓╛р▓Вр▓Чр▓┐р▓Х: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Ор▓▓р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓Чр▓╛р▓│р▓┐р▓Ър▓▓р▓ир│Ж р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
  'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр┤╛р┤кр╡Нр┤▒р╡Нр┤▒р╡╗ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор╡Ир┤Хр╡Нр┤▓р╡Лр┤мр╡Бр┤Яр╡Нр┤Яр┤╛р┤ир┤┐р╡╜ р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤Зр┤▓р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
  'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЕрдкреНрдЯрди рдХрд┐рдВрд╡рд╛ рдорд╛рдпрдХреЛрд▓реЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рдиреЗ рдХрд╛рдврд╛, рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛.'},
  'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрдпрд╛рдкреНрдЯрд╛рди рд╡рд╛ рдорд╛рдпрдХреНрд▓реЛрдмреНрдпреБрдЯрд╛рдирд┐рд▓ рднрдПрдХреЛ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рддрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рд╣рд╛рд╡рд╛рдХреЛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
  'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрнЯрм╛рмкрнНрмЯрм╛рми рмХрм┐рморнНрммрм╛ рморм╛рмЗрмХрнНрм▓рнЛрммрнНрнЯрнБрмЯрм╛рмирм┐рм▓ рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмкрмдрнНрм░рмЧрнБрмбрм┐рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБ, рмкрммрми рмкрнНрм░рммрм╛рм╣ рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБред'},
  'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХрйИрикриЯрии риЬри╛риВ риори╛риИриХри▓рйЛримри┐риКриЯрйИриири┐ри▓ ри╡ри╛ри▓ри╛ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид рикрй▒ридри┐риЖриВ риирйВрй░ ри╣риЯри╛риУ, ри╣ри╡ри╛ рижри╛ риЧрйЗрйЬ ри╕рйБризри╛ри░рйЛред'},
  'ta': {'default': 'ро░ро╛роЪро╛ропройро┐роХроорпН: роХрпЗрокрпНроЯро╛ройрпН роЕро▓рпНро▓родрпБ роорпИроХрпНроХрпБро│рпЛрокрпБроЯро╛ройро┐ро▓рпН роЙро│рпНро│ рокрпВроЮрпНроЪрпИ рооро░рпБроирпНродрпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роЙропро┐ро░рпН ро╡ро┤ро┐: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЗро▓рпИроХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН, роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
  'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Х: р░Хр▒Нр░пр░╛р░кр▒Нр░Яр░╛р░ир▒Н р░▓р▒Зр░жр░╛ р░ор▒Ир░Хр▒Нр░▓р▒Лр░мр▒Нр░пр▒Вр░Яр░╛р░ир░┐р░▓р▒Н р░Йр░ир▒Нр░и р░лр░Вр░Чр░┐р░╕р▒Ир░бр▒НтАМр░ир░┐ р░╡р░╛р░бр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п: р░╕р▒Лр░Хр░┐р░и р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░г р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
  'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й█М┘╛┘╣┘Ж █М╪з ┘Е╪з╪ж█М┌й┘Д┘И╪и█М┘И┘╣╪з┘Ж█М┘Д ┘И╪з┘Д╪з ┘Б┘Ж╪м█М ╪│╪з╪ж█М┌И ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ┘╛╪к┘И┌║ ┌й┘И █Б┘╣╪з ╪п█М┌║╪М █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ╪и█Б╪к╪▒ ┌й╪▒█М┌║█Ф'}
},
    'Strawberry___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЧрд░рдЬ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдЙрдкрдЪрд╛рд░ рдЖрд╡рд╢реНрдпрдХ рдЫреИрдиред'},
    'or': {'default': 'рмЪрм┐рмХрм┐рмдрнНрм╕рм╛рм░ рмЖрммрм╢рнНрнЯрмХрмдрм╛ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
},
    'Tomato___Bacterial_spot': {
    'en': {'default': 'Chemical: Use copper-based fungicides. Avoid overhead watering. Organic: Use disease-free seeds, crop rotation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреЙрдкрд░ рдЖрдзрд╛рд░рд┐рдд рдХрд╡рдХрдирд╛рд╢реА рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред рдКрдкрд░ рд╕реЗ рдкрд╛рдиреА рджреЗрдирд╛ рдЬреИрд╡рд┐рдХ: рд░реЛрдЧ-рдореБрдХреНрдд рдмреАрдЬреЛрдВ рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВ, рдлрд╕рд▓ рдЪрдХреНрд░рдг рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: рждрж╛ржорж╛-ржнрж┐рждрзНрждрж┐ржХ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред ржЙржкрж░рзЗрж░ ржжрж┐ржХ ржерзЗржХрзЗ ржЬрж▓ ржжрзЗржУржпрж╝рж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржЪрж▓рзБржиред ржЬрзИржм: рж░рзЛржЧржорзБржХрзНржд ржмрзАржЬ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи, ржлрж╕рж▓рзЗрж░ ржШрзВрж░рзНржгржи ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлЛрккрк░ ркЖркзрк╛рк░рк┐ркд рклрлВркЧркирк╛рк╢ркХрлЛркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. ркЙрккрк░ркерлА рккрк╛ркгрлА ркЖрккрк╡рк╛ркирлБркВ ркЯрк╛рк│рлЛ. ркУрк░рлНркЧрлЗркирк┐ркХ: рк░рлЛркЧркорлБркХрлНркд ркмрлАркЬрлЛркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ, рккрк╛ркХ рклрлЗрк░рклрк╛рк░ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓др▓╛р▓ор│Нр▓░р▓╛р▓зр▓╛р▓░р▓┐р▓д р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐. р▓ор│Зр▓▓р▓┐р▓ир▓┐р▓Вр▓ж р▓ир│Ар▓░р│Б р▓╣р▓╛р▓Хр│Бр▓╡р│Бр▓жр▓ир│Нр▓ир│Б р▓др▓кр│Нр▓кр▓┐р▓╕р▓┐. р▓Ьр│Ир▓╡р▓┐р▓Х: р▓░р│Лр▓Чр▓░р▓╣р▓┐р▓д р▓мр│Ар▓Ьр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐, р▓мр│Жр▓│р│Ж р▓кр▓░р▓┐р▓╡р▓░р│Нр▓др▓ир│Ж р▓ор▓╛р▓бр▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ър╡Жр┤ор╡Нр┤кр╡Н р┤Ер┤Яр┤┐р┤╕р╡Нр┤ер┤╛р┤ир┤ор┤╛р┤Хр╡Нр┤Хр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Бр┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤ор╡Бр┤Хр┤│р┤┐р┤▓р╡Вр┤Яр╡Ж р┤╡р╡Жр┤│р╡Нр┤│р┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤ир┤др╡Н р┤Тр┤┤р┤┐р┤╡р┤╛р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ур╡╝р┤Чр┤╛р┤ир┤┐р┤Хр╡Н: р┤░р╡Лр┤Чр┤░р┤╣р┤┐р┤др┤ор┤╛р┤п р┤╡р┤┐р┤др╡Нр┤др╡Бр┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х, р┤╡р┤┐р┤│р┤Хр┤│р╡Бр┤Яр╡Ж р┤кр┤░р┤┐р┤╡р╡╝р┤др╡Нр┤др┤ир┤В р┤ир┤Яр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддрд╛рдВрдмреЗрд╡рд░ рдЖрдзрд╛рд░рд┐рдд рдмреБрд░рд╢реАрдирд╛рд╢рдХрд╛рдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛. рд╡рд░реВрди рдкрд╛рдгреА рджреЗрдгреЗ рдЯрд╛рд│рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд░реЛрдЧрдореБрдХреНрдд рдмрд┐рдпрд╛рдгреЗ рд╡рд╛рдкрд░рд╛, рдкреАрдХ рдлреЗрд░рдлрд╛рд░ рдХрд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рддрд╛рдорд╛-рдЖрдзрд╛рд░рд┐рдд рдлрдЩреНрдЧреАрд╕рд╛рдЗрдбрд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдорд╛рдерд┐рдмрд╛рдЯ рдкрд╛рдиреА рд╣рд╛рд▓реНрдиреЗ рдХрд╛рд░реНрдпрдмрд╛рдЯ рдмрдЪреНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд░реЛрдЧрдореБрдХреНрдд рдмреАрдЙ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рдмрд╛рд▓реА рдкрд░рд┐рд╡рд░реНрддрди рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмдрм╛рморм╛ рмЖрмзрм╛рм░рм┐рмд рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЙрмкрм░рнБ рмкрм╛рмгрм┐ рмжрнЗрммрм╛рм░рнБ рммрмЮрнНрмЪрмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм░рнЛрмЧрморнБрмХрнНрмд рммрнАрмЬ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБ, рмлрм╕рм▓ рмШрнБрм░рмг рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: ридри╛риори╛-риЕризри╛ри░ри┐рид рилрилрйВрй░рижрйАриири╛ри╕ри╝риХ ри╡ри░ридрйЛред риЙрй▒ридрйЗ ридрйЛриВ рикри╛ригрйА рижрйЗриг ридрйЛриВ римриЪрйЛред риЬрйИри╡ри┐риХ: ри░рйЛриЧ-риорйБриХрид римрйАриЬ ри╡ри░ридрйЛ, рилри╕ри▓ риЪрй▒риХри░ ри▓ри╛риУред'},
    'ta': {'default': 'ро░ро╛роЪро╛ропройро┐роХроорпН: роЪрпЖроорпНрокрпБ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой рокрпВроЮрпНроЪрпИ роиро╛роЪро┐ройро┐роХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роорпЗро▓рпН роирпАро░рпНрокрпНрокро╛роЪройроорпН родро╡ро┐ро░рпНроХрпНроХро╡рпБроорпН. роХро░ро┐роороорпН: роирпЛропро▒рпНро▒ ро╡ро┐родрпИроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН, рокропро┐ро░рпН роЪрпБро┤ро▒рпНроЪро┐ роЪрпЖропрпНропро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Х: р░др░╛р░ор▒Нр░░р░╛р░зр░╛р░░р░┐р░д р░╢р░┐р░▓р▒Ар░Вр░жр▒Нр░░р░ир░╛р░╢р░Хр░╛р░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░кр▒И р░ир▒Бр░Вр░бр░┐ р░ир▒Ар░░р▒Б р░кр▒Лр░пр░бр░╛р░ир▒Нр░ир░┐ р░ир░┐р░╡р░╛р░░р░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п: р░╡р▒Нр░пр░╛р░зр░┐р░▓р▒Зр░ир░┐ р░╡р░┐р░др▒Нр░др░ир░╛р░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐, р░кр░Вр░Яр░▓ р░ор░╛р░░р▒Нр░кр░┐р░бр░┐ р░Ър▒Зр░пр░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪к╪з┘Ж╪и█Т ┘╛╪▒ ┘Е╪и┘Ж█М ┘Б┘Ж┌п╪│╪з╪ж┌И╪▓ ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ╪з┘И┘╛╪▒ ╪│█Т ┘╛╪з┘Ж█М ╪п█М┘Ж█Т ╪│█Т ┌п╪▒█М╪▓ ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ╪и█М┘Е╪з╪▒█М ╪│█Т ┘╛╪з┌й ╪и█М╪м ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║╪М ┘Б╪╡┘Д┘И┌║ ┌й█М ┌п╪▒╪п╪┤ ┌й╪▒█М┌║█Ф'}
},
    'Tomato___Early_blight': {
    'en': {'default': 'Chemical: Apply a fungicide containing chlorothalonil or mancozeb. Prune lower infected leaves. Organic: Improve soil health, remove infected leaves.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдирд┐рдЪрд▓реЗ рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рдЫрд╛рдБрдЯреЗрдВред рдЬреИрд╡рд┐рдХ: рдорд┐рдЯреНрдЯреА рдХреЗ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдореЗрдВ рд╕реБрдзрд╛рд░ рдХрд░реЗрдВ, рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНрж▓рзЛрж░рзЛржерж╛рж▓рзЛржирж┐рж▓ ржмрж╛ ржорзНржпрж╛ржиржХрзЛржЬрзЗржмржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржирж┐ржЪрзЗрж░ рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржкрж╛рждрж╛ ржЫрж╛ржБржЯрж╛ржЗ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржорж╛ржЯрж┐рж░ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЙржирзНржиржд ржХрж░рзБржи, рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржкрж╛рждрж╛ рж╕рж░рж╛ржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлНрк▓рлЛрк░рлЛркерк╛рк▓рлЛркирк┐рк▓ ркЕркерк╡рк╛ ркорлЗркиркХрлЛркЭрлЗркм ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк▓рк╛ркЧрлБ ркХрк░рлЛ. ркирлАркЪрк▓рк╛ рк╕ркВркХрлНрк░ркорк┐ркд рккрк╛ркВркжркбрк╛ркУ ркжрлВрк░ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: ркорк╛ркЯрлАркирлА ркдркВркжрлБрк░рк╕рлНркдрлАркорк╛ркВ рк╕рлБркзрк╛рк░рлЛ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓▓р│Лр▓░р│Лр▓ер▓╛р▓▓р│Лр▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Нр▓пр▓╛р▓Вр▓Хр│Лр▓Ьр│Жр▓мр│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓Ър│Нр▓Ър▓┐. р▓Хр│Жр▓│р▓Чр▓┐р▓и р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Ор▓▓р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓Хр▓др│Нр▓др▓░р▓┐р▓╕р▓┐. р▓╕р▓╛р▓Вр▓жр▓░р│Нр▓нр▓┐р▓Х: р▓ор▓гр│Нр▓гр▓┐р▓и р▓Жр▓░р│Лр▓Чр│Нр▓пр▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤▓р╡Лр┤▒р╡Лр┤др┤╛р┤▓р╡Лр┤гр┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор┤╛р╡╗р┤Хр╡Лр┤╕р╡Жр┤мр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤др┤╛р┤┤р┤др╡Нр┤др╡Ж р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤Зр┤▓р┤Хр╡╛ р┤╡р┤┐р┤Ър╡Нр┤Ыр╡Зр┤жр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤ор┤гр╡Нр┤гр┤┐р┤ир╡Нр┤▒р╡Ж р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤др╡Нр┤др╡Ж р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдореЕрдиреНрдХреЛрдЭреЗрдм рдЕрд╕рд▓реЗрд▓реЗ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рдЦрд╛рд▓рдЪреА рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рдиреЗ рдЫрд╛рдЯреВрди рдЯрд╛рдХрд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рдорд╛рддреАрдЪреЗ рдЖрд░реЛрдЧреНрдп рд╕реБрдзрд╛рд░рд╡рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рд╡рд╛ рдореНрдпрд╛рдирдХреЛрдЬреЗрдм рднрдПрдХреЛ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рддрд▓рдХреЛ рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рддрд╣рд░реВ рдЫрд╛рдБрдЯреНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рдорд╛рдЯреЛрдХреЛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрм▓рнЛрм░рнЛрмерм╛рм▓рнЛрмирм┐рм▓ рмХрм┐рморнНрммрм╛ рморнНрнЯрм╛рмирмХрнЛрмЬрнЗрмм рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмдрм│рм░ рм╕рмВрмХрнНрм░рморм┐рмд рмкрмдрнНрм░рмЧрнБрмбрм┐рмХрнБ рмХрм╛рмЯрмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рморм╛рмЯрм┐рм░ рм╕рнНрн▒рм╛рм╕рнНрмернНрнЯ рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХри▓рйЛри░рйЛриери╛ри▓рйЛриири┐ри▓ риЬри╛риВ риорйИриириХрйЛриЬри╝рйЗрим ри╡ри╛ри▓ри╛ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри▓риЧри╛риУред ри╣рйЗриари▓рйЗ ри╕рй░риХри░риори┐рид рикрй▒ридри┐риЖриВ риирйВрй░ риХрй▒риЯрйЛред риЬрйИри╡ри┐риХ: риори┐рй▒риЯрйА рижрйА ри╕ри┐ри╣рид ри╕рйБризри╛ри░рйЛред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роХро┐ро│рпЛро░рпЛродрпНродро╛ро▓рпЛройро┐ро▓рпН роЕро▓рпНро▓родрпБ рооро╛ройрпНроХрпЛроЪрпЖрокрпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХрпАро┤рпН роирпЛропрпНрокро▒рпНро▒ро┐роп роЗро▓рпИроХро│рпИ ро╡рпЖроЯрпНроЯро┐ ро╡ро┐роЯрпБроЩрпНроХро│рпН. роХро░ро┐роороорпН: роорогрпН роЖро░рпЛроХрпНроХро┐ропродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░Хр▒Нр░▓р▒Лр░░р▒Лр░ер░╛р░▓р▒Лр░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░ор░╛р░ир▒Нр░Хр▒Лр░Ьр▒Жр░мр▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р░╛р░бр░Вр░бр░┐. р░жр░┐р░Чр▒Бр░╡ р░нр░╛р░Чр░Вр░▓р▒Лр░ир░┐ р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п р░кр░жр▒Нр░зр░др░┐: р░ир▒Зр░▓ р░Жр░░р▒Лр░Чр▒Нр░пр░╛р░ир▒Нр░ир░┐ р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘Д┘И╪▒┘И╪к┌╛╪з┘Д┘И┘Ж█М┘Д █М╪з ┘Е█М┘Ж┌й┘И╪▓█М╪и ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж╪м█М ╪│╪з╪ж█М┌И ┘Д┌п╪з╪ж█М┌║█Ф ┘Ж┌Ж┘Д█Т ┘Е╪к╪з╪л╪▒█Б ┘╛╪к█Т ┌й╪з┘╣█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е┘╣█М ┌й█М ╪╡╪н╪к ┌й┘И ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║╪М ┘Е╪к╪з╪л╪▒█Б ┘╛╪к█Т █Б┘╣╪з╪ж█М┌║█Ф'}
},
    'Tomato___Late_blight': {
    'en': {'default': 'Chemical: Use a fungicide containing chlorothalonil or protectant fungicides like mancozeb. Improve air circulation. Organic: Use resistant varieties, improve air circulation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдЬреИрд╕реЗ рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдХрд╡рдХрдирд╛рд╢реА рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ: рдкреНрд░рддрд┐рд░реЛрдзреА рдХрд┐рд╕реНрдореЛрдВ рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВ, рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНрж▓рзЛрж░рзЛржерж╛рж▓рзЛржирж┐рж▓ ржмрж╛ ржорзНржпрж╛ржиржХрзЛржЬрзЗржм рж╕ржоржирзНржмрж┐ржд ржкрзНрж░рждрж┐рж░ржХрзНрж╖рж╛ржорзВрж▓ржХ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред ржмрж╛ржпрж╝рзБ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржкрзНрж░рждрж┐рж░рзЛржзрзА ржЬрж╛ржд ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлНрк▓рлЛрк░рлЛркерк╛рк▓рлЛркирк┐рк▓ ркЕркерк╡рк╛ ркорлЗркиркХрлЛркЭрлЗркм ркЬрлЗрк╡рк╛ рк╕рлБрк░ркХрлНрк╖рк╛ркдрлНркоркХ рклрлВркЧркирк╛рк╢ркХрлЛркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. рк╣рк╡рк╛ рккрлНрк░рк╡рк╛рк╣ рк╕рлБркзрк╛рк░рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк░рлЛркЧрккрлНрк░ркдрк┐ркХрк╛рк░ркХ ркЬрк╛ркдрлЛркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓▓р│Лр▓░р│Лр▓ер▓╛р▓▓р│Лр▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Нр▓пр▓╛р▓Вр▓Хр│Лр▓Ьр│Жр▓мр│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓░р▓Хр│Нр▓╖р▓╛р▓др│Нр▓ор▓Х р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐. р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐. р▓╕р▓╛р▓Вр▓жр▓░р│Нр▓нр▓┐р▓Х: р▓кр│Нр▓░р▓др▓┐р▓░р│Лр▓зр▓Х р▓др▓│р▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤▓р╡Лр┤▒р╡Лр┤др┤╛р┤▓р╡Лр┤гр┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор┤╛р╡╗р┤Хр╡Лр┤╕р╡Жр┤мр╡Н р┤кр╡Лр┤▓р╡Бр┤│р╡Нр┤│ р┤╕р┤Вр┤░р┤Хр╡Нр┤╖р┤г р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Бр┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤кр╡Нр┤░р┤др┤┐р┤░р╡Лр┤зр┤╢р╡Зр┤╖р┤┐р┤пр╡Бр┤│р╡Нр┤│ р┤Зр┤ир┤Щр╡Нр┤Щр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдореЕрдиреНрдХреЛрдЭреЗрдмрд╕рд╛рд░рдЦреЗ рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд╡рд╛рдкрд░рд╛. рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рдкреНрд░рддрд┐рд░реЛрдзрдХ рдЬрд╛рддреАрдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рд╡рд╛ рдореНрдпрд╛рдирдХреЛрдЬреЗрдм рднрдПрдХреЛ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рд╣рд╛рд╡рд╛рдХреЛ рд╕рд░реНрдХреБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рдкреНрд░рддрд┐рд░реЛрдзреА рдкреНрд░рдЬрд╛рддрд┐рд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрм▓рнЛрм░рнЛрмерм╛рм▓рнЛрмирм┐рм▓ рмХрм┐рморнНрммрм╛ рморнНрнЯрм╛рмирмХрнЛрмЬрнЗрмм рмнрм│рм┐ рм╕рнБрм░рмХрнНрм╖рм╛рморнВрм│рмХ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рммрм╛рнЯрнБ рм╕рмВрмЪрм╛рм│рми рм╕рнБрмзрм╛рм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рмкрнНрм░рмдрм┐рм░рнЛрмзрмХ рмЬрм╛рмдрм┐ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: риХри▓рйЛри░рйЛриери╛ри▓рйЛриири┐ри▓ риЬри╛риВ риорйИриириХрйЛриЬри╝рйЗрим ри╡ри░риЧрйЗ ри╕рйБри░рй▒риЦри┐риЖридриориХ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри╡ри░ридрйЛред ри╣ри╡ри╛ рижри╛ риЧрйЗрйЬ ри╕рйБризри╛ри░рйЛред риЬрйИри╡ри┐риХ: ри░рйЛризриХ риХри┐ри╕риори╛риВ ри╡ри░ридрйЛред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роХро┐ро│рпЛро░рпЛродрпНродро╛ро▓рпЛройро┐ро▓рпН роЕро▓рпНро▓родрпБ рооро╛ройрпНроХрпЛроЪрпЖрокрпН рокрпЛройрпНро▒ рокро╛родрпБроХро╛рокрпНрокро╛рой рокрпВроЮрпНроЪрпИ рооро░рпБроирпНродрпБроХро│рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН. роХро░ро┐роороорпН: роОродро┐ро░рпНрокрпНрокрпБ ро╡роХрпИроХро│рпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░Хр▒Нр░▓р▒Лр░░р▒Лр░ер░╛р░▓р▒Лр░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░ор░╛р░ир▒Нр░Хр▒Лр░Ьр▒Жр░мр▒Н р░╡р░Вр░Яр░┐ р░░р░Хр▒Нр░╖р░гр░╛р░др▒Нр░ор░Х р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░Хр░╛р░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п: р░ир░┐р░░р▒Лр░зр░Х р░░р░Хр░╛р░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘Д┘И╪▒┘И╪к┌╛╪з┘Д┘И┘Ж█М┘Д █М╪з ┘Е█М┘Ж┌й┘И╪▓█М╪и ╪м█М╪│█Т ╪н┘Б╪з╪╕╪к█М ┘Б┘Ж┌п╪│╪з╪ж┌И╪▓ ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪▓╪з╪н┘Е ╪з┘В╪│╪з┘Е ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф'}
},
    'Tomato___Leaf_Mold': {
    'en': {'default': 'Chemical: Apply a fungicide containing chlorothalonil or mancozeb. Organic: Improve air circulation, reduce humidity.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВредрдЬреИрд╡рд┐рдХ: рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВ, рдирдореА рдХрдо рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНрж▓рзЛрж░рзЛржерж╛рж▓рзЛржирж┐рж▓ ржмрж╛ ржорзНржпрж╛ржиржХрзЛржЬрзЗржмржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: ржмрж╛рждрж╛рж╕ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржи, ржЖрж░рзНржжрзНрж░рждрж╛ ржХржорж╛ржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлНрк▓рлЛрк░рлЛркерк╛рк▓рлЛркирк┐рк▓ ркЕркерк╡рк╛ ркорлЗркиркХрлЛркЭрлЗркм ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк╣рк╡рк╛ рк╡рк╣рлЗрк╡рк╛ркирлБркВ рк╕рлБркзрк╛рк░рлЛ, ркнрлЗркЬ ркШркЯрк╛ркбрлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓▓р│Лр▓░р│Лр▓ер▓╛р▓▓р│Лр▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Нр▓пр▓╛р▓Вр▓Хр│Лр▓Ьр│Жр▓мр│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓Ър│Нр▓Ър▓┐. р▓╕р▓╛р▓Вр▓жр▓░р│Нр▓нр▓┐р▓Х: р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐, р▓др│Зр▓╡р▓╛р▓Вр▓╢ р▓Хр▓бр▓┐р▓ор│Ж р▓ор▓╛р▓бр▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤▓р╡Лр┤▒р╡Лр┤др┤╛р┤▓р╡Лр┤гр┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор┤╛р╡╗р┤Хр╡Лр┤╕р╡Жр┤мр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х, р┤Ир╡╝р┤кр╡Нр┤кр┤В р┤Хр╡Бр┤▒р┤пр╡Нр┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдореЕрдиреНрдХреЛрдЭреЗрдм рдпреБрдХреНрдд рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╡рд╛, рдЖрд░реНрджреНрд░рддрд╛ рдХрдореА рдХрд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рд╡рд╛ рдореНрдпрд╛рдирдХреЛрдЬреЗрдм рднрдПрдХреЛ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╣рд╛рд╡рд╛ рд╕рд░реНрдХреБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рдЖрд░реНрджреНрд░рддрд╛ рдШрдЯрд╛рдЙрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрм▓рнЛрм░рнЛрмерм╛рм▓рнЛрмирм┐рм▓ рмХрм┐рморнНрммрм╛ рморнНрнЯрм╛рмирмХрнЛрмЬрнЗрмм рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рммрм╛рнЯрнБ рм╕рмВрмЪрм╛рм│рми рм╕рнБрмзрм╛рм░рмирнНрмдрнБ, рмЖрм░рнНрмжрнНрм░рмдрм╛ рмХрморм╛рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХри▓рйЛри░рйЛриери╛ри▓рйЛриири┐ри▓ риЬри╛риВ риорйИриириХрйЛриЬри╝рйЗрим ри╡ри╛ри▓ри╛ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╣ри╡ри╛ рижрйА риЖри╡ри╛риЬри╛риИ ри╕рйБризри╛ри░рйЛ, риириорйА риШриЯри╛риУред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роХро┐ро│рпЛро░рпЛродрпНродро╛ро▓рпЛройро┐ро▓рпН роЕро▓рпНро▓родрпБ рооро╛ройрпНроХрпЛроЪрпЖрокрпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИ рооро░рпБроирпНродрпБ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро░ро┐роороорпН: роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН, роИро░рокрпНрокродродрпНродрпИ роХрпБро▒рпИроХрпНроХро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░Хр▒Нр░▓р▒Лр░░р▒Лр░ер░╛р░▓р▒Лр░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░ор░╛р░ир▒Нр░Хр▒Лр░Ьр▒Жр░мр▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п: р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐, р░Жр░░р▒Нр░жр▒Нр░░р░др░ир▒Б р░др░Чр▒Нр░Чр░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘Д┘И╪▒┘И╪к┌╛╪з┘Д┘И┘Ж█М┘Д █М╪з ┘Е█М┘Ж┌й┘И╪▓█М╪и ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│╪з╪ж┌И ┘Д┌п╪з╪ж█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║╪М ┘Ж┘Е█М ┌й┘Е ┌й╪▒█М┌║█Ф'}

},
    'Tomato___Septoria_leaf_spot': {
    'en': {'default': 'Chemical: Apply a fungicide containing chlorothalonil or mancozeb. Organic: Remove infected leaves, improve air circulation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНрж▓рзЛрж░рзЛржерж╛рж▓рзЛржирж┐рж▓ ржмрж╛ ржорзНржпрж╛ржиржХрзЛржЬрзЗржмржпрзБржХрзНржд ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржмрж┐ржХ: рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржкрж╛рждрж╛ рж╕рж░рж╛ржи, ржмрж╛рждрж╛рж╕ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлНрк▓рлЛрк░рлЛркерк╛рк▓рлЛркирк┐рк▓ ркЕркерк╡рк╛ ркорлЗркиркХрлЛркЭрлЗркм ркзрк░рк╛рк╡ркдрлБркВ рклрлВркЧркирк╛рк╢ркХ рк▓ркЧрк╛рк╡рлЛ. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд рккрк╛ркВркжркбрк╛ркУ ркжрлВрк░ ркХрк░рлЛ, рк╣рк╡рк╛ рк╡рк╣рлЗрк╡рк╛ркирлБркВ рк╕рлБркзрк╛рк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓▓р│Лр▓░р│Лр▓ер▓╛р▓▓р│Лр▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓ор│Нр▓пр▓╛р▓Вр▓Хр│Лр▓Ьр│Жр▓мр│Н р▓╣р│Кр▓Вр▓жр▓┐р▓░р│Бр▓╡ р▓╢р▓┐р▓▓р│Ар▓Вр▓зр│Нр▓░р▓ир▓╛р▓╢р▓Хр▓╡р▓ир│Нр▓ир│Б р▓╣р▓Ър│Нр▓Ър▓┐. р▓╕р▓╛р▓Вр▓жр▓░р│Нр▓нр▓┐р▓Х: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Ор▓▓р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤▓р╡Лр┤▒р╡Лр┤др┤╛р┤▓р╡Лр┤гр┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор┤╛р╡╗р┤Хр╡Лр┤╕р╡Жр┤мр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡: р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤Зр┤▓р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤Вр┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤╡р┤╛р┤пр╡Б р┤кр╡Нр┤░р┤╡р┤╛р┤╣р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рдореЕрдиреНрдХреЛрдЭреЗрдм рдпреБрдХреНрдд рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рдиреЗ рдХрд╛рдвреВрди рдЯрд╛рдХрд╛, рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╡рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рд╡рд╛ рдореНрдпрд╛рдирдХреЛрдЬреЗрдм рднрдПрдХреЛ рдлрдлреВрдВрджрдирд╛рд╢рдХ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рддрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рд╣рд╛рд╡рд╛рдХреЛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрм▓рнЛрм░рнЛрмерм╛рм▓рнЛрмирм┐рм▓ рмХрм┐рморнНрммрм╛ рморнНрнЯрм╛рмирмХрнЛрмЬрнЗрмм рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмкрмдрнНрм░рмЧрнБрмбрм┐рмХрнБ рмХрм╛рмЯрмирнНрмдрнБ, рммрм╛рнЯрнБ рмЪрм│рм╛рмЪрм│ рм╕рнБрмзрм╛рм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХри▓рйЛри░рйЛриери╛ри▓рйЛриири┐ри▓ риЬри╛риВ риорйИриириХрйЛриЬри╝рйЗрим ри╡ри╛ри▓ри╛ рилрилрйВрй░рижриири╛ри╕ри╝риХ ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид рикрй▒ридри┐риЖриВ риирйВрй░ ри╣риЯри╛риУ, ри╣ри╡ри╛ рижрйА риЖри╡ри╛риЬри╛риИ ри╕рйБризри╛ри░рйЛред'},
    'ta': {'default': 'ро╡рпЗродро┐ропро┐ропро▓рпН: роХро┐ро│рпЛро░рпЛродрпНродро╛ро▓рпЛройро┐ро▓рпН роЕро▓рпНро▓родрпБ рооро╛ройрпНроХрпЛроЪрпЖрокрпН роХрпКрогрпНроЯ рокрпВроЮрпНроЪрпИ рооро░рпБроирпНродрпБ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро░ро┐роороорпН: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЗро▓рпИроХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН, роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Хр░В: р░Хр▒Нр░▓р▒Лр░░р▒Лр░ер░╛р░▓р▒Лр░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░ор░╛р░ир▒Нр░Хр▒Лр░Ьр▒Жр░мр▒Н р░Хр░▓р░┐р░Чр░┐р░и р░╢р░┐р░▓р▒Ар░Вр░зр▒Нр░░р░ир░╛р░╢р░┐р░ир░┐ р░╡р░╛р░бр░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п: р░мр░╛р░зр░┐р░д р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘Д┘И╪▒┘И╪к┌╛╪з┘Д┘И┘Ж█М┘Д █М╪з ┘Е█М┘Ж┌й┘И╪▓█М╪и ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│╪з╪ж┌И ┘Д┌п╪з╪ж█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ┘╛╪к█Т █Б┘╣╪з╪ж█М┌║╪М █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║█Ф'}
},
    'Tomato___Spider_mites Two-spotted_spider_mite': {
    'en': {'default': 'Chemical: Use miticides like abamectin or spiromesifen. Organic: Use insecticidal soap, neem oil, or introduce predatory mites.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдПрдмрд╛рдореЗрдХреНрдЯрд┐рди рдпрд╛ рд╕реНрдкрд╛рдЗрд░реЛрдореЗрд╕рд┐рдлреЗрди рдЬреИрд╕реЗ рдорд╛рдЗрдЯрд┐рд╕рд╛рдЗрдб рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ: рдХреАрдЯрдирд╛рд╢рдХ рд╕рд╛рдмреБрди, рдиреАрдо рдХрд╛ рддреЗрд▓ рдкреНрд░рдпреЛрдЧ рдХрд░реЗрдВ, рдпрд╛ рд╢рд┐рдХрд╛рд░реА рдорд╛рдЗрдЯреНрд╕ рдХреЛ рдЫреЛрдбрд╝реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржЕрзНржпрж╛ржмрж╛ржорзЗржХржЯрж┐ржи ржмрж╛ рж╕рзНржкрж╛ржЗрж░рзЛржорзЗрж╕рж┐ржлрзЗржирзЗрж░ ржорждрзЛ ржорж╛ржЗржЯрж┐рж╕рж╛ржЗржб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред ржЬрзИржм: ржХрзАржЯржирж╛рж╢ржХ рж╕рж╛ржмрж╛ржи, ржирж┐ржо рждрзЗрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи, ржмрж╛ рж╢рж┐ржХрж╛рж░рзА ржорж╛ржЗржЯрж╕ ржкрзНрж░ржмрж░рзНрждржи ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркПркмрк╛ркорлЗркХрлНркЯрк┐рки ркЕркерк╡рк╛ рк╕рлНрккрк╛ркпрк░рлЛркорлЗрк╕рк┐рклрлЗрки ркЬрлЗрк╡рк╛ ркорк╛ркЗркЯрк┐рк╕рк╛ркЗркбрлНрк╕ркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: ркЬрлАрк╡рк╛ркгрлБркирк╛рк╢ркХ рк╕рк╛ркмрлБркг, ркирлАрко ркдрлЗрк▓ркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ, ркЕркерк╡рк╛ рк╢рк┐ркХрк╛рк░рлА ркорк╛ркЗркЯрлНрк╕ркирлЗ рк░ркЬрлВ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Ер▓мр▓╛р▓ор│Жр▓Хр│Нр▓Яр▓┐р▓ир│Н р▓Ер▓ер▓╡р▓╛ р▓╕р│Нр▓кр│Ир▓░р│Лр▓ор│Жр▓╕р▓┐р▓лр│Жр▓ир│НтАМр▓ир▓Вр▓др▓╣ р▓ор│Ир▓Яр▓┐р▓╕р│Ир▓бр│Нр▓Чр▓│р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐. р▓╕р▓╕р│Нр▓пр▓Ь: р▓Хр│Ар▓Яр▓ир▓╛р▓╢р▓Х р▓╕р▓╛р▓мр│Вр▓ир│Б, р▓ир▓┐р▓Вр▓мр│Ж р▓Ор▓гр│Нр▓гр│Ж р▓мр▓│р▓╕р▓┐, р▓Ер▓ер▓╡р▓╛ р▓мр│Зр▓Яр│Жр▓Чр▓╛р▓░ р▓ор│Ир▓Яр│Нр▓╕р│Н р▓кр▓░р▓┐р▓Ър▓пр▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Ер┤мр┤╛р┤ор╡Жр┤Хр╡Нр┤Яр┤┐р╡╗ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤╕р╡Нр┤кр╡Ир┤▒р╡Лр┤ор╡Жр┤╕р┤┐р┤лр╡╗ р┤кр╡Лр┤▓р╡Бр┤│р╡Нр┤│ р┤ор╡Ир┤▒р╡Нр┤▒р┤┐р┤╕р╡Ир┤бр╡Бр┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ур╡╝р┤Чр┤╛р┤ир┤┐р┤Хр╡Н: р┤Хр╡Ар┤Яр┤ир┤╛р┤╢р┤┐р┤ир┤┐ р┤╕р╡Лр┤кр╡Нр┤кр╡Н, р┤ир╡Ар┤В р┤Ор┤гр╡Нр┤г р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х, р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р╡Жр┤бр╡Зр┤▒р╡Нр┤▒р┤▒р┤┐ р┤ор╡Ир┤▒р╡Нр┤▒р╡Бр┤Хр╡╛ р┤кр┤░р┤┐р┤Ър┤пр┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдЕрдмрд╛рдореЗрдХреНрдЯрд┐рди рдХрд┐рдВрд╡рд╛ рд╕реНрдкрд╛рдпрд░реЛрдореЗрд╕рд┐рдлреЗрди рд╕рд╛рд░рдЦреНрдпрд╛ рдорд╛рдЗрдЯрд┐рд╕рд╛рдЗрдбреНрд╕ рд╡рд╛рдкрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рдХреАрдЯрдХрдирд╛рд╢рдХ рд╕рд╛рдмрдг, рдиреАрдо рддреЗрд▓ рд╡рд╛рдкрд░рд╛, рдХрд┐рдВрд╡рд╛ рд╢рд┐рдХрд╛рд░реА рдорд╛рдЗрдЯреНрд╕рдЪреА рдУрд│рдЦ рдХрд░реВрди рджреНрдпрд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдЕрдмрд╛рдореЗрдХреНрдЯрд┐рди рд╡рд╛ рд╕реНрдкрд╛рдЗрд░реЛрдореЗрд╕рд┐рдлреЗрди рдЬрд╕реНрддрд╛ рдорд╛рдЗрдЯрд┐рд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рдХреАрдЯрдирд╛рд╢рдХ рд╕рд╛рдмреБрди, рдиреАрдо рддреЗрд▓ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реН, рд╡рд╛ рд╢рд┐рдХрд╛рд░реА рдорд╛рдЗрдЯреНрд╕ рдкрд░рд┐рдЪрдп рдЧрд░рд╛рдЙрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмПрммрм╛рморнЗрмХрнНрмЯрм┐рмирнН рмХрм┐рморнНрммрм╛ рм╕рнНрмкрм╛рмЗрм░рнЛрморнЗрм╕рм┐рмлрнЗрмирнН рмнрм│рм┐ рморм╛рмЗрмЯрм┐рм╕рм╛рмЗрмбрнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рмХрнАрмЯрмирм╛рм╢рмХ рм╕рм╛рммрнБрмирнН, рмирм┐рморнН рмдрнЗрм▓ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБ, рмХрм┐рморнНрммрм╛ рм╢рм┐рмХрм╛рм░рнА рморм╛рмЗрмЯрнН рмкрм░рм┐рмЪрнЯ рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риРримри╛риорйИриХриЯри┐рии риЬри╛риВ ри╕рикри╛риЗри░рйЛриорйЗри╕рйАрилрйЗрии ри╡ри░риЧрйЗ риори╛риИриЯри┐ри╕ри╛риИрибриЬри╝ рижрйА ри╡ри░ридрйЛриВ риХри░рйЛред риЬрйИри╡ри┐риХ: риХрйАриЯриири╛ри╕ри╝риХ ри╕ри╛римриг, риирйАрио ридрйЗри▓ рижрйА ри╡ри░ридрйЛриВ риХри░рйЛ, риЬри╛риВ ри╕ри╝ри┐риХри╛ри░рйА риори╛риИриЯри╕ риирйВрй░ рикрйЗри╕ри╝ риХри░рйЛред'},
    'ta': {'default': 'ро░роЪро╛ропрой: роЕрокро╛роорпЖроХрпНроЯро┐ройрпН роЕро▓рпНро▓родрпБ ро╕рпНрокрпИро░рпЛроорпЖроЪро┐роГрокрпЖройрпН рокрпЛройрпНро▒ роорпИроЯро┐роЪрпИроЯрпНроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро╛ро░ро┐роХ: рокрпВроЪрпНроЪро┐роХрпНроХрпКро▓рпНро▓ро┐ роЪрпЛрокрпН, ро╡рпЗроорпНрокрпБ роОрогрпНрогрпЖропрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН, роЕро▓рпНро▓родрпБ рокро┐роЯро┐рокро┐роЯро┐ роорпИроЯрпНроХро│рпИ роЕро▒ро┐роорпБроХрокрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Х: р░Ер░мр░╛р░ор▒Жр░Хр▒Нр░Яр░┐р░ир▒Н р░▓р▒Зр░жр░╛ р░╕р▒Нр░кр▒Ир░░р▒Лр░ор▒Жр░╕р░┐р░лр▒Жр░ир▒Н р░╡р░Вр░Яр░┐ р░ор▒Ир░Яр░┐р░╕р▒Ир░бр▒Нр░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п: р░Хр▒Ар░Яр░Хр░ир░╛р░╢р░Х р░╕р░мр▒Нр░мр▒Б, р░ир░┐р░ор▒Нр░о р░Жр░пр░┐р░▓р▒Н р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐, р░▓р▒Зр░жр░╛ р░кр▒Нр░░р░┐р░бр▒Зр░Яр░░р▒А р░ор▒Ир░Яр▒Нр░╕р▒НтАМр░ир▒Б р░кр░░р░┐р░Ър░пр░В р░Ър▒Зр░пр░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ╪з╪и╪з┘Е█М┌й┘╣█М┘Ж █М╪з ╪з╪│┘╛╪з╪ж╪▒┘И ┘Е█М╪│█М┘Б█М┘Ж ╪м█М╪│█Т ┘Е╪з╪ж┘╣█М╪│╪з╪ж┌И╪▓ ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┌й█М┌С█Т ┘Е╪з╪▒ ╪╡╪з╪и┘Ж╪М ┘Ж█М┘Е ┌й╪з ╪к█М┘Д ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒█М┌║╪М █М╪з ╪┤┌й╪з╪▒█М ┘Е╪з╪ж┘╣╪│ ┌й┘И ┘Е╪к╪╣╪з╪▒┘Б ┌й╪▒┘И╪з╪ж█М┌║█Ф'}
},

'Tomato___Target_Spot': {
    'en': {'default': 'Chemical: Apply a fungicide containing chlorothalonil or copper. Organic: Remove infected leaves, improve air circulation.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдпрд╛ рдХреЙрдкрд░ рдпреБрдХреНрдд рдХрд╡рдХрдирд╛рд╢реА рд▓рдЧрд╛рдПрдВред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдмреЗрд╣рддрд░ рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржХрзНрж▓рзЛрж░рзЛржерж╛рж▓рзЛржирж┐рж▓ ржмрж╛ рждрж╛ржорж╛-ржнрж┐рждрзНрждрж┐ржХ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЬрзИржм: рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржкрж╛рждрж╛ржЧрзБрж▓рж┐ рж╕рж░рж┐ржпрж╝рзЗ ржлрзЗрж▓рзБржи, ржмрж╛ржпрж╝рзБ рж╕ржЮрзНржЪрж╛рж▓ржи ржЙржирзНржиржд ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: ркХрлНрк▓рлЛрк░рлЛркерк╛рк▓рлЛркирк┐рк▓ ркЕркерк╡рк╛ ркдрк╛ркВркмрк╛рк╡рк╛рк│рк╛ рклрлВркЧркирк╛рк╢ркХркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд рккрк╛ркВркжркбрк╛ркУ ркжрлВрк░ ркХрк░рлЛ, рк╣рк╡рк╛ рккрлНрк░рк╡рк╛рк╣ рк╕рлБркзрк╛рк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓Хр│Нр▓▓р│Лр▓ер▓╛р▓▓р│Лр▓ир▓┐р▓▓р│Н р▓Ер▓ер▓╡р▓╛ р▓др▓╛р▓ор│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Тр▓│р▓Чр│Кр▓Вр▓б р▓лр▓Вр▓Чр▓┐р▓╕р│Ир▓бр│Н р▓Ер▓ир│Нр▓ир│Б р▓Ер▓ир│Нр▓╡р▓пр▓┐р▓╕р▓┐. р▓╕р▓╕р│Нр▓пр▓Ь: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓Ор▓▓р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓Чр▓╛р▓│р▓┐р▓п р▓╣р▓░р▓┐р▓╡р▓ир│Нр▓ир│Б р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤Хр╡Нр┤▓р╡Лр┤░р╡Лр┤др┤╛р┤▓р╡Лр┤гр┤┐р╡╜ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤Ър╡Жр┤ор╡Нр┤кр╡Н р┤Ер┤Яр┤Щр╡Нр┤Щр┤┐р┤п р┤лр┤Вр┤Чр┤┐р┤╕р╡Ир┤бр╡Н р┤кр╡Нр┤░р┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ур╡╝р┤Чр┤╛р┤ир┤┐р┤Хр╡Н: р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤Зр┤▓р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤╡р┤╛р┤пр╡Б р┤╕р┤Юр╡Нр┤Ър┤╛р┤░р┤В р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдХрд┐рдВрд╡рд╛ рддрд╛рдВрдмреЗ рдпреБрдХреНрдд рдмреБрд░рд╢реАрдирд╛рд╢рдХ рд▓рд╛рд╡рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рдиреЗ рдХрд╛рдвреВрди рдЯрд╛рдХрд╛, рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╡рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рд╡рд╛ рддрд╛рдорд╛ рдпреБрдХреНрдд рдлрдЩреНрдЧрд┐рд╕рд╛рдЗрдб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкрд╛рддрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рд╣рд╛рд╡рд╛рдХреЛ рд╕рд░реНрдХреБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмХрнНрм▓рнЛрм░рнЛрмерм╛рм▓рнЛрмирм┐рм▓рнН рмХрм┐рморнНрммрм╛ рмдрм╛рморнНрммрм╛ рмерм┐рммрм╛ рмлрмЩрнНрмЧрм┐рм╕рм╛рмЗрмбрнН рм▓рмЧрм╛рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмкрмдрнНрм░рмЧрнБрмбрм╝рм┐рмХрнБ рмХрм╛рмЯрм┐рмжрм┐рмЕрмирнНрмдрнБ, рммрм╛рнЯрнБ рмкрнНрм░рммрм╛рм╣ рмЙрмирнНрмирмд рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригри┐риХ: риХри▓рйЛри░рйЛриери╛ри▓рйЛриири┐ри▓ риЬри╛риВ ридри╛риорйЗ ри╡ри╛ри▓ри╛ рилрй░риЧрйАри╕ри╛риИриб ри▓риЧри╛риУред риЬрйИри╡ри┐риХ: ри╕рй░риХрйНри░риори┐рид рикрй▒ридрйЗ ри╣риЯри╛риУ, ри╣ри╡ри╛ рижрйА риЧридрйА ри╡ри┐рй▒риЪ ри╕рйБризри╛ри░ риХри░рйЛред'},
    'ta': {'default': 'ро░роЪро╛ропрой: роХрпБро│рпЛро░рпЛродро╛ро▓рпЛройро┐ро▓рпН роЕро▓рпНро▓родрпБ роЪрпЖроорпНрокрпБ роЕроЯроЩрпНроХро┐роп рокрпВроЮрпНроЪрпИроиро╛роЪро┐ройро┐ропрпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. роХро╛ро░ро┐роХ: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЗро▓рпИроХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН, роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░┐р░Х: р░Хр▒Нр░▓р▒Лр░░р▒Лр░ер░╛р░▓р▒Лр░ир░┐р░▓р▒Н р░▓р▒Зр░жр░╛ р░░р░╛р░Чр░┐ р░Хр░▓р░┐р░Чр░┐р░и р░лр░Вр░Чр░┐р░╕р▒Ир░бр▒НтАМр░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р░┐р░п: р░╕р░Вр░Хр▒Нр░░р░ор░┐р░д р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┌й┘Д┘И╪▒┘И╪к┌╛╪з┘Д┘И┘Ж█М┘Д █М╪з ╪к╪з┘Ж╪и█Т ┘╛╪▒ ┘Е╪┤╪к┘Е┘Д ┘Б┘Ж┌п╪│╪з╪ж┌И ┘Д┌п╪з╪ж█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ┘╛╪к█Т █Б┘╣╪з ╪п█М┌║╪М █Б┘И╪з ┌й█М ┌п╪▒╪п╪┤ ┌й┘И ╪и█Б╪к╪▒ ╪и┘Ж╪з╪ж█М┌║█Ф'}
},
    'Tomato___Tomato_Yellow_Leaf_Curl_Virus': {
    'en': {'default': 'Chemical: No effective chemical control for the virus itself. Control whitefly vectors with insecticides. Organic: Remove infected plants, control whitefly vectors with insecticidal soap.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рд╡рд╛рдпрд░рд╕ рдХреЗ рд▓рд┐рдП рдХреЛрдИ рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИред рдХреАрдЯрдирд╛рд╢рдХреЛрдВ рд╕реЗ рд╡реНрд╣рд╛рдЗрдЯрдлреНрд▓рд╛рдИ рд╡реИрдХреНрдЯрд░ рдХреЛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкреМрдзреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рдХреАрдЯрдирд╛рд╢рдХ рд╕рд╛рдмреБрди рд╕реЗ рд╡реНрд╣рд╛рдЗрдЯрдлреНрд▓рд╛рдИ рд╡реИрдХреНрдЯрд░ рдХреЛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржнрж╛ржЗрж░рж╛рж╕рзЗрж░ ржЬржирзНржп ржХрзЛржирзЛ ржХрж╛рж░рзНржпржХрж░ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржирзЗржЗред ржХрзАржЯржирж╛рж╢ржХ ржжрж┐ржпрж╝рзЗ рж╕рж╛ржжрж╛ ржорж╛ржЫрж┐ ржмрж╛рж╣ржХржХрзЗ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржХрж░рзБржиред ржЬрзИржм: рж╕ржВржХрзНрж░ржорж┐ржд ржЧрж╛ржЫржкрж╛рж▓рж╛ рж╕рж░рж╛ржи, ржХрзАржЯржирж╛рж╢ржХ рж╕рж╛ржмрж╛ржи ржжрж┐ржпрж╝рзЗ рж╕рж╛ржжрж╛ ржорж╛ржЫрж┐ ржмрж╛рж╣ржХржХрзЗ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: рк╡рк╛ркпрк░рк╕ ркорк╛ркЯрлЗ ркХрлЛркИ ркЕрк╕рк░ркХрк╛рк░ркХ рк░рк╛рк╕рк╛ркпркгрк┐ркХ ркирк┐ркпркВркдрлНрк░ркг ркиркерлА. ркЬркВркдрлБркирк╛рк╢ркХрлЛ рк╡ркбрлЗ рк╕рклрлЗркж ркорк╛ркЦрлАркирк╛ рк╡рк╛рк╣ркХрлЛркирлЗ ркирк┐ркпркВркдрлНрк░рк┐ркд ркХрк░рлЛ. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд ркЫрлЛркб ркжрлВрк░ ркХрк░рлЛ, ркЬркВркдрлБркирк╛рк╢ркХ рк╕рк╛ркмрлБ рк╡ркбрлЗ рк╕рклрлЗркж ркорк╛ркЦрлАркирк╛ рк╡рк╛рк╣ркХрлЛркирлЗ ркирк┐ркпркВркдрлНрк░рк┐ркд ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓╡р│Ир▓░р▓╕р│НтАМр▓Чр│Ж р▓пр▓╛р▓╡р│Бр▓жр│З р▓кр▓░р▓┐р▓гр▓╛р▓ор▓Хр▓╛р▓░р▓┐ р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓гр▓╡р▓┐р▓▓р│Нр▓▓. р▓Хр│Ар▓Яр▓ир▓╛р▓╢р▓Хр▓Чр▓│р│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓мр▓┐р▓│р▓┐ р▓ир│Кр▓гр▓Чр▓│ р▓╡р▓╛р▓╣р▓Хр▓Чр▓│р▓ир│Нр▓ир│Б р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓┐р▓╕р▓┐. р▓╕р▓╛р▓╡р▓пр▓╡: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓╕р▓╕р│Нр▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓Хр│Ар▓Яр▓ир▓╛р▓╢р▓Х р▓╕р│Лр▓кр│НтАМр▓ир│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓мр▓┐р▓│р▓┐ р▓ир│Кр▓гр▓Чр▓│ р▓╡р▓╛р▓╣р▓Хр▓Чр▓│р▓ир│Нр▓ир│Б р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤╡р╡Ир┤▒р┤╕р┤┐р┤ир╡Н р┤лр┤▓р┤кр╡Нр┤░р┤жр┤ор┤╛р┤п р┤░р┤╛р┤╕р┤ир┤┐р┤пр┤ир╡Нр┤др╡Нр┤░р┤гр┤ор┤┐р┤▓р╡Нр┤▓. р┤Хр╡Ар┤Яр┤ир┤╛р┤╢р┤┐р┤ир┤┐р┤Хр╡╛ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Ър╡Нр┤Ър╡Н р┤╡р╡Жр┤│р╡Нр┤│р╡Ар┤Ър╡Нр┤Ър┤Хр┤│р╡Ж р┤ир┤┐р┤пр┤ир╡Нр┤др╡Нр┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Ьр╡Ир┤╡р┤В: р┤░р╡Лр┤Чр┤мр┤╛р┤зр┤пр╡Бр┤│р╡Нр┤│ р┤Ър╡Жр┤Яр┤┐р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤Хр╡Ар┤Яр┤ир┤╛р┤╢р┤┐р┤ир┤┐ р┤╕р╡Лр┤кр╡Нр┤кр╡Н р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Ър╡Нр┤Ър╡Н р┤╡р╡Жр┤│р╡Нр┤│р╡Ар┤Ър╡Нр┤Ър┤Хр┤│р╡Ж р┤ир┤┐р┤пр┤ир╡Нр┤др╡Нр┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рд╡рд┐рд╖рд╛рдгреВрд╕рд╛рдареА рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдирд╛рд╣реА. рдХреАрдЯрдХрдирд╛рд╢рдХрд╛рдВрдиреА рдкрд╛рдВрдврд▒реНрдпрд╛ рдорд╛рд╢реНрдпрд╛рдВрдЪреНрдпрд╛ рд╡рд╛рд╣рдХрд╛рдВрдирд╛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░рд╛. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рдЭрд╛рдбреЗ рдХрд╛рдврд╛, рдХреАрдЯрдХрдирд╛рд╢рдХ рд╕рд╛рдмрдгрд╛рдиреЗ рдкрд╛рдВрдврд▒реНрдпрд╛ рдорд╛рд╢реНрдпрд╛рдВрдЪреНрдпрд╛ рд╡рд╛рд╣рдХрд╛рдВрдирд╛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рднрд╛рдЗрд░рд╕рдХреЛ рд▓рд╛рдЧрд┐ рдХреБрдиреИ рдкреНрд░рднрд╛рд╡рдХрд╛рд░реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдиреНрддреНрд░рдг рдЫреИрдиред рдХреАрдЯрдирд╛рд╢рдХрд▓реЗ рд╕реЗрддреЛ рдЭрд┐рдВрдЧрд╛ рд╡рд╛рд╣рдХрд╣рд░реВрд▓рд╛рдИ рдирд┐рдпрдиреНрддреНрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдмрд┐рд░реБрд╡рд╛рд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рдХреАрдЯрдирд╛рд╢рдХ рд╕рд╛рдмреБрдирд▓реЗ рд╕реЗрддреЛ рдЭрд┐рдВрдЧрд╛ рд╡рд╛рд╣рдХрд╣рд░реВрд▓рд╛рдИ рдирд┐рдпрдиреНрддреНрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмнрнВрмдрм╛рмгрнБ рмкрм╛рмЗрмБ рмХрнМрмгрм╕рм┐ рмкрнНрм░рмнрм╛рммрм╢рм╛рм│рнА рм░рм╛рм╕рм╛рнЯрмирм┐рмХ рмирм┐рнЯрмирнНрмдрнНрм░рмг рмирм╛рм╣рм┐рмБред рмХрнАрмЯрмирм╛рм╢рмХ рм╕рм╣рм┐рмд рмзрм│рм╛ рморм╛рмЫрм┐ рмнрнЗрмХрнНрмЯрм░рмЧрнБрмбрм╝рм┐рмХрнБ рмирм┐рнЯрмирнНрмдрнНрм░рмг рмХрм░рмирнНрмдрнБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмЙрмжрнНрмнрм┐рмжрмЧрнБрмбрм╝рм┐рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБ, рмХрнАрмЯрмирм╛рм╢рмХ рм╕рм╛рммрнБрмирнН рм╕рм╣рм┐рмд рмзрм│рм╛ рморм╛рмЫрм┐ рмнрнЗрмХрнНрмЯрм░рмЧрнБрмбрм╝рм┐рмХрнБ рмирм┐рнЯрмирнНрмдрнНрм░рмг рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: ри╡ри╛риЗри░ри╕ ри▓риИ риХрйЛриИ рикрйНри░ринри╛ри╡ри╕ри╝ри╛ри▓рйА ри░ри╕ри╛риЗригриХ риири┐рипрй░ридри░риг риири╣рйАриВ ри╣рйИред риХрйАриЯриири╛ри╕ри╝риХри╛риВ риири╛ри▓ риЪри┐рй▒риЯрйА риорй▒риЦрйА рижрйЗ ри╡рйИриХриЯри░ри╛риВ риирйВрй░ риири┐рипрй░ридри░ри┐рид риХри░рйЛред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид рикрйМрижри┐риЖриВ риирйВрй░ ри╣риЯри╛риУ, риХрйАриЯриири╛ри╕ри╝риХ ри╕ри╛римриг риири╛ри▓ риЪри┐рй▒риЯрйА риорй▒риЦрйА рижрйЗ ри╡рйИриХриЯри░ри╛риВ риирйВрй░ риири┐рипрй░ридри░ри┐рид риХри░рйЛред'},
    'ta': {'default': 'ро░роЪро╛ропройроорпН: ро╡рпИро░ро╕рпБроХрпНроХрпБ роОроирпНродрокрпН рокропройрпБро│рпНро│ ро░роЪро╛ропройроХрпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБроорпН роЗро▓рпНро▓рпИ. рокрпВроЪрпНроЪро┐роХрпНроХрпКро▓рпНро▓ро┐роХро│ро╛ро▓рпН ро╡рпЖро│рпНро│рпИ роИроХрпНроХро│рпИроХрпН роХроЯрпНроЯрпБрокрпНрокроЯрпБродрпНродро╡рпБроорпН. роЗропро▒рпНроХрпИ: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЪрпЖроЯро┐роХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН, рокрпВроЪрпНроЪро┐роХрпНроХрпКро▓рпНро▓ро┐ роЪрпЛрокрпНрокро╛ро▓рпН ро╡рпЖро│рпНро│рпИ роИроХрпНроХро│рпИроХрпН роХроЯрпНроЯрпБрокрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░В: р░╡р▒Ир░░р░╕р▒НтАМр░Хр▒Б р░╕р░ор░░р▒Нр░ер░╡р░Вр░др░ор▒Ир░и р░░р░╕р░╛р░пр░и р░ир░┐р░пр░Вр░др▒Нр░░р░г р░▓р▒Зр░жр▒Б. р░кр▒Бр░░р▒Бр░Чр▒Бр░ор░Вр░жр▒Бр░▓р░др▒Л р░др▒Жр░▓р▒Нр░▓р░жр▒Лр░о р░╡р░╛р░╣р░Хр░╛р░▓р░ир▒Б р░ир░┐р░пр░Вр░др▒Нр░░р░┐р░Вр░Ър░Вр░бр░┐. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░пр░В: р░╕р▒Лр░Хр░┐р░и р░ор▒Кр░Хр▒Нр░Хр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░кр▒Бр░░р▒Бр░Чр▒Бр░ор░Вр░жр▒Бр░▓ р░╕р░мр▒Нр░мр▒Бр░др▒Л р░др▒Жр░▓р▒Нр░▓р░жр▒Лр░о р░╡р░╛р░╣р░Хр░╛р░▓р░ир▒Б р░ир░┐р░пр░Вр░др▒Нр░░р░┐р░Вр░Ър░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┘И╪з╪ж╪▒╪│ ┌й█Т ┘Д█М█Т ┌й┘И╪ж█М ┘Е╪д╪л╪▒ ┌й█М┘Е█М╪з╪ж█М ┌й┘Ж┘╣╪▒┘И┘Д ┘Ж█Б█М┌║ █Б█Т█Ф ┌й█М┌С█Т ┘Е╪з╪▒ ╪з╪п┘И█М╪з╪к ╪│█Т ╪│┘Б█М╪п ┘Е┌й┌╛█М ┌й█Т ┘И█М┌й┘╣╪▒┘И┌║ ┌й┘И ┌й┘Ж┘╣╪▒┘И┘Д ┌й╪▒█М┌║█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ┘╛┘И╪п┘И┌║ ┌й┘И █Б┘╣╪з ╪п█М┌║╪М ┌й█М┌С█Т ┘Е╪з╪▒ ╪╡╪з╪и┘Ж ╪│█Т ╪│┘Б█М╪п ┘Е┌й┌╛█М ┌й█Т ┘И█М┌й┘╣╪▒┘И┌║ ┌й┘И ┌й┘Ж┘╣╪▒┘И┘Д ┌й╪▒█М┌║█Ф'}
},
'Tomato___Tomato_mosaic_virus': {
    'en': {'default': 'Chemical: No effective chemical control for the virus itself. Organic: Remove infected plants, sanitize tools.'},
    'hi': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рд╡рд╛рдпрд░рд╕ рдХреЗ рд▓рд┐рдП рдХреЛрдИ рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдкреМрдзреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ, рдЙрдкрдХрд░рдгреЛрдВ рдХреЛ рд╕рд╛рдл рдХрд░реЗрдВред'},
    'bn': {'default': 'рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ: ржнрж╛ржЗрж░рж╛рж╕рзЗрж░ ржЬржирзНржп ржХрзЛржирзЛ ржХрж╛рж░рзНржпржХрж░ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржирзЗржЗред ржЬрзИржм: рж╕ржВржХрзНрж░ржорж┐ржд ржЧрж╛ржЫржкрж╛рж▓рж╛ рж╕рж░рж╛ржи, рж╕рж░ржЮрзНржЬрж╛ржоржЧрзБрж▓рж┐ рж╕рзНржпрж╛ржирж┐ржЯрж╛ржЗржЬ ржХрж░рзБржиред'},
    'gu': {'default': 'рк░рк╛рк╕рк╛ркпркгрк┐ркХ: рк╡рк╛ркпрк░рк╕ ркорк╛ркЯрлЗ ркХрлЛркИ ркЕрк╕рк░ркХрк╛рк░ркХ рк░рк╛рк╕рк╛ркпркгрк┐ркХ ркирк┐ркпркВркдрлНрк░ркг ркиркерлА. ркЬрлИрк╡рк┐ркХ: рк╕ркВркХрлНрк░ркорк┐ркд ркЫрлЛркб ркжрлВрк░ ркХрк░рлЛ, рк╕рк╛ркзркирлЛркирлЗ рк╕рлЗркирк┐ркЯрк╛ркИркЭ ркХрк░рлЛ.'},
    'kn': {'default': 'р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х: р▓╡р│Ир▓░р▓╕р│НтАМр▓Чр│Ж р▓пр▓╛р▓╡р│Бр▓жр│З р▓кр▓░р▓┐р▓гр▓╛р▓ор▓Хр▓╛р▓░р▓┐ р▓░р▓╛р▓╕р▓╛р▓пр▓ир▓┐р▓Х р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓гр▓╡р▓┐р▓▓р│Нр▓▓. р▓╕р▓╛р▓╡р▓пр▓╡: р▓╕р│Лр▓Вр▓Хр▓┐р▓д р▓╕р▓╕р│Нр▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓др│Жр▓Чр│Жр▓жр│Бр▓╣р▓╛р▓Хр▓┐, р▓Йр▓кр▓Хр▓░р▓гр▓Чр▓│р▓ир│Нр▓ир│Б р▓╕р│Нр▓╡р▓Ър│Нр▓Ыр▓Чр│Кр▓│р▓┐р▓╕р▓┐.'},
    'ml': {'default': 'р┤░р┤╛р┤╕р┤╡р┤╕р╡Нр┤др╡Б: р┤╡р╡Ир┤▒р┤╕р┤┐р┤ир╡Н р┤лр┤▓р┤кр╡Нр┤░р┤жр┤ор┤╛р┤п р┤░р┤╛р┤╕р┤ир┤┐р┤пр┤ир╡Нр┤др╡Нр┤░р┤гр┤ор┤┐р┤▓р╡Нр┤▓. р┤Ьр╡Ир┤╡р┤В: р┤░р╡Лр┤Чр┤мр┤╛р┤зр┤пр╡Бр┤│р╡Нр┤│ р┤Ър╡Жр┤Яр┤┐р┤Хр╡╛ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х, р┤Йр┤кр┤Хр┤░р┤гр┤Щр╡Нр┤Щр╡╛ р┤Ер┤гр╡Бр┤╡р┤┐р┤ор╡Бр┤Хр╡Нр┤др┤ор┤╛р┤Хр╡Нр┤Хр╡Бр┤Х.'},
    'mr': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рд╡рд┐рд╖рд╛рдгреВрд╕рд╛рдареА рдкреНрд░рднрд╛рд╡реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдирд╛рд╣реА. рд╕реЗрдВрджреНрд░рд┐рдп: рд╕рдВрдХреНрд░рдорд┐рдд рдЭрд╛рдбреЗ рдХрд╛рдврд╛, рд╕рд╛рдзрдиреЗ рд╕реНрд╡рдЪреНрдЫ рдХрд░рд╛.'},
    'ne': {'default': 'рд░рд╛рд╕рд╛рдпрдирд┐рдХ: рднрд╛рдЗрд░рд╕рдХреЛ рд▓рд╛рдЧрд┐ рдХреБрдиреИ рдкреНрд░рднрд╛рд╡рдХрд╛рд░реА рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдиреНрддреНрд░рдг рдЫреИрдиред рдЬреИрд╡рд┐рдХ: рд╕рдВрдХреНрд░рдорд┐рдд рдмрд┐рд░реБрд╡рд╛рд╣рд░реВ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реН, рдЙрдкрдХрд░рдгрд╣рд░реВ рд╕рдлрд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред'},
    'or': {'default': 'рм░рм╛рм╕рм╛рнЯрмирм┐рмХ: рмнрнВрмдрм╛рмгрнБ рмкрм╛рмЗрмБ рмХрнМрмгрм╕рм┐ рмкрнНрм░рмнрм╛рммрм╢рм╛рм│рнА рм░рм╛рм╕рм╛рнЯрмирм┐рмХ рмирм┐рнЯрмирнНрмдрнНрм░рмг рмирм╛рм╣рм┐рмБред рмЬрнИрммрм┐рмХ: рм╕рмВрмХрнНрм░рморм┐рмд рмЙрмжрнНрмнрм┐рмжрмЧрнБрмбрм╝рм┐рмХрнБ рм╣рмЯрм╛рмирнНрмдрнБ, рмЙрмкрмХрм░рмгрмЧрнБрмбрм╝рм┐рмХрнБ рм╕рм╛рмирм┐рмЯрм╛рмЗрмЬрнН рмХрм░рмирнНрмдрнБред'},
    'pa': {'default': 'ри░ри╕ри╛риЗригриХ: ри╡ри╛риЗри░ри╕ ри▓риИ риХрйЛриИ рикрйНри░ринри╛ри╡ри╕ри╝ри╛ри▓рйА ри░ри╕ри╛риЗригриХ риири┐рипрй░ридри░риг риири╣рйАриВ ри╣рйИред риЬрйИри╡ри┐риХ: ри╕рй░риХри░риори┐рид рикрйМрижри┐риЖриВ риирйВрй░ ри╣риЯри╛риУ, ри╕рй░рижри╛риВ риирйВрй░ ри░рйЛриЧри╛ригрйВ-риорйБриХрид риХри░рйЛред'},
    'ta': {'default': 'ро░роЪро╛ропройроорпН: ро╡рпИро░ро╕рпБроХрпНроХрпБ роОроирпНродрокрпН рокропройрпБро│рпНро│ ро░роЪро╛ропройроХрпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБроорпН роЗро▓рпНро▓рпИ. роЗропро▒рпНроХрпИ: рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЪрпЖроЯро┐роХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН, роХро░рпБро╡ро┐роХро│рпИ роЪрпБродрпНродрокрпНрокроЯрпБродрпНродро╡рпБроорпН.'},
    'te': {'default': 'р░░р░╕р░╛р░пр░ир░В: р░╡р▒Ир░░р░╕р▒НтАМр░Хр▒Б р░╕р░ор░░р▒Нр░ер░╡р░Вр░др░ор▒Ир░и р░░р░╕р░╛р░пр░и р░ир░┐р░пр░Вр░др▒Нр░░р░г р░▓р▒Зр░жр▒Б. р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░пр░В: р░╕р▒Лр░Хр░┐р░и р░ор▒Кр░Хр▒Нр░Хр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░кр░ир░┐р░ор▒Бр░Яр▒Нр░▓р░ир▒Б р░╢р▒Бр░нр▒Нр░░р░В р░Ър▒Зр░пр░Вр░бр░┐.'},
    'ur': {'default': '┌й█М┘Е█М╪з╪ж█М: ┘И╪з╪ж╪▒╪│ ┌й█Т ┘Д█М█Т ┌й┘И╪ж█М ┘Е╪д╪л╪▒ ┌й█М┘Е█М╪з╪ж█М ┌й┘Ж┘╣╪▒┘И┘Д ┘Ж█Б█М┌║ █Б█Т█Ф ┘Ж╪з┘Е█М╪з╪к█М: ┘Е╪к╪з╪л╪▒█Б ┘╛┘И╪п┘И┌║ ┌й┘И █Б┘╣╪з ╪п█М┌║╪М ╪з┘И╪▓╪з╪▒┘И┌║ ┌й┘И ╪╡╪з┘Б ┌й╪▒█М┌║█Ф'}
},
'Tomato___healthy': {
    'en': {'default': 'No treatment needed.'},
    'hi': {'default': 'рдХрд┐рд╕реА рдЙрдкрдЪрд╛рд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВред'},
    'bn': {'default': 'ржХрзЛржирзЛ ржЪрж┐ржХрж┐рзОрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗред'},
    'gu': {'default': 'ркХрлЛркИ рк╕рк╛рк░рк╡рк╛рк░ркирлА ркЬрк░рлВрк░ ркиркерлА.'},
    'kn': {'default': 'р▓пр▓╛р▓╡р│Бр▓жр│З р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓Ер▓Чр▓др│Нр▓пр▓╡р▓┐р▓▓р│Нр▓▓.'},
    'ml': {'default': 'р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕ р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤┐р┤▓р╡Нр┤▓.'},
    'mr': {'default': 'рдХреЛрдгрддреНрдпрд╛рд╣реА рдЙрдкрдЪрд╛рд░рд╛рдЪреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╛рд╣реА.'},
    'ne': {'default': 'рдХреБрдиреИ рдЙрдкрдЪрд╛рд░ рдЖрд╡рд╢реНрдпрдХ рдЫреИрдиред'},
    'or': {'default': 'рмХрнМрмгрм╕рм┐ рмЪрм┐рмХрм┐рмдрнНрм╕рм╛ рмЖрммрм╢рнНрнЯрмХ рмирм╛рм╣рм┐рмБред'},
    'pa': {'default': 'риХри┐ри╕рйЗ риЗри▓ри╛риЬ рижрйА ри▓рйЛрйЬ риири╣рйАриВред'},
    'ta': {'default': 'роЪро┐роХро┐роЪрпНроЪрпИ родрпЗро╡рпИропро┐ро▓рпНро▓рпИ.'},
    'te': {'default': 'р░Ор░▓р░╛р░Вр░Яр░┐ р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ер░╡р░╕р░░р░В р░▓р▒Зр░жр▒Б.'},
    'ur': {'default': '┌й╪│█М ╪╣┘Д╪з╪м ┌й█М ╪╢╪▒┘И╪▒╪к ┘Ж█Б█М┌║█Ф'}
}
}

# --- 1. Plant Disease Recognition Functions ---
def segment_leaf(image_array):
    # Convert to HSV for better color filtering
    hsv = cv2.cvtColor(image_array, cv2.COLOR_RGB2HSV)

    # Define green range (tune as needed)
    lower_green = np.array([25, 40, 40])
    upper_green = np.array([85, 255, 255])

    mask = cv2.inRange(hsv, lower_green, upper_green)

    # Optional: Clean up mask using morphological ops
    kernel = np.ones((5, 5), np.uint8)
    mask = cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel)

    # Apply mask
    result = cv2.bitwise_and(image_array, image_array, mask=mask)
    return result

@st.cache_resource
def load_disease_model():
    """Loads the TensorFlow model for disease prediction."""
    try:
        model = tf.keras.models.load_model('trained_model.h5') # Use absolute path
        return model
    except Exception as e:
        st.error(f"Error loading disease model: {e}")
        return None

disease_model = load_disease_model()
from keras.utils import load_img, img_to_array

def model_prediction(image_file):
    image = load_img(image_file, target_size=(128, 128))
    image_arr = img_to_array(image)  # тЬЕ no division
    image_arr = image_arr.reshape(1, 128, 128, 3)

    prediction = disease_model.predict(image_arr)
    predicted_index = np.argmax(prediction[0])
    predicted_disease = disease_class_names[predicted_index]

    return predicted_disease, prediction[0], image_arr

# --- 1.1. Treatment Recommendation Function (Now considers environment) ---
def get_treatment(predicted_disease, language,):
    """
    Retrieves the treatment recommendation for a given disease in the specified language,
    considering environmental conditions.

    Args:
        predicted_disease (str): The name of the predicted plant disease.
        language (str): The desired language ('en' for English, 'hi' for Hindi).
        tapman (float, optional): Current tapman.
        humidity (float, optional): Current humidity.
        varsha (float, optional): Recent varsha.

    Returns:
        str or None: The treatment recommendation if found, otherwise None.
    """
    if predicted_disease in treatment_rules:
        lang_rules = treatment_rules[predicted_disease].get(language, treatment_rules[predicted_disease]['en'])  # Default to English
        treatment = lang_rules.get('default')

        return treatment
    else:
        return None


# ----3. Fertilizer Model
fert_model = pickle.load(open('fert_model_simple.pkl', 'rb'))
crop_encoder = pickle.load(open('crop_encoder.pkl', 'rb'))
fertilizer_encoder = pickle.load(open('fertilizer_encoder.pkl', 'rb'))
def predict_fertilizer_simple(n, p, k, crop_name):
    try:
        crop_code = crop_encoder.transform([crop_name])[0]
        input_data = pd.DataFrame([[crop_code, n, p, k]], columns=['Crop', 'Nitrogen', 'Phosphorous', 'Potassium'])
        fert_code = fert_model.predict(input_data)[0]
        fert_name = fertilizer_encoder.inverse_transform([fert_code])[0]
        return fert_name
    except Exception as e:
        st.error(f"Prediction error: {e}")
        return None

# --- 2. Crop Recommendation Functions ---
# Load the model
try:
    crop_model = pickle.load(open('crop_recommendation_model3.pkl','rb'))
except Exception as e:
    st.error(f"Failed to load crop recommendation model or scalers: {e}")
    st.stop()

# Crop dictionary
crop_dict = {
    1: "Rice", 2: "Maize", 3: "Jute", 4: "Cotton", 5: "Coconut",
    6: "Papaya", 7: "Orange", 8: "Apple", 9: "Muskmelon", 10: "Watermelon",
    11: "Grapes", 12: "Mango", 13: "Banana", 14: "Pomegranate", 15: "Lentil",
    16: "Blackgram", 17: "Mungbean", 18: "Mothbeans", 19: "Pigeonpeas",
    20: "Kidneybeans", 21: "Chickpea", 22: "Coffee"
}

# Dictionary for crop names in Hindi
crop_dict_multi = {
    "en": {
    "Rice": "Rice",
    "Maize": "Maize",
    "Jute": "Jute",
    "Cotton": "Cotton",
    "Coconut": "Coconut",
    "Papaya": "Papaya",
    "Orange": "Orange",
    "Apple": "Apple",
    "Muskmelon": "Muskmelon",
    "Watermelon": "Watermelon",
    "Grapes": "Grapes",
    "Mango": "Mango",
    "Banana": "Banana",
    "Pomegranate": "Pomegranate",
    "Lentil": "Lentil",
    "Blackgram": "Blackgram",
    "Mungbean": "Mungbean",
    "Mothbeans": "Mothbeans",
    "Pigeonpeas": "Pigeonpeas",
    "Kidneybeans": "Kidneybeans",
    "Chickpea": "Chickpea",
    "Coffee": "Coffee"
},
    "hi": {
            "Rice": "рдЪрд╛рд╡рд▓",
            "Maize": "рдордХреНрдХрд╛",
            "Jute": "рдЬреВрдЯ",
            "Cotton": "рдХрдкрд╛рд╕",
            "Coconut": "рдирд╛рд░рд┐рдпрд▓",
            "Papaya": "рдкрдкреАрддрд╛",
            "Orange": "рд╕рдВрддрд░рд╛",
            "Apple": "рд╕реЗрдм",
            "Muskmelon": "рдЦрд░рдмреВрдЬрд╛",
            "Watermelon": "рддрд░рдмреВрдЬ",
            "Grapes": "рдЕрдВрдЧреВрд░",
            "Mango": "рдЖрдо",
            "Banana": "рдХреЗрд▓рд╛",
            "Pomegranate": "рдЕрдирд╛рд░",
            "Lentil": "рдорд╕реВрд░ рджрд╛рд▓",
            "Blackgram": "рдЙрдбрд╝рдж рджрд╛рд▓",
            "Mungbean": "рдореВрдВрдЧ рджрд╛рд▓",
            "Mothbeans": "рдореЛрда рджрд╛рд▓",
            "Pigeonpeas": "рдЕрд░рд╣рд░ рджрд╛рд▓",
            "Kidneybeans": "рд░рд╛рдЬрдорд╛",
            "Chickpea": "рдЪрдирд╛",
            "Coffee": "рдХреЙрдлреА"
        },
    "bn": {
        "Rice": "ржЪрж╛рж▓",
        "Maize": "ржнрзБржЯрзНржЯрж╛",
        "Jute": "ржкрж╛ржЯ",
        "Cotton": "рж╕рзБрждрж┐",
        "Coconut": "ржирж╛рж░ржХрзЗрж▓",
        "Papaya": "ржкрзЗржБржкрзЗ",
        "Orange": "ржХржорж▓рж╛",
        "Apple": "ржЖржкрзЗрж▓",
        "Muskmelon": "ржЦрж░ржмрзБржЬрж╛",
        "Watermelon": "рждрж░ржорзБржЬ",
        "Grapes": "ржЖржЩрзБрж░",
        "Mango": "ржЖржо",
        "Banana": "ржХрж▓рж╛",
        "Pomegranate": "ржбрж╛рж▓рж┐ржо",
        "Lentil": "ржорж╕рзБрж░ ржбрж╛рж▓",
        "Blackgram": "ржХрж╛рж▓рзЛ ржбрж╛рж▓",
        "Mungbean": "ржорзБржЧ ржбрж╛рж▓",
        "Mothbeans": "ржоржЯрж░ ржбрж╛рж▓",
        "Pigeonpeas": "рждрзБрж░ ржбрж╛рж▓",
        "Kidneybeans": "рж░рж╛ржЬржорж╛",
        "Chickpea": "ржЫрзЛрж▓рж╛",
        "Coffee": "ржХржлрж┐"
    },
    "gu": {
        "Rice": "ркЪрлЛркЦрк╛",
        "Maize": "ркоркХрк╛ркИ",
        "Jute": "ркЬрлВркЯ",
        "Cotton": "ркХрккрк╛рк╕",
        "Coconut": "ркирк╛рк│рк┐ркпрлЗрк░",
        "Papaya": "рккрккрлИркпрлБркВ",
        "Orange": "ркирк╛рк░ркВркЧрлА",
        "Apple": "рк╕рклрк░ркЬрки",
        "Muskmelon": "рк╢ркХрлНркХрк░ркЯрлЗркЯрлА",
        "Watermelon": "ркдрк░ркмрлВркЪ",
        "Grapes": "ркжрлНрк░рк╛ркХрлНрк╖",
        "Mango": "ркХрлЗрк░рлА",
        "Banana": "ркХрлЗрк│рлБркВ",
        "Pomegranate": "ркжрк╛ркбрко",
        "Lentil": "ркорк╕рлВрк░",
        "Blackgram": "ркЙрк░рлАркж ркжрк╛рк│",
        "Mungbean": "ркоркЧ ркжрк╛рк│",
        "Mothbeans": "ркорка ркжрк╛рк│",
        "Pigeonpeas": "ркдрлВрк╡рк░ ркжрк╛рк│",
        "Kidneybeans": "рк░рк╛ркЬркорк╛",
        "Chickpea": "ркЪркгрк╛",
        "Coffee": "ркХрлЛрклрлА"
    },
    "kn": {
        "Rice": "р▓Ер▓Хр│Нр▓Хр▓┐",
        "Maize": "р▓ор│Жр▓Хр│Нр▓Хр│Жр▓Ьр│Лр▓│",
        "Jute": "р▓Ьр│Нр▓пр│Вр▓Яр│Н",
        "Cotton": "р▓╣р▓др│Нр▓др▓┐",
        "Coconut": "р▓др│Жр▓Вр▓Чр▓┐р▓ир▓Хр▓╛р▓пр▓┐",
        "Papaya": "р▓кр▓кр│Нр▓кр▓╛р▓пр▓┐",
        "Orange": "р▓Хр▓┐р▓др│Нр▓др▓│р│Ж",
        "Apple": "р▓╕р│Зр▓мр│Б",
        "Muskmelon": "р▓Хр▓░р▓мр│Вр▓Ь",
        "Watermelon": "р▓Хр▓▓р│Нр▓▓р▓Вр▓Чр▓бр▓┐",
        "Grapes": "р▓жр│Нр▓░р▓╛р▓Хр│Нр▓╖р▓┐",
        "Mango": "р▓ор▓╛р▓╡р▓┐р▓ир▓╣р▓гр│Нр▓гр│Б",
        "Banana": "р▓мр▓╛р▓│р│Жр▓╣р▓гр│Нр▓гр│Б",
        "Pomegranate": "р▓жр▓╛р▓│р▓┐р▓Вр▓мр│Ж",
        "Lentil": "р▓ор▓╕р│Вр▓░ р▓жр▓╛р▓│",
        "Blackgram": "р▓Йр▓жр│Нр▓жр▓┐р▓и р▓мр│Зр▓│р│Ж",
        "Mungbean": "р▓╣р│Жр▓╕р▓░р│Бр▓Хр▓╛р▓│р│Б",
        "Mothbeans": "р▓ор▓╛р▓др│Нр▓Хр▓╛р▓│р│Б",
        "Pigeonpeas": "р▓др│Кр▓Чр▓░р▓┐ р▓мр│Зр▓│р│Ж",
        "Kidneybeans": "р▓░р▓╛р▓Ьр│Нр▓ор▓╛",
        "Chickpea": "р▓Хр▓бр▓▓р│Жр▓Хр▓╛р▓│р│Б",
        "Coffee": "р▓Хр▓╛р▓лр▓┐"
    },
    "ml": {
        "Rice": "р┤Ер┤░р┤┐",
        "Maize": "р┤Ър╡Лр┤│р┤В",
        "Jute": "р┤Ьр╡Нр┤пр╡Вр┤Яр╡Нр┤Яр╡Н",
        "Cotton": "р┤кр┤др╡Нр┤др╡Н",
        "Coconut": "р┤др╡Зр┤Щр╡Нр┤Щ",
        "Papaya": "р┤кр┤кр╡Нр┤кр┤╛р┤п",
        "Orange": "р┤Ур┤▒р┤Юр╡Нр┤Ър╡Н",
        "Apple": "р┤Жр┤кр╡Нр┤кр┤┐р┤│р╡Н",
        "Muskmelon": "р┤ор┤╕р╡Нр┤Хр╡Нр┤ор╡Жр┤▓р╡║",
        "Watermelon": "р┤др┤гр╡Нр┤гр┤┐р┤ор┤др╡Нр┤др╡╗",
        "Grapes": "р┤ор╡Бр┤ир╡Нр┤др┤┐р┤░р┤┐",
        "Mango": "р┤ор┤╛р┤Щр╡Нр┤Щ",
        "Banana": "р┤╡р┤╛р┤┤р┤кр╡Нр┤кр┤┤р┤В",
        "Pomegranate": "р┤ор┤╛р┤др┤│р┤ир┤╛р┤░р┤Щр╡Нр┤Щ",
        "Lentil": "р┤кр┤пр╡╝",
        "Blackgram": "р┤Йр┤┤р╡Бр┤ир╡Нр┤ир╡Н",
        "Mungbean": "р┤кр┤пр┤░р╡Н",
        "Mothbeans": "р┤ор╡Бр┤др╡Нр┤др┤┐р┤░р┤┐",
        "Pigeonpeas": "р┤др╡Лр┤░р╡╗р┤кр┤пр╡╝",
        "Kidneybeans": "р┤░р┤╛р┤Ьр┤о",
        "Chickpea": "р┤Хр┤Яр┤▓",
        "Coffee": "р┤Хр╡Лр┤лр┤┐"
    },
    "mr": {
        "Rice": "рддрд╛рдВрджреВрд│",
        "Maize": "рдордХрд╛",
        "Jute": "рдЬреВрдЯ",
        "Cotton": "рдХрд╛рдкреВрд╕",
        "Coconut": "рдирд╛рд░рд│",
        "Papaya": "рдкрдкрдИ",
        "Orange": "рд╕рдВрддреНрд░реА",
        "Apple": "рд╕рдлрд░рдЪрдВрдж",
        "Muskmelon": "рдЦрд░рдмреВрдЬ",
        "Watermelon": "рдХрд▓рд┐рдВрдЧрдб",
        "Grapes": "рджреНрд░рд╛рдХреНрд╖реЗ",
        "Mango": "рдЖрдВрдмрд╛",
        "Banana": "рдХреЗрд│реА",
        "Pomegranate": "рджрд╛рд│рд┐рдВрдм",
        "Lentil": "рдорд╕реВрд░ рдбрд╛рд│",
        "Blackgram": "рдЙрдбреАрдж рдбрд╛рд│",
        "Mungbean": "рдореВрдЧ рдбрд╛рд│",
        "Mothbeans": "рдорда рдбрд╛рд│",
        "Pigeonpeas": "рддреВрд░ рдбрд╛рд│",
        "Kidneybeans": "рд░рд╛рдЬрдорд╛",
        "Chickpea": "рд╣рд░рднрд░рд╛",
        "Coffee": "рдХреЙрдлреА"
    },
    "ne": {
        "Rice": "рдЪрд╛рдорд▓",
        "Maize": "рдордХреИ",
        "Jute": "рдЬреБрдЯ",
        "Cotton": "рдХрдкрд╛рд╕",
        "Coconut": "рдирд╛рд░рд┐рд╡рд▓",
        "Papaya": "рдореЗрд╡рд╛",
        "Orange": "рд╕реБрдиреНрддрд▓рд╛",
        "Apple": "рд╕реНрдпрд╛рдЙ",
        "Muskmelon": "рдЦрд░рдмреБрдЬрд╛",
        "Watermelon": "рддрд░рдмреБрдЬрд╛",
        "Grapes": "рдЕрдВрдЧреБрд░",
        "Mango": "рдЖрдБрдк",
        "Banana": "рдХреЗрд░рд╛",
        "Pomegranate": "рдЕрдирд╛рд░",
        "Lentil": "рдорд╕реБрд░",
        "Blackgram": "рдХрд╛рд▓реЛ рджрд╛рд▓",
        "Mungbean": "рдореБрдЩреНрдЧ рджрд╛рд▓",
        "Mothbeans": "рдорд╕реБрд░рд╛",
        "Pigeonpeas": "рдЕрд░рд╣рд░",
        "Kidneybeans": "рд░рд╛рдЬрдорд╛",
        "Chickpea": "рдЪрдирд╛",
        "Coffee": "рдХрдлреА"
    },
    "or": {
        "Rice": "рмЪрм╛рмЙрм│",
        "Maize": "рмормХрм╛",
        "Jute": "рмЬрнБрмЯ",
        "Cotton": "рмХрмкрм╛рм╕",
        "Coconut": "рмирмбрм┐рмЖ",
        "Papaya": "рмкрмкрм┐рмдрм╛",
        "Orange": "рмХрморм│рм╛",
        "Apple": "рм╕рнЗрмЙ",
        "Muskmelon": "рмЦрм░рммрнБрмЬ",
        "Watermelon": "рмдрм░рмнрнБрмЬ",
        "Grapes": "рмжрнНрм░рм╛рмХрнНрм╖рм╛",
        "Mango": "рмЖрморнНрмм",
        "Banana": "рмХрмжрм│рнА",
        "Pomegranate": "рмжрм╛рм│рм┐рморнНрмм",
        "Lentil": "рморм╕рнБрм░",
        "Blackgram": "рммрм┐рм░рм┐",
        "Mungbean": "рморнБрмЧ",
        "Mothbeans": "рмормЯрм┐",
        "Pigeonpeas": "рмдрнБрм░рм┐",
        "Kidneybeans": "рм░рм╛рмЬрморм╛",
        "Chickpea": "рмЪрмирм╛",
        "Coffee": "рмХрмлрм┐"
    },
    "pa": {
        "Rice": "риЪрйМри▓",
        "Maize": "риорй▒риХрйА",
        "Jute": "риЬрйВриЯ",
        "Cotton": "риХрикри╛ри╣",
        "Coconut": "риири╛ри░рйАриЕри▓",
        "Papaya": "рикрикрйАридри╛",
        "Orange": "ри╕рй░ридри░ри╛",
        "Apple": "ри╕рйЗрим",
        "Muskmelon": "риЦри░римрйВриЬри╛",
        "Watermelon": "ридри░римрйВриЬ",
        "Grapes": "риЕрй░риЧрйВри░",
        "Mango": "риЖрио",
        "Banana": "риХрйЗри▓ри╛",
        "Pomegranate": "риЕриири╛ри░",
        "Lentil": "риори╕рйВри░ рижри╛ри▓",
        "Blackgram": "риори╢ рижри╛ри▓",
        "Mungbean": "риорйВрй░риЧ рижри╛ри▓",
        "Mothbeans": "риорйЛрие рижри╛ри▓",
        "Pigeonpeas": "ридрйВри░ рижри╛ри▓",
        "Kidneybeans": "ри░ри╛риЬриори╛",
        "Chickpea": "риЪригри╛",
        "Coffee": "риХрйМрйЮрйА"
    },
    "ta": {
        "Rice": "роЕро░ро┐роЪро┐",
        "Maize": "роЪрпЛро│роорпН",
        "Jute": "роЬрпВроЯрпН",
        "Cotton": "рокро░рпБродрпНродро┐",
        "Coconut": "родрпЗроЩрпНроХро╛ропрпН",
        "Papaya": "рокрокрпНрокро╛ро│ро┐",
        "Orange": "роЖро░роЮрпНроЪрпБ",
        "Apple": "роЖрокрпНрокро┐ро│рпН",
        "Muskmelon": "роорпБро▓ро╛роорпНрокро┤роорпН",
        "Watermelon": "родро░рпНрокрпВроЪрогро┐",
        "Grapes": "родро┐ро░ро╛роЯрпНроЪрпИ",
        "Mango": "рооро╛роорпНрокро┤роорпН",
        "Banana": "ро╡ро╛ро┤рпИрокрпНрокро┤роорпН",
        "Pomegranate": "рооро╛родрпБро│роорпН рокро┤роорпН",
        "Lentil": "роороЪрпВро░ро┐ рокро░рпБрокрпНрокрпБ",
        "Blackgram": "роЙро│рпБроирпНродрпБ рокро░рпБрокрпНрокрпБ",
        "Mungbean": "рокропро▒рпБ",
        "Mothbeans": "роорпКродрпНродро┐ рокро░рпБрокрпНрокрпБ",
        "Pigeonpeas": "родрпБро╡ро░роорпН рокро░рпБрокрпНрокрпБ",
        "Kidneybeans": "роХро┐роЯрпНройро┐ рокрпАройрпНро╕рпН",
        "Chickpea": "роХроЯро▓рпИ",
        "Coffee": "роХро╛рокро┐"
    },
    "te": {
        "Rice": "р░мр░┐р░пр▒Нр░пр░В",
        "Maize": "р░ор▒Кр░Хр▒Нр░Хр░Ьр▒Кр░ир▒Нр░и",
        "Jute": "р░Ьр▒Вр░Яр▒Н",
        "Cotton": "р░кр░др▒Нр░др░┐",
        "Coconut": "р░Хр▒Кр░мр▒Нр░мр░░р░┐",
        "Papaya": "р░мр▒Кр░кр▒Нр░кр░╛р░пр░┐р░кр░Вр░бр▒Б",
        "Orange": "р░ир░╛р░░р░┐р░Вр░Ь",
        "Apple": "р░Жр░кр░┐р░▓р▒Н",
        "Muskmelon": "р░Хр░░р▒Нр░мр▒Вр░Ьр░╛",
        "Watermelon": "р░кр▒Бр░Ър▒Нр░Ър░Хр░╛р░п",
        "Grapes": "р░жр▒Нр░░р░╛р░Хр▒Нр░╖",
        "Mango": "р░ор░╛р░ор░┐р░бр░┐ р░кр░Вр░бр▒Б",
        "Banana": "р░Ер░░р░Яр░┐р░кр░Вр░бр▒Б",
        "Pomegranate": "р░жр░╛р░ир░┐р░ор▒Нр░о р░кр░Вр░бр▒Б",
        "Lentil": "р░ор░╕р▒Вр░░р▒Н р░кр░кр▒Нр░кр▒Б",
        "Blackgram": "р░ор░┐р░ир▒Бр░ор▒Б р░кр░кр▒Нр░кр▒Б",
        "Mungbean": "р░кр▒Жр░╕р░░р░кр░кр▒Нр░кр▒Б",
        "Mothbeans": "р░ор▒Кр░др▒Нр░др░┐ р░кр░кр▒Нр░кр▒Б",
        "Pigeonpeas": "р░Хр░Вр░жр░┐р░кр░кр▒Нр░кр▒Б",
        "Kidneybeans": "р░░р░╛р░Ьр▒Нр░ор░╛",
        "Chickpea": "р░╕р▒Жр░ир░Чр░▓р▒Б",
        "Coffee": "р░Хр░╛р░лр▒А"
    },
    "ur": {
        "Rice": "┌Ж╪з┘И┘Д",
        "Maize": "┘Е┌й╪ж█М",
        "Jute": "╪м█М┘И┘╣",
        "Cotton": "┌й┘╛╪з╪│",
        "Coconut": "┘Ж╪з╪▒█М┘Д",
        "Papaya": "┘╛┘╛█М╪к╪з",
        "Orange": "╪│┘Ж╪к╪▒█Б",
        "Apple": "╪│█М╪и",
        "Muskmelon": "╪о╪▒╪и┘И╪▓█Б",
        "Watermelon": "╪к╪▒╪и┘И╪▓",
        "Grapes": "╪з┘Ж┌п┘И╪▒",
        "Mango": "╪в┘Е",
        "Banana": "┌й█М┘Д╪з",
        "Pomegranate": "╪з┘Ж╪з╪▒",
        "Lentil": "┘Е╪│┘И╪▒ ┌й█М ╪п╪з┘Д",
        "Blackgram": "┌й╪з┘Д█М ╪п╪з┘Д",
        "Mungbean": "┘Е┘И┘Ж┌п ╪п╪з┘Д",
        "Mothbeans": "┘Е┘И┘╣┌╛ ╪п╪з┘Д",
        "Pigeonpeas": "╪з╪▒█Б╪▒ ┌й█М ╪п╪з┘Д",
        "Kidneybeans": "╪▒╪з╪м┘Е╪з",
        "Chickpea": "┌Ж┘Ж╪з",
        "Coffee": "┌й╪з┘Б█М"
    }
}

# --3 Crop Names in Fertlizer recommendation in Hindi
def get_crop_display_and_mapping(crop_options, lang_code):
    fert_crop_dict = {
        "hi": {
            "Cotton": "рдХрдкрд╛рд╕",
            "Sugarcane": "рдЧрдиреНрдирд╛",
            "Paddy": "рдзрд╛рди",
            "Maize": "рдордХреНрдХрд╛",
            "Pulses": "рджрд╛рд▓реЗрдВ",
            "Barley": "рдЬреМ",
            "Millets": "рдмрд╛рдЬрд░рд╛",
            "Wheat": "рдЧреЗрд╣реВрдВ",
            "Ground Nuts": "рдореВрдВрдЧрдлрд▓реА",
            "Tobacco": "рддрдВрдмрд╛рдХреВ",
            "Oil seeds": "рддрд┐рд▓рд╣рди",
            "Banana": "рдХреЗрд▓рд╛",
            "Lentil": "рдорд╕реВрд░ рджрд╛рд▓",
            "Coffee": "рдХреЙрдлреА",
            "Jute": "рдЬреВрдЯ"
        },
        "bn": {
            "Cotton": "рж╕рзБрждрж┐",
            "Sugarcane": "ржЖржЦ",
            "Paddy": "ржзрж╛ржи",
            "Maize": "ржнрзБржЯрзНржЯрж╛",
            "Pulses": "ржбрж╛рж▓",
            "Barley": "ржпржм",
            "Millets": "рж╢рзНржпрж╛ржорж╛",
            "Wheat": "ржЧржо",
            "Ground Nuts": "ржЪрж┐ржирж╛ ржмрж╛ржжрж╛ржо",
            "Tobacco": "рждрж╛ржорж╛ржХ",
            "Oil seeds": "рждрзЗрж▓ржмрзАржЬ",
            "Banana": "ржХрж▓рж╛",
            "Lentil": "ржорж╕рзБрж░ ржбрж╛рж▓",
            "Coffee": "ржХржлрж┐",
            "Jute": "ржкрж╛ржЯ"
        },
        "gu": {
            "Cotton": "ркХрккрк╛рк╕",
            "Sugarcane": "ркЙркВркЦ",
            "Paddy": "ркзрк╛рки",
            "Maize": "ркоркХрк╛ркИ",
            "Pulses": "ркжрк╛рк│",
            "Barley": "ркЬрлМ",
            "Millets": "ркмрк╛ркЬрк░рлА",
            "Wheat": "ркШркЙркВ",
            "Ground Nuts": "ркЬрлВркВркирлА",
            "Tobacco": "ркзрлВркорлНрк░рккрк╛рки рккркдрлНрк░",
            "Oil seeds": "ркдрлЗрк▓ркмрлАркЬ",
            "Banana": "ркХрлЗрк▓рлБркВ",
            "Lentil": "ркорк╕рлВрк░",
            "Coffee": "ркХрлЛрклрлА",
            "Jute": "ркЬрлВркЯ"
        },
        "kn": {
            "Cotton": "р▓╣р▓др│Нр▓др▓┐",
            "Sugarcane": "р▓Хр▓мр│Нр▓мр│Б",
            "Paddy": "р▓Ер▓Хр│Нр▓Хр▓┐",
            "Maize": "р▓Ьр│Лр▓│",
            "Pulses": "р▓кр▓▓р│Нр▓╕р│Н",
            "Barley": "р▓Ьр│Л",
            "Millets": "р▓╕р▓┐р▓░р▓┐р▓зр▓╛р▓ир│Нр▓пр▓Чр▓│р│Б",
            "Wheat": "р▓Чр│Лр▓зр▓┐",
            "Ground Nuts": "р▓╢р│Зр▓Вр▓Чр▓╛",
            "Tobacco": "р▓др▓ор▓╛р▓Хр│Б",
            "Oil seeds": "р▓Ор▓гр│Нр▓гр│Ж р▓мр│Ар▓Ьр▓Чр▓│р│Б",
            "Banana": "р▓мр▓╛р▓│р│Жр▓╣р▓гр│Нр▓гр│Б",
            "Lentil": "р▓др│Кр▓Чр▓░р▓┐ р▓мр│Зр▓│р│Ж",
            "Coffee": "р▓Хр▓╛р▓лр▓┐",
            "Jute": "р▓Ьр│Нр▓пр│Вр▓Яр│Н"
        },
        "ml": {
            "Cotton": "р┤кр┤др╡Нр┤др╡Б",
            "Sugarcane": "р┤Хр┤░р┤┐р┤ор╡Нр┤кр╡Н",
            "Paddy": "р┤ир╡Жр┤▓р╡Нр┤▓р╡Н",
            "Maize": "р┤Ър╡Лр┤▓р┤В",
            "Pulses": "р┤кр╡╛р┤╕р╡Н",
            "Barley": "р┤пр┤╡р┤В",
            "Millets": "р┤Ър╡Ар┤░",
            "Wheat": "р┤Чр╡Лр┤др┤ор╡Нр┤кр╡Н",
            "Ground Nuts": "р┤ир┤┐р┤▓р┤Хр╡Нр┤Хр┤Яр┤▓",
            "Tobacco": "р┤кр╡Бр┤Хр┤пр┤┐р┤▓",
            "Oil seeds": "р┤Ор┤гр╡Нр┤гр┤╡р┤┐р┤др╡Нр┤др╡Бр┤Хр╡╛",
            "Banana": "р┤╡р┤╛р┤┤р┤кр╡Нр┤кр┤┤р┤В",
            "Lentil": "р┤кр┤пр╡╝",
            "Coffee": "р┤Хр╡Лр┤лр┤┐",
            "Jute": "р┤Ьр╡Нр┤пр╡Вр┤Яр╡Нр┤Яр╡Н"
        },
        "mr": {
            "Cotton": "рдХрд╛рдкреВрд╕",
            "Sugarcane": "рдКрд╕",
            "Paddy": "рддрд╛рдВрджреВрд│",
            "Maize": "рдордХрд╛",
            "Pulses": "рдбрд╛рд│реА",
            "Barley": "рдЬрд╡",
            "Millets": "рдирд╛рдЪрдгреА",
            "Wheat": "рдЧрд╣реВ",
            "Ground Nuts": "рд╢реЗрдВрдЧрджрд╛рдгреЗ",
            "Tobacco": "рддрдВрдмрд╛рдЦреВ",
            "Oil seeds": "рддреЗрд▓рдмрд┐рдпрд╛",
            "Banana": "рдХреЗрд│реА",
            "Lentil": "рдорд╕реВрд░",
            "Coffee": "рдХреЙрдлреА",
            "Jute": "рдЬреВрдЯ"
        },
        "ne": {
            "Cotton": "рдХрдкрд╛рд╕",
            "Sugarcane": "рдЙрдЦреБ",
            "Paddy": "рдзрд╛рди",
            "Maize": "рдордХреИ",
            "Pulses": "рджрд╛рд▓",
            "Barley": "рдЬреМ",
            "Millets": "рдХреЛрджреЛ",
            "Wheat": "рдЧрд╣реБрдБ",
            "Ground Nuts": "рдмрджрд╛рдо",
            "Tobacco": "рддрдорд╛рдЦреБ",
            "Oil seeds": "рддреЗрд▓ рдмреАрдЙ",
            "Banana": "рдХреЗрд░рд╛",
            "Lentil": "рдорд╕реБрд░",
            "Coffee": "рдХрдлреА",
            "Jute": "рдЬреБрдЯ"
        },
        "or": {
            "Cotton": "рмкрмЯ",
            "Sugarcane": "рмЦрмгрнНрмбрм╕рм╛рм│рм┐",
            "Paddy": "рмзрм╛рми",
            "Maize": "рмнрнБрмЯрм╛",
            "Pulses": "рмбрм╛рм▓",
            "Barley": "рмпрмм",
            "Millets": "рмормгрм┐",
            "Wheat": "рмЧрм╣рмо",
            "Ground Nuts": "рмЪрм┐рмирм╛рммрм╛рмжрм╛рмо",
            "Tobacco": "рмзрнВрмормкрм╛рми рмкрмдрнНрм░",
            "Oil seeds": "рмдрнЗрм▓ рм╢рм╕рнНрнЯ",
            "Banana": "рмХрмжрм│рнА",
            "Lentil": "рморм╕рнБрм░",
            "Coffee": "рмХрмлрм┐",
            "Jute": "рмЬрнБрмЯ"
        },
        "pa": {
            "Cotton": "риХрикри╛ри╣",
            "Sugarcane": "риЧрй░риири╛",
            "Paddy": "риЪрйМри▓",
            "Maize": "риорй▒риХрйА",
            "Pulses": "рижри╛ри▓ри╛риВ",
            "Barley": "риЬрйМ",
            "Millets": "римри╛риЬри░ри╛",
            "Wheat": "риЧрй░риврио",
            "Ground Nuts": "риорйВрй░риЧрилри▓рйА",
            "Tobacco": "ридриори╛риХрйВ",
            "Oil seeds": "ридрйЗри▓ римрйАриЬ",
            "Banana": "риХрйЗри▓ри╛",
            "Lentil": "риори╕рйВри░",
            "Coffee": "риХрйМрйЮрйА",
            "Jute": "риЬрйВриЯ"
        },
        "ta": {
            "Cotton": "рокро░рпБродрпНродро┐",
            "Sugarcane": "роХро░рпБроорпНрокрпБ",
            "Paddy": "роирпЖро▓рпН",
            "Maize": "роЪрпЛро│роорпН",
            "Pulses": "рокро░рпБрокрпНрокрпБ ро╡роХрпИроХро│рпН",
            "Barley": "рокро╛ро░рпНро▓ро┐",
            "Millets": "роЪро┐ро▒рпБродро╛ройро┐ропроЩрпНроХро│рпН",
            "Wheat": "роХрпЛродрпБроорпИ",
            "Ground Nuts": "роиро┐ро▓роХрпНроХроЯро▓рпИ",
            "Tobacco": "рокрпБроХрпИропро┐ро▓рпИ",
            "Oil seeds": "роОрогрпНрогрпЖропрпН ро╡ро┐родрпИроХро│рпН",
            "Banana": "ро╡ро╛ро┤рпИрокрпНрокро┤роорпН",
            "Lentil": "роороЪрпВро░ро┐ рокро░рпБрокрпНрокрпБ",
            "Coffee": "роХро╛рокрпНрокро┐",
            "Jute": "роЬрпВроЯрпН"
        },
        "te": {
            "Cotton": "р░кр░др▒Нр░др░┐",
            "Sugarcane": "р░Ър▒Жр░░р░Хр▒Б",
            "Paddy": "р░мр░┐р░пр▒Нр░пр░В",
            "Maize": "р░ор▒Кр░Хр▒Нр░Хр░Ьр▒Кр░ир▒Нр░и",
            "Pulses": "р░кр░кр▒Нр░кр▒Бр░▓р▒Б",
            "Barley": "р░пр░╡р░ор▒Б",
            "Millets": "р░╕р░┐р░░р░┐р░зр░╛р░ир▒Нр░пр░╛р░▓р▒Б",
            "Wheat": "р░Чр▒Лр░зр▒Бр░о",
            "Ground Nuts": "р░╡р▒Жр░░р▒Бр░╕р▒Жр░ир▒Бр░Хр░╛р░пр░▓р▒Б",
            "Tobacco": "р░зр▒Бр░ор░кр░╛р░ир░╛р░Хр▒Б",
            "Oil seeds": "р░ир▒Вр░ир▒Ж р░Чр░┐р░Вр░Ьр░▓р▒Б",
            "Banana": "р░Ер░░р░Яр░┐р░кр░Вр░бр▒Б",
            "Lentil": "р░ор░╕р▒Вр░░р▒Н р░кр░кр▒Нр░кр▒Б",
            "Coffee": "р░Хр░╛р░лр▒А",
            "Jute": "р░Ьр▒Вр░Яр▒Н"
        },
        "ur": {
            "Cotton": "┌й┘╛╪з╪│",
            "Sugarcane": "┌п┘Ж╪з",
            "Paddy": "┌Ж╪з┘И┘Д",
            "Maize": "┘Е┌й╪ж█М",
            "Pulses": "╪п╪з┘Д█М┌║",
            "Barley": "╪м┘И",
            "Millets": "╪и╪з ╪м╪▒█Б",
            "Wheat": "┌п┘Ж╪п┘Е",
            "Ground Nuts": "┘Е┘И┘Ж┌п ┘╛┌╛┘Д█М",
            "Tobacco": "╪к┘Е╪и╪з┌й┘И",
            "Oil seeds": "╪к█М┘Д ┌й█Т ╪и█М╪м",
            "Banana": "┌й█М┘Д╪з",
            "Lentil": "┘Е╪│┘И╪▒",
            "Coffee": "┌й╪з┘Б█М",
            "Jute": "╪м█М┘И┘╣"
        }
    }

    if lang_code in fert_crop_dict:
        crop_display = [fert_crop_dict[lang_code].get(crop, crop) for crop in crop_options]
        crop_mapping = dict(zip(crop_display, crop_options))
    else:
        crop_display = crop_options
        crop_mapping = dict(zip(crop_display, crop_display))

    return crop_display, crop_mapping


def predict_crop(N, P, K, Temperature, humidity, ph, Rainfall, language):
    try:
        feature_list = [N, P, K, Temperature, humidity, ph, Rainfall]
        single_pred = np.array(feature_list).reshape(1, -1)
        prediction = crop_model.predict(single_pred)
        predicted_crop = prediction[0]
        
        # Normalize casing
        predicted_crop_normalized = predicted_crop.strip().title()
        st.write(f"Predicted crop: {predicted_crop_normalized}")

        # Multilingual dictionaries
        crop_name_translations = crop_dict_multi.get(language, {})
        message_translations = {
            "en": "{} is the best crop to be cultivated right there",
            "hi": "{} рдпрд╣рд╛рдБ рдЙрдЧрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рдмрд╕реЗ рдЕрдЪреНрдЫреА рдлрд╕рд▓ рд╣реИ",
            "bn": "{} ржПржЦрж╛ржирзЗ ржЪрж╛рж╖рзЗрж░ ржЬржирзНржп рж╕рж░рзНржмрзЛрждрзНрждржо ржлрж╕рж▓",
            "gu": "{} ркЕрк╣рлАркВ ркЙркЧрк╛ркбрк╡рк╛ ркорк╛ркЯрлЗ рк╢рлНрк░рлЗрк╖рлНрка рккрк╛ркХ ркЫрлЗ",
            "kn": "{} р▓Зр▓▓р│Нр▓▓р▓┐ р▓мр│Жр▓│р│Жр▓пр▓▓р│Б р▓Йр▓др│Нр▓др▓о р▓мр│Жр▓│р│Жр▓╡р▓╛р▓Чр▓┐р▓жр│Ж",
            "ml": "{} р┤Зр┤╡р┤┐р┤Яр╡Ж р┤Хр╡Гр┤╖р┤┐ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤ир┤др┤┐р┤ир╡Бр┤│р╡Нр┤│ р┤ор┤┐р┤Хр┤Ър╡Нр┤Ъ р┤╡р┤┐р┤│р┤пр┤╛р┤гр╡Н",
            "mr": "{} рдпреЗрдереЗ рд▓рд╛рдЧрд╡рдб рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рд╕рд░реНрд╡реЛрддреНрддрдо рдкреАрдХ рдЖрд╣реЗ",
            "ne": "{} рдпрд╣рд╛рдБ рдЦреЗрддреА рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ рд╕рдмреИрднрдиреНрджрд╛ рд░рд╛рдореНрд░реЛ рдмрд╛рд▓реА рд╣реЛ",
            "or": "{} рмПрмарм╛рм░рнЗ рмЪрм╛рм╖ рмкрм╛рмЗрмБ рм╕рм░рнНрммрнЛрмдрнНрмдрмо рмлрм╕рм▓",
            "pa": "{} риЗрй▒риерйЗ риЙриЧри╛риЙриг ри▓риИ ри╕рин ридрйЛриВ ри╡ризрйАриЖ рилри╝ри╕ри▓ ри╣рйИ",
            "ta": "{} роЗроЩрпНроХрпЗ рокропро┐ро░ро┐роЯ роЪро┐ро▒роирпНрод рокропро┐ро░рпН",
            "te": "{} р░Ер░Хр▒Нр░Хр░б р░кр░Вр░бр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░Йр░др▒Нр░др░ор░ор▒Ир░и р░кр░Вр░Я",
            "ur": "{} █М█Б╪з┌║ ┌й╪з╪┤╪к ┌й█Т ┘Д█М█Т ╪и█Б╪к╪▒█М┘Ж ┘Б╪╡┘Д █Б█Т"
        }
        fallback_message = message_translations.get(language, message_translations["en"])

        # Case 1: String crop name
        if isinstance(predicted_crop_normalized, str):
            crop_en = predicted_crop_normalized
            # Validate against English crop keys (not translated values)
            if crop_en in crop_dict_multi.get("en", {}):
                crop_local = crop_name_translations.get(crop_en, crop_en)
                result = fallback_message.format(crop_local)
            else:
                st.warning(f"Prediction is not a valid crop name: {crop_en}")
                result = {
                    "en": "Sorry, we could not determine the best crop to be cultivated with the provided data.",
                    "hi": "рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рд╣рдо рджрд┐рдП рдЧрдП рдбреЗрдЯрд╛ рдХреЗ рд╕рд╛рде рдЙрдЧрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рдмрд╕реЗ рдЕрдЪреНрдЫреА рдлрд╕рд▓ рдирд┐рд░реНрдзрд╛рд░рд┐рдд рдирд╣реАрдВ рдХрд░ рд╕рдХреЗред",
                    "bn": "ржжрзБржГржЦрж┐ржд, ржЖржорж░рж╛ ржкрзНрж░ржжрждрзНржд ржбрзЗржЯрж╛ ржжрж┐ржпрж╝рзЗ рж╕рзЗрж░рж╛ ржлрж╕рж▓ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рждрзЗ ржкрж╛рж░рж┐ржирж┐ред",
                    "gu": "ркорк╛ркл ркХрк░рлЛ, ркЕркорлЗ ркЖрккрлЗрк▓рк╛ ркбрлЗркЯрк╛ рк╕рк╛ркерлЗ рк╢рлНрк░рлЗрк╖рлНрка рккрк╛ркХркирлА ркнрк▓рк╛ркоркг ркХрк░рлА рк╢ркХрлНркпрк╛ ркирк╣рлАркВ.",
                    "kn": "р▓Хр│Нр▓╖р▓ор▓┐р▓╕р▓┐, р▓ир│Ар▓бр▓▓р▓╛р▓ж р▓бр│Зр▓Яр▓╛р▓жр│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓Йр▓др│Нр▓др▓о р▓мр│Жр▓│р│Ж р▓ир▓┐р▓░р│Нр▓зр▓░р▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓▓р│Нр▓▓.",
                    "ml": "р┤Хр╡Нр┤╖р┤ор┤┐р┤Хр╡Нр┤Хр┤гр┤В, р┤ир┤▓р╡Нр┤Хр┤┐р┤п р┤бр┤╛р┤▒р╡Нр┤▒р┤пр╡Бр┤Яр╡Ж р┤Ер┤Яр┤┐р┤╕р╡Нр┤ер┤╛р┤ир┤др╡Нр┤др┤┐р╡╜ р┤ор┤┐р┤Хр┤Ър╡Нр┤Ъ р┤╡р┤┐р┤│ р┤ир┤┐р╡╝р┤гр╡Нр┤гр┤пр┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Хр┤┤р┤┐р┤пр┤┐р┤▓р╡Нр┤▓.",
                    "mr": "рдорд╛рдл рдХрд░рд╛, рдЖрдореНрд╣реА рджрд┐рд▓реЗрд▓реНрдпрд╛ рдбреЗрдЯрд╛рд╡рд░реВрди рд╕рд░реНрд╡реЛрддреНрддрдо рдкреАрдХ рдард░рд╡реВ рд╢рдХрд▓реЛ рдирд╛рд╣реА.",
                    "ne": "рдорд╛рдл рдЧрд░реНрдиреБрд╣реЛрд╕реН, рджрд┐рдЗрдПрдХреЛ рдбрд╛рдЯрд╛рдмрд╛рдЯ рдЙрддреНрдХреГрд╖реНрдЯ рдмрд╛рд▓реА рдкрд╣рд┐рдЪрд╛рди рдЧрд░реНрди рд╕рдХрд┐рдПрдиред",
                    "or": "рморм╛рмл рмХрм░рмирнНрмдрнБ, рмЖрморнЗ рмжрм┐рмЖрмпрм╛рмЗрмерм┐рммрм╛ рмдрмернНрнЯрм░рнЗ рмнрм┐рмдрнНрмдрм┐ рмХрм░рм┐ рм╕рм░рнНрммрнЛрмдрнНрмдрмо рмлрм╕рм▓ рмирм┐рм░рнНрмгрнНрмгрнЯ рмХрм░рм┐рмкрм╛рм░рм┐рм▓рнБрмирм┐ред",
                    "pa": "риори╛рил риХри░риири╛, риЕри╕рйАриВ рижри┐рй▒ридрйЗ рибрйЗриЯри╛ рижрйЗ риЖризри╛ри░ 'ридрйЗ ри╕рин ридрйЛриВ ри╡ризрйАриЖ рилри╝ри╕ри▓ рижрйА рикриЫри╛риг риири╣рйАриВ риХри░ ри╕риХрйЗред",
                    "ta": "рооройрпНройро┐роХрпНроХро╡рпБроорпН, ро╡ро┤роЩрпНроХрокрпНрокроЯрпНроЯ родро░ро╡рпБроЯройрпН роЪро┐ро▒роирпНрод рокропро┐ро░рпИ родрпАро░рпНрооро╛ройро┐роХрпНроХ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ.",
                    "te": "р░Хр▒Нр░╖р░ор░┐р░Вр░Ър░Вр░бр░┐, р░Ер░Вр░жр░┐р░Вр░Ър░┐р░и р░бр▒Зр░Яр░╛ р░Жр░зр░╛р░░р░Вр░Чр░╛ р░Йр░др▒Нр░др░о р░кр░Вр░Яр░ир▒Б р░ир░┐р░░р▒Нр░гр░пр░┐р░Вр░Ър░▓р▒Зр░Хр░кр▒Лр░пр░╛р░ор▒Б.",
                    "ur": "┘Е╪╣╪░╪▒╪к╪М █Б┘Е ┘Б╪▒╪з█Б┘Е ┌й╪▒╪п█Б ┌И█М┘╣╪з ╪│█Т ╪и█Б╪к╪▒█М┘Ж ┘Б╪╡┘Д ┌й█М ╪┤┘Ж╪з╪о╪к ┘Ж█Б█М┌║ ┌й╪▒ ╪│┌й█Т█Ф"
                }.get(language, "Sorry, we could not determine the best crop to be cultivated with the provided data.")

        # Case 2: Model returned an integer (class index)
        elif isinstance(predicted_crop_normalized, int) and 1 <= predicted_crop_normalized <= 22:
            crop_en = crop_dict.get(predicted_crop_normalized, "Unknown")
            crop_local = crop_name_translations.get(crop_en, crop_en)
            result = fallback_message.format(crop_local)

        else:
            st.warning(f"Invalid prediction: {predicted_crop}")
            result = fallback_message.format("Unknown")

        return result

    except Exception as e:
        error_msg = {
            "en": f"An error occurred during crop prediction: {e}",
            "hi": f"рдлрд╕рд▓ рдХреА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдХреЗ рджреМрд░рд╛рди рдПрдХ рддреНрд░реБрдЯрд┐ рд╣реБрдИ: {e}"
        }.get(language, f"An error occurred: {e}")
        
        st.error(error_msg)
        return None
    
# --- 3. Main Streamlit App ---
# Inject CSS for styling
st.markdown("""
    <style>
        /* Overall padding and font */
        .reportview-container {
            padding: 2rem;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        /* Sidebar Styling */
        .css-1d391kg {
            background-color: #f0f2f6;
        }

        /* Header */
        h1, h2, h3 {
            color: #2c3e50;
        }

        /* Cards */
        .st-expanderHeader {
            background-color: #f8f9fa !important;
            font-weight: bold;
            border-radius: 10px;
        }

        /* Buttons */
        .stButton > button {
            background-color: #28a745;
            color: white;
            border-radius: 8px;
            padding: 0.5em 1em;
        }

        /* Footer */
        footer {visibility: hidden;}
    </style>
""", unsafe_allow_html=True)


def explain_prediction_with_lime(image_array, model):
    from lime import lime_image
    import numpy as np
    import matplotlib.pyplot as plt
    import cv2

    # Prepare LIME
    explainer = lime_image.LimeImageExplainer()
    explanation = explainer.explain_instance(
        image_array[0].astype('double'),
        model.predict,
        top_labels=1,
        hide_color=0,
        num_samples=1000
    )

    # Get explanation mask
    temp, mask = explanation.get_image_and_mask(
        explanation.top_labels[0],
        positive_only=True,
        num_features=20,
        hide_rest=False
    )

    # Original image
    original = image_array[0].astype(np.uint8)
    overlay = original.copy()

    # --- Get leaf mask ---
    leaf_mask = segment_leaf(original)  # RGB with background 0s
    leaf_binary = cv2.cvtColor(leaf_mask, cv2.COLOR_RGB2GRAY)
    leaf_binary = (leaf_binary > 0).astype(np.uint8)

    # --- Apply red-green tint only on leaf pixels ---
    for (segment, value) in explanation.local_exp[explanation.top_labels[0]]:
        color = np.array([0, 255, 0]) if value > 0 else np.array([255, 0, 0])  # green or red
        mask_segment = (mask == segment) & (leaf_binary == 1)
        overlay[mask_segment] = (0.5 * overlay[mask_segment] + 0.5 * color).astype(np.uint8)

    return overlay


def gemini_chat_response(prompt):
    try:
        if not prompt.strip():
            return "тЪая╕П You must type something to get a response."

        response = gemini_model.generate_content(prompt)
        return response.text if response.text.strip() else "тЪая╕П Gemini returned an empty response."
    except Exception as e:
        return f"тЭМ Gemini Error: {e}"
def main():
    
    lang_code_map = {
        "English": "en",
        "рд╣рд┐рдВрджреА": "hi",
        "Bengali": "bn",
        "Gujarati": "gu",
        "Kannada": "kn",
        "Malayalam": "ml",
        "Marathi": "mr",
        "Nepali": "ne",
        "Odia": "or",
        "Punjabi": "pa",
        "Tamil": "ta",
        "Telugu": "te",
        "Urdu": "ur",
    }
    
# --- Language Map and Translator ---
language_code_map = {
        "English": "en", "рд╣рд┐рдВрджреА": "hi", "ржмрж╛ржВрж▓рж╛": "bn", "ркЧрлБркЬрк░рк╛ркдрлА": "gu",
        "р▓Хр▓ир│Нр▓ир▓б": "kn", "р┤ор┤▓р┤пр┤╛р┤│р┤В": "ml", "рдорд░рд╛рдареА": "mr", "рдиреЗрдкрд╛рд▓реА": "ne",
        "рмУрмбрм╝рм┐рмЖ": "or", "рикрй░риЬри╛римрйА": "pa", "родрооро┐ро┤рпН": "ta", "р░др▒Жр░▓р▒Бр░Чр▒Б": "te", "╪з╪▒╪п┘И": "ur"
    }
translator = Translator()

def translate_text(text, dest='en'):
    unsupported_langs = ['ks', 'bho', 'brx', 'doi', 'kok', 'mai', 'mni', 'sa']

    if dest != 'en' and dest not in unsupported_langs:
        try:
            return translator.translate(text, dest=dest).text
        except Exception as e:
            st.warning(f"Translation failed: {e}")
            return text
    elif dest in unsupported_langs:
        st.warning(f"тЪая╕П Translation for '{dest}' is not supported yet. Showing in English.")
    return text


# --- Colored Sidebar Navigation ---
# Sidebar navigation with color map
st.sidebar.markdown("""
    <style>
    .sidebar-selectbox label {
        font-weight: bold;
        font-size: 18px;
        color: #2c3e50;
    }
    .sidebar-selectbox div[data-baseweb="select"] > div {
        background-color: #f4f4f4 !important;
        border-radius: 8px;
        padding: 10px;
    }
    </style>
""", unsafe_allow_html=True)

color_map = {
    "Home": "#3498db",
    "About": "#9b59b6",
    "Disease Recognition": "#e74c3c",
    "Crop Recommendation": "#2ecc71",
    "Fertilizer Recommendation": "#f39c12",
}

# If AI assistant is active, override nav label
if st.session_state.get("show_ai_assistant", False):
    selected_page = "ЁЯза AI Assistant"
    if st.sidebar.button("ЁЯФЩ Back to App"):
        st.session_state["show_ai_assistant"] = False
else:
    nav_options = list(color_map.keys())
    selected_page = st.sidebar.selectbox("ЁЯУМ **Navigation**", nav_options, key="nav")
    selected_language = st.sidebar.selectbox("ЁЯМР Choose Language", list(language_code_map.keys()), index=0)
    lang_code = language_code_map.get(selected_language, 'en')

# Display colored header even in assistant mode
header_color = color_map.get(selected_page, "#34495e")

header_title = "ANN DOOT" if selected_page == "Home" else selected_page

st.markdown(f"""
    <style>
    .glass-bar {{
        background: rgba(33, 150, 243, 0.5); /* Transparent blue */
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        padding: 16px;
        border-radius: 12px;
        text-align: center;
        color: white;
        font-size: 48px;
        font-weight: 600;
    }}
    </style>

    <div class="glass-bar">
        {header_title}
    </div>
    <br>
""", unsafe_allow_html=True)



app_mode = selected_page

translator = Translator()

def translate_text(text, dest='en'):
        if dest != 'en':
            try:
                return translator.translate(text, dest=dest).text
            except Exception as e:
                st.warning(f"Translation failed: {e}")
                return text
        return text

        app_mode = translate_text("Select Page", dest=lang_code),
        ["Home", "About", "Disease Recognition", "Crop Recommendation", "Fertilizer Recommendation"]
            


# Fallback to AI Assistant if selected in sidebar
if st.session_state.get("show_ai_assistant", False):
    app_mode = "ЁЯза AI Assistant"


if app_mode == "Home":
    # Set a full-screen background image only on Home page
    st.markdown(
    f"""
    <style>
    .stApp {{
        background-image: url("data:image/png;base64,{base64.b64encode(open('A.jpeg', 'rb').read()).decode()}");
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }}
    </style>
    """,
    unsafe_allow_html=True
)
    heading_text = translate_text("Get Started", dest=lang_code)
    para_text = translate_text("Select a page from the sidebar to explore the features!", dest=lang_code)

    # Add margin-top to push it slightly down from the "ANN DOOT" title
    st.markdown(f"""
        <div style='margin-top: 160px;'>
            <h2 style='font-size: 52px; color: white;'>{heading_text}</h2>
            <p style='font-size: 29px; color: white;'>{para_text}</p>
        </div>
    """, unsafe_allow_html=True)


    # st.markdown("""
    #     <style>
    #     .get-started {
    #         font-size: 2rem;
    #         font-weight: 600;
    #         color: white;
    #         margin-top: 100px; /* Move it down */
    #         text-align: left;
    #     }
    #     </style>
    #     <div class="get-started">Get Started </div>
    # """, unsafe_allow_html=True)

    # st.markdown('<p style="color: #ddd; font-size: 1rem;">Select a page from the sidebar to explore the features!</p>', unsafe_allow_html=True)


elif app_mode == "About":
        st.markdown(
        f"""
        <style>
        .stApp {{
            background-image: url("data:image/png;base64,{base64.b64encode(open('A.jpeg', 'rb').read()).decode()}");
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }}
        </style>
        """,
        unsafe_allow_html=True
    )    
        # Translate title and paragraph separately to avoid syntax issues
        about_heading = translate_text("About Us", dest=lang_code)
        about_intro = translate_text(
            "We are a team dedicated to developing solutions for plant disease recognition, crop recommendation, and fertilizer recommendation. "
            "Our goal is to assist farmers and gardeners in making informed decisions to improve crop health and productivity by considering various data sources. "
            "Welcome to the Plant Disease Recognition, Crop Recommendation System and Fertilizer Recommendation System! ЁЯМ┐ЁЯФН", dest=lang_code)

        about_mission = translate_text(
            "Our mission is to help farmers and gardeners in identifying plant diseases, recommending suitable crops, "
            "and suggesting the best fertilizers based on environmental and soil conditions.", dest=lang_code)

        how_it_works_heading = translate_text("How It Works", dest=lang_code)

        how_it_works_points = translate_text("""
        1. Plant Disease Recognition: Upload an image of a plant, or capture one using your camera, and our system will analyze it to detect any signs of diseases and suggest potential treatments, now considering environmental factors.  
        2. Crop Recommendation: Enter the environmental factors, and our system will suggest the most suitable crop to cultivate.  
        3. Fertilizer Recommendation: Based on the soil's nutrient levels (N, P, K) and the selected crop, the system suggests the most appropriate fertilizer to use.
        """, dest=lang_code)

        st.markdown(f"""
        <div style='
            margin-top: 80px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            padding: 30px;
            border-radius: 20px;
            background-color: rgba(255, 255, 255, 0.05);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        '>
            <h2 style='color: white; font-size: 36px;'>{about_heading}</h2>
            <p style='color: white; font-size: 25px; line-height: 1.8;'>{about_intro}</p>
            <p style='color: white; font-size: 25px; line-height: 1.8; margin-top: 20px;'><strong>{about_mission}</strong></p>
            <h3 style='color: white; font-size: 32px; margin-top: 40px;'>{how_it_works_heading}</h3>
            <p style='color: white; font-size: 22px; white-space: pre-wrap; line-height: 1.7;'>{how_it_works_points}</p>
        </div>
    """, unsafe_allow_html=True)



    


elif app_mode == "Disease Recognition":
             
        st.header(translate_text("Plant Disease Recognition", dest=lang_code))

        # тЬЕ Initialize variables before usage
        predicted_disease = None
        image_arr = None

        input_option = st.radio(
            translate_text("Choose input method:", dest=lang_code),
            [translate_text("Upload Image", dest=lang_code), translate_text("Capture Image", dest=lang_code)]
        )

        if input_option == translate_text("Upload Image", dest=lang_code):
            test_image = st.file_uploader(
                translate_text("Choose an Image:", dest=lang_code),
                type=["png", "jpg", "jpeg"]
            )
            if st.button(translate_text("Show Image", dest=lang_code)) and test_image is not None:
                image = Image.open(test_image)
                fig, ax = plt.subplots(figsize=(4, 4))
                ax.imshow(image)
                ax.axis('off')
                st.pyplot(fig, use_container_width=False)
                
                # st.image(test_image, use_container_width=True)

            if st.button(translate_text("Predict", dest=lang_code)) and test_image is not None:
                with st.spinner(translate_text("Please Wait..", dest=lang_code)):
                    st.write(translate_text("Our Prediction", dest=lang_code))
                    predicted_disease, prediction_probabilities, image_arr = model_prediction(test_image)

        # тЬЕ Display results after prediction
        if predicted_disease:
            translated_prediction = translate_text(f"Model is Predicting it's a {predicted_disease}", dest=lang_code)
            st.success(translated_prediction)

            from skimage.segmentation import mark_boundaries

            
            # Explanation with red-green overlay
            overlay_image = explain_prediction_with_lime(image_arr, disease_model)
            fig, ax = plt.subplots(figsize=(4,4))
            ax.imshow(overlay_image)
            ax.axis('off')
            st.pyplot(fig,use_container_width=False)


           # Treatment
            treatment = get_treatment(predicted_disease, lang_code,)
            if treatment:
                st.info(treatment)
            else:
                st.warning(translate_text("No specific treatment recommendation available for this disease yet.", dest=lang_code))
                
        elif input_option == translate_text("Capture Image", dest=lang_code):
            captured_image = st.camera_input(translate_text("Capture an image of the plant:", dest=lang_code))
            if captured_image:
                st.image(captured_image, caption=translate_text("Captured Image", dest=lang_code), use_container_width=True)
                if st.button(translate_text("Predict", dest=lang_code)):
                    with st.spinner(translate_text("Please Wait..", dest=lang_code)):
                        st.write(translate_text("Our Prediction", dest=lang_code))
                        with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as temp_file:
                            temp_file.write(captured_image.read())
                            temp_file_path = temp_file.name

                        predicted_disease, prediction_probabilities, image_arr = model_prediction(temp_file_path)

                        if predicted_disease:
                            translated_prediction = translate_text(f"Model is Predicting it's a {predicted_disease}", dest=lang_code)
                            st.success(translated_prediction)

                            from skimage.segmentation import mark_boundaries


                            # тЬЕ LIME Explanation for Captured Image
                            
                            overlay = explain_prediction_with_lime(image_arr, disease_model)
                            fig, ax = plt.subplots()
                            ax.imshow(overlay)
                            ax.axis('off')
                            st.pyplot(fig)


                            # Treatment
                            treatment = get_treatment(predicted_disease, lang_code,)
                            if treatment:
                                st.info(treatment)
                            else:
                                st.warning(translate_text("No specific treatment recommendation available for this disease yet.", dest=lang_code))
                        else:
                            st.error(translate_text("Failed to get prediction.", dest=lang_code))

                        import os
                        os.remove(temp_file_path)
elif app_mode == "Crop Recommendation":
         
        st.title(translate_text("Crop Recommendation System", dest=lang_code))

        # Get values from session_state or fallback to 0.0
        N = st.number_input(translate_text("Nitrogen (N)", dest=lang_code), min_value=0.0, max_value=200.0,
                            value=st.session_state.get("nitrogen_input", 0.0))
        P = st.number_input(translate_text("Phosphorus (P)", dest=lang_code), min_value=0.0, max_value=200.0,
                            value=st.session_state.get("phosphorus_input", 0.0))
        K = st.number_input(translate_text("Potassium (K)", dest=lang_code), min_value=0.0, max_value=200.0,
                            value=st.session_state.get("potassium_input", 0.0))
        tapman = st.number_input(translate_text("Temperature (┬░C)", dest=lang_code), min_value=0.0, max_value=50.0,
                                    value=st.session_state.get("temperature_input", 0.0))
        humidity = st.number_input(translate_text("Humidity (%)", dest=lang_code), min_value=0.0, max_value=100.0,
                                value=st.session_state.get("humidity_input", 0.0))
        ph = st.number_input(translate_text("pH", dest=lang_code), min_value=0.0, max_value=14.0,
                            value=st.session_state.get("ph_input", 0.0))
        varsha = st.number_input(translate_text("Rainfall (mm)", dest=lang_code), min_value=0.0, max_value=500.0,
                                value=st.session_state.get("rainfall_input", 0.0))

        if st.button(translate_text("Predict Crop", dest=lang_code)):
            result = predict_crop(N, P, K, tapman, humidity, ph, varsha, lang_code)
            if result:
                st.success(result)


elif app_mode == "ЁЯза AI Assistant":
    
         
    st.title("ЁЯдЦ AnnDoot AI Assistant")
    selected_language = st.sidebar.selectbox("ЁЯМР Choose Language", list(language_code_map.keys()), index=0)
    lang_code = language_code_map.get(selected_language, 'en')

    from streamlit_chat import message
    from gtts import gTTS
    import base64

    def get_model_usage_guidance(prompt):
        minimal_guides = {
            "crop": (
                "Go to the 'Crop Recommendation' page from the menu. "
                "Then enter: Nitrogen (N), Phosphorus (P), Potassium (K), Temperature, Humidity, pH, and Rainfall. "
                "You can either type these or use the ЁЯОд Voice Command."
            ),
            "fertilizer": (
                "Go to the 'Fertilizer Recommendation' page. "
                "Enter: Nitrogen (N), Phosphorus (P), Potassium (K), and select the crop name. "
                "You can provide inputs manually or by voice."
            ),
            "disease": (
                "Go to the 'Disease Recognition' page. "
                "Upload or capture a plant image. Optionally, enter Temperature, Humidity, and Rainfall."
            )
        }

        prompt_lower = prompt.lower()
        if "crop" in prompt_lower:
            return minimal_guides["crop"]
        elif "fertilizer" in prompt_lower:
            return minimal_guides["fertilizer"]
        elif "disease" in prompt_lower:
            return minimal_guides["disease"]
        else:
            # Fallback to Gemini
            fallback_instruction = (
                "You are a helpful assistant in an agricultural app. Provide model usage instructions "
                "based on model name: crop, fertilizer, or disease. Do not include soil type or location."
                "\nUser's query: " + prompt
            )
            return gemini_chat_response(fallback_instruction)



        if any(keyword in user_input.lower() for keyword in ["how to use", "use crop recommendation", "recommendation", "navigate to"]):
            usage_reply = get_model_usage_guidance(user_input, lang_code)
            st.session_state.messages.append({"role": "assistant", "content": usage_reply})
            speak_text(usage_reply, lang_code)

        elif any(keyword in user_input.lower() for keyword in ["what features", "required features", "what data needed", "what inputs", "needed to grow"]):
            if "crop" in user_input.lower():
                reply = "To recommend a crop, we use these features: Nitrogen (N), Phosphorus (P), Potassium (K), Temperature, Humidity, pH, and Rainfall."
            elif "fertilizer" in user_input.lower():
                reply = "For fertilizer recommendation, the model uses: Nitrogen (N), Phosphorus (P), Potassium (K), and Crop Name."
            elif "disease" in user_input.lower():
                reply = "For plant disease recognition, you need to upload a plant image. You can also provide Temperature, Humidity, and Rainfall for better treatment suggestions."
            else:
                reply = "Please specify which model you're referring to тАФ crop, fertilizer, or disease тАФ so I can list the required features."

            reply_translated = translate_text(reply, dest=lang_code)
            st.session_state.messages.append({"role": "assistant", "content": reply_translated})
            speak_text(reply_translated, lang_code)
    # --- Text-to-Speech Output ---
    def speak_text(text, lang_code):
        try:
            tts = gTTS(text=text, lang=lang_code)
            tts.save("reply.mp3")
            with open("reply.mp3", "rb") as audio_file:
                audio_bytes = audio_file.read()
                b64 = base64.b64encode(audio_bytes).decode()
                st.audio(f"data:audio/mp3;base64,{b64}", format="audio/mp3")
        except Exception as e:
            st.warning(f"TTS failed: {e}")        
    if "messages" not in st.session_state:
        st.session_state.messages = []

    # --- Voice/Text Input ---
    user_input = ""

    col1, col2 = st.columns([2, 1])
    with col1:
        user_input = st.text_input(translate_text("ЁЯТм Your question:", dest=lang_code))

    with col2:
        if st.button(translate_text("ЁЯОд Speak", dest=lang_code)):
            spoken_text = recognize_voice_command()
            if spoken_text:
                user_input = spoken_text
                user_input_en = translate_text(spoken_text, dest="en") if lang_code != "en" else spoken_text
                st.session_state['voice_input'] = spoken_text

            if spoken_text:
                translated_input = translate_text(spoken_text, dest='en')  # Translate to English for Gemini
                user_input = spoken_text  # Show original input
                st.session_state['voice_input'] = translated_input

    # тЬи Translate user input to English for Gemini
    user_input_en = translate_text(user_input, dest='en') if lang_code != 'en' else user_input

    # --- Respond Based on Detected Intent ---
    if user_input:
        st.session_state.messages.append({"role": "user", "content": user_input})
    
    # Normalize input by combining original + translated to English
    input_normalized = (user_input_en + " " + user_input).lower()

    # Universal "go" command patterns in English + transliterated Hindi + Indic
    go_commands = [
        "go to", "navigate to", "take me to", "open", "start",
        "le chalo", "le jao", "le jana", "рдЪрд▓реЛ", "рдЬрд╛рдУ", "рдЬрд╛рдирд╛",
        "ржЦрзБрж▓рзБржи", "ржЦрзБрж▓рзЗ ржжрж┐ржи", "рдЪрд╛рд▓реВ рдХрд░рд╛", "ржЦрзЛрж▓рзЛ", "рд╢реБрд░реВ рдХрд░рд╛", "рдЖрд░рдВрдн рдХрд░рд╛",  # Bengali, Marathi etc.
        "родрпКроЯроЩрпНроХрпБ", "рдЦреЛрд▓", "рдЦреЛрд▓реЛ", "рд╢реБрд░реВ", "рд╢реБрд░реВ рдХрд░реЛ", "р░Жр░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐", "р▓╢р│Бр▓░р│Бр▓ор▓╛р▓бр▓┐"
    ]

    crop_words = [
        "crop", "fasal", "рдлрд╕рд▓", "cosecha", "r├йcolte",
        "рдлрд╕рд▓реЗрдВ", "crops", "рдЦреЗрддреА", "ркЦрлЗркдрлА", "fasalu", "р░кр░Вр░Я", "ро╡ро┐ро╡роЪро╛ропроорпН", "р▓Хр│Гр▓╖р▓┐"
    ]

    fertilizer_words = [
        "fertilizer", "urvarak", "khad","рдЙрд░реНрд╡рд░рдХ", "fertilizante", "engrais",
        "рдЦрд╛рдж", "рдЦрдд", "рдЦрддреЗ", "ркоркЯркгрлБркВ", "роЙро░роЩрпНроХро│рпН", "роЙро░роорпН", "р▓кр│Лр▓╖р▓Хр▓╛р▓Вр▓╢"
    ]

    disease_words = [
        "disease", "rog", "рд░реЛрдЧ", "plague", "maladie", "illness",
        "рд░реЛрдЧ рдкрд╣рдЪрд╛рди", "рд░реЛрдЧ", "рд╡реНрдпрд╛рдзрд┐", "bimari", "р▓╡р│Нр▓пр▓╛р▓зр▓┐", "роирпЛропрпН", "р░╡р▒Нр░пр░╛р░зр░┐"
    ]

    if any(cmd in input_normalized for cmd in go_commands):
        if any(word in input_normalized for word in crop_words):
            st.session_state["nav"] = "Crop Recommendation"
            st.session_state["show_ai_assistant"] = False
            st.rerun()
        elif any(word in input_normalized for word in fertilizer_words):
            st.session_state["nav"] = "Fertilizer Recommendation"
            st.session_state["show_ai_assistant"] = False
            st.rerun()
        elif any(word in input_normalized for word in disease_words):
            st.session_state["nav"] = "Disease Recognition"
            st.session_state["show_ai_assistant"] = False
            st.rerun()
        else:
            reply = "рдХреГрдкрдпрд╛ рдмрддрд╛рдПрдВ рдХрд┐ рдЖрдк рдХрд┐рд╕ рдкреЗрдЬ рдкрд░ рдЬрд╛рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ: рдлрд╕рд▓ рд╕рд┐рдлрд╛рд░рд┐рд╢, рдЙрд░реНрд╡рд░рдХ рд╕рд┐рдлрд╛рд░рд┐рд╢, рдпрд╛ рд░реЛрдЧ рдкрд╣рдЪрд╛рдиред"
            reply_translated = translate_text(reply, dest=lang_code)
            st.session_state.messages.append({"role": "assistant", "content": reply_translated})
            speak_text(reply_translated, lang_code)




    # INTENT: Model usage help
    elif any(keyword in user_input_en.lower() for keyword in ["how to use", "use crop recommendation", "use fertilizer", "use disease", "recommendation"]):
        reply_en = get_model_usage_guidance(user_input_en)
        reply_translated = translate_text(reply_en, dest=lang_code)
        st.session_state.messages.append({"role": "assistant", "content": reply_translated})
        speak_text(reply_translated, lang_code)

    # INTENT: Ask for model input features
    elif any(keyword in user_input_en.lower() for keyword in ["what features", "required features", "what data needed", "what inputs", "needed to grow"]):
        if "crop" in user_input_en.lower():
            reply = "To recommend a crop, we use: Nitrogen (N), Phosphorus (P), Potassium (K), Temperature, Humidity, pH, and Rainfall."
        elif "fertilizer" in user_input_en.lower():
            reply = "To recommend a fertilizer, we use: Nitrogen (N), Phosphorus (P), Potassium (K), and the Crop Name."
        elif "disease" in user_input_en.lower():
            reply = "For disease recognition, upload or capture a plant image. Optionally, enter Temperature, Humidity, and Rainfall."
        else:
            reply = "Please mention whether you're asking about crop, fertilizer, or disease model."
        reply_translated = translate_text(reply, dest=lang_code)
        st.session_state.messages.append({"role": "assistant", "content": reply_translated})
        speak_text(reply_translated, lang_code)

    # DEFAULT: Let Gemini respond
    else:
        gemini_reply_en = gemini_chat_response(user_input_en)
        gemini_reply_translated = translate_text(gemini_reply_en, dest=lang_code)
        st.session_state.messages.append({"role": "assistant", "content": gemini_reply_translated})
        speak_text(gemini_reply_translated, lang_code)


    # --- Display chat messages ---
    for i, msg in enumerate(st.session_state.messages):
        message(msg["content"], is_user=(msg["role"] == "user"), key=str(i))

    
elif app_mode == "Fertilizer Recommendation":
     
    st.session_state.pop("auto_fert_predicted", None)  # тЬЕ Reset prediction state on rerun

    st.title(translate_text("Fertilizer Recommendation System", dest=lang_code))

    crop_options = crop_encoder.classes_.tolist()
    crop_display, crop_mapping = get_crop_display_and_mapping(crop_options, lang_code)

    # Get default or voice-set crop
    default_crop_display = st.session_state.get("selected_crop_display", crop_display[0])

    try:
        selected_index = crop_display.index(default_crop_display)
    except ValueError:
        selected_index = 0

    # Force dropdown to use value from session state if present
    selected_crop_display = st.session_state.get("selected_crop_display", crop_display[0])

    selected_crop_display = st.selectbox(
        translate_text("Select Crop", dest=lang_code),
        crop_display,
        index=crop_display.index(selected_crop_display)
    )

    selected_crop = crop_mapping[selected_crop_display]

    # Voice-aware NPK values
    N = st.number_input(
        translate_text("Nitrogen (N)", dest=lang_code),
        min_value=0,
        value=int(st.session_state.get("nitrogen_input", 0))
    )
    P = st.number_input(
        translate_text("Phosphorous (P)", dest=lang_code),
        min_value=0,
        value=int(st.session_state.get("phosphorus_input", 0))
    )
    K = st.number_input(
        translate_text("Potassium (K)", dest=lang_code),
        min_value=0,
        value=int(st.session_state.get("potassium_input", 0))
    )

    # Fertilizer translation dictionary
    fertilizer_dict = {
    "hi": {
        "10-26-26": "10-26-26 (рдирд╛рдЗрдЯреНрд░реЛрдЬрди, рдлреЙрд╕реНрдлреЛрд░рд╕)",
        "14-35-14": "14-35-14 (рдЙрдЪреНрдЪ рдлреЙрд╕реНрдлреЛрд░рд╕)",
        "17-17-17": "17-17-17 (рд╕рдВрддреБрд▓рд┐рдд рдЙрд░реНрд╡рд░рдХ)",
        "20-20": "20-20 (рд╕рдВрддреБрд▓рд┐рдд рдЙрд░реНрд╡рд░рдХ)",
        "28-28": "28-28 (рдЬреНрдпрд╛рджрд╛ рддрд╛рдХрдд)",
        "DAP": "рдбреАрдПрдкреА (рдбрд╛рдп-рдЕрдореЛрдирд┐рдпрдо рдлреЙрд╕реНрдлреЗрдЯ)",
        "Urea": "рдпреВрд░рд┐рдпрд╛"
    },
    "bn": {
        "10-26-26": "10-26-26 (ржирж╛ржЗржЯрзНрж░рзЛржЬрзЗржи, ржлрж╕ржлрж░рж╛рж╕)",
        "14-35-14": "14-35-14 (ржЙржЪрзНржЪ ржлрж╕ржлрж░рж╛рж╕)",
        "17-17-17": "17-17-17 (рж╕рж╛ржоржЮрзНржЬрж╕рзНржпржкрзВрж░рзНржг рж╕рж╛рж░)",
        "20-20": "20-20 (рж╕рж╛ржоржЮрзНржЬрж╕рзНржпржкрзВрж░рзНржг рж╕рж╛рж░)",
        "28-28": "28-28 (ржЕрждрж┐рж░рж┐ржХрзНржд рж╢ржХрзНрждрж┐)",
        "DAP": "ржбрж┐ржПржкрж┐ (ржбрж╛ржЗ-ржЕрзНржпрж╛ржорзЛржирж┐ржпрж╝рж╛ржо ржлрж╕ржлрзЗржЯ)",
        "Urea": "ржЗржЙрж░рж┐ржпрж╝рж╛"
    },
    "gu": {
        "10-26-26": "10-26-26 (ркирк╛ркИркЯрлНрк░рлЛркЬрки, рклрлЛрк╕рлНрклрк░рк╕)",
        "14-35-14": "14-35-14 (ркЙркЪрлНркЪ рклрлЛрк╕рлНрклрк░рк╕)",
        "17-17-17": "17-17-17 (рк╕ркВркдрлБрк▓рк┐ркд ркЦрк╛ркдрк░)",
        "20-20": "20-20 (рк╕ркВркдрлБрк▓рк┐ркд ркЦрк╛ркдрк░)",
        "28-28": "28-28 (рк╡ркзрлБ рк╢ркХрлНркдрк┐)",
        "DAP": "ркбрлАркПрккрлА (ркбрк╛ркИ-ркПркорлЛркирк┐ркпрко рклрлЛрк╕рлНрклрлЗркЯ)",
        "Urea": "ркпрлБрк░рк┐ркпрк╛"
    },
    "kn": {
        "10-26-26": "10-26-26 (р▓ир│Ир▓Яр│Нр▓░р│Лр▓Ьр▓ир│Н, р▓лр▓╛р▓╕р│Нр▓лрж░рж╛рж╕)",
        "14-35-14": "14-35-14 (р▓╣р│Жр▓Ър│Нр▓Ър│Б р▓лр▓╛р▓╕р│Нр▓лр▓░р▓╕р│Н)",
        "17-17-17": "17-17-17 (р▓╕р▓ор▓др│Лр▓▓р▓┐р▓д р▓░р▓╕р▓Чр│Кр▓мр│Нр▓мр▓░)",
        "20-20": "20-20 (р▓╕р▓ор▓др│Лр▓▓р▓┐р▓д р▓░р▓╕р▓Чр│Кр▓мр│Нр▓мр▓░)",
        "28-28": "28-28 (р▓╣р│Жр▓Ър│Нр▓Ър│Б р▓╢р▓Хр│Нр▓др▓┐)",
        "DAP": "р▓бр▓┐р▓Ор▓кр▓┐ (р▓бр│И-р▓Ер▓ор│Лр▓ир▓┐р▓пр▓ор│Н р▓лр▓╛р▓╕р│Нр▓лр│Зр▓Яр│Н)",
        "Urea": "р▓пр│Вр▓░р▓┐р▓пр▓╛"
    },
    "ml": {
        "10-26-26": "10-26-26 (р┤ир╡Ир┤Яр╡Нр┤░р┤Ьр╡╗, р┤лр╡Лр┤╕р╡Нр┤лр┤▒р┤╕р╡Н)",
        "14-35-14": "14-35-14 (р┤Йр┤пр╡╝р┤ир╡Нр┤и р┤лр╡Лр┤╕р╡Нр┤лр┤▒р┤╕р╡Н)",
        "17-17-17": "17-17-17 (р┤╕р┤ор┤ир╡Нр┤╡р┤┐р┤д р┤╡р┤│р┤В)",
        "20-20": "20-20 (р┤╕р┤ор┤ир╡Нр┤╡р┤┐р┤д р┤╡р┤│р┤В)",
        "28-28": "28-28 (р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤╢р┤Хр╡Нр┤др┤┐)",
        "DAP": "р┤бр┤┐р┤Ор┤кр┤┐ (р┤бр╡И-р┤Ер┤ор╡Лр┤гр┤┐р┤пр┤В р┤лр╡Лр┤╕р╡Нр┤лр╡Зр┤▒р╡Нр┤▒р╡Н)",
        "Urea": "р┤пр╡Вр┤▒р┤┐р┤п"
    },
    "mr": {
        "10-26-26": "10-26-26 (рдирд╛рдпрдЯреНрд░реЛрдЬрди, рдлреЙрд╕реНрдлрд░рд╕)",
        "14-35-14": "14-35-14 (рдЙрдЪреНрдЪ рдлреЙрд╕реНрдлрд░рд╕)",
        "17-17-17": "17-17-17 (рд╕рдВрддреБрд▓рд┐рдд рдЦрдд)",
        "20-20": "20-20 (рд╕рдВрддреБрд▓рд┐рдд рдЦрдд)",
        "28-28": "28-28 (рдЕрдзрд┐рдХ рд╢рдХреНрддреА)",
        "DAP": "рдбреАрдПрдкреА (рдбрд╛рдп-рдЕрдореЛрдирд┐рдпрдо рдлреЙрд╕реНрдлреЗрдЯ)",
        "Urea": "рдпреБрд░рд┐рдпрд╛"
    },
    "ne": {
        "10-26-26": "10-26-26 (рдирд╛рдЗрдЯреНрд░реЛрдЬрди, рдлрд╕реНрдлреЛрд░рд╕)",
        "14-35-14": "14-35-14 (рдзреЗрд░реИ рдлрд╕реНрдлреЛрд░рд╕)",
        "17-17-17": "17-17-17 (рд╕рдиреНрддреБрд▓рд┐рдд рдорд▓)",
        "20-20": "20-20 (рд╕рдиреНрддреБрд▓рд┐рдд рдорд▓)",
        "28-28": "28-28 (рдмрдвреА рд╢рдХреНрддрд┐)",
        "DAP": "DAP (рдбрд╛рдИ-рдЕрдореЛрдирд┐рдпрдо рдлрд╕реНрдлреЗрдЯ)",
        "Urea": "рдпреБрд░рд┐рдпрд╛"
    },
    "or": {
        "10-26-26": "10-26-26 (рмирм╛рмЗрмЯрнНрм░рнЛрмЬрнЗрмирнН, рмлрм╕рнНрмлрнЛрм░рм╕рнН)",
        "14-35-14": "14-35-14 (рмЙрмЪрнНрмЪ рмлрм╕рнНрмлрнЛрм░рм╕рнН)",
        "17-17-17": "17-17-17 (рм╕рмормдрнЛрм│рм┐рмд рмЙрм░рнНрммрм░рмХ)",
        "20-20": "20-20 (рм╕рмормдрнЛрм│рм┐рмд рмЙрм░рнНрммрм░рмХ)",
        "28-28": "28-28 (рмЕрмзрм┐рмХ рм╢рмХрнНрмдрм┐)",
        "DAP": "рмбрм┐рмПрмкрм┐ (рмбрм╛рмЗ-рмЕрморнЛрмирм┐рмЕрморнН рмлрм╕рнНрмлрнЗрмЯрнН)",
        "Urea": "рнЯрнБрм░рм┐рмЖ"
    },
    "pa": {
        "10-26-26": "10-26-26 (риири╛риИриЯрйНри░рйЛриЬрии, рилри╛ри╕рилрйЛри░ри╕)",
        "14-35-14": "14-35-14 (ри╡ризрйЗри░рйЗ рилри╛ри╕рилрйЛри░ри╕)",
        "17-17-17": "17-17-17 (ри╕рй░ридрйБри▓ри┐рид риЦри╛риж)",
        "20-20": "20-20 (ри╕рй░ридрйБри▓ри┐рид риЦри╛риж)",
        "28-28": "28-28 (ри╡рй▒риз ридри╛риХрид)",
        "DAP": "рибрйАриПрикрйА (рибри╛риИ-риЕриорйЛриири┐риЕрио рилри╛ри╕рилрйЗриЯ)",
        "Urea": "рипрйВри░рйАриЖ"
    },
    "ta": {
        "10-26-26": "10-26-26 (роирпИроЯрпНро░роЬройрпН, рокро╛ро╕рпНрокро░ро╕рпН)",
        "14-35-14": "14-35-14 (роЙропро░рпН рокро╛ро╕рпНрокро░ро╕рпН)",
        "17-17-17": "17-17-17 (роЪроороиро┐ро▓рпИ роЙро░роорпН)",
        "20-20": "20-20 (роЪроороиро┐ро▓рпИ роЙро░роорпН)",
        "28-28": "28-28 (роЕродро┐роХ роЪроХрпНродро┐)",
        "DAP": "DAP (роЯрпИ-роЕроорпЛройро┐ропроорпН рокро╛ро╕рпНрокрпЗроЯрпН)",
        "Urea": "ропрпВро░ро┐ропро╛"
    },
    "te": {
        "10-26-26": "10-26-26 (р░ир▒Ир░Яр▒Нр░░р▒Лр░Ьр░ир▒Н, р░лр░╛р░╕р▒Нр░лр░░р░╕р▒Н)",
        "14-35-14": "14-35-14 (р░Ер░зр░┐р░Х р░лр░╛р░╕р▒Нр░лр░░р░╕р▒Н)",
        "17-17-17": "17-17-17 (р░╕р░ор░др▒Бр░▓р▒Нр░п р░Ор░░р▒Бр░╡р▒Б)",
        "20-20": "20-20 (р░╕р░ор░др▒Бр░▓р▒Нр░п р░Ор░░р▒Бр░╡р▒Б)",
        "28-28": "28-28 (р░Ер░зр░┐р░Х р░╢р░Хр▒Нр░др░┐)",
        "DAP": "р░бр░┐р░Ор░кр░┐ (р░бр▒И-р░Ер░ор▒Лр░ир░┐р░пр░В р░лр░╛р░╕р▒Нр░лр▒Зр░Яр▒Н)",
        "Urea": "р░пр▒Вр░░р░┐р░пр░╛"
    },
    "ur": {
        "10-26-26": "10-26-26 (┘Ж╪з╪ж┘╣╪▒┘И╪м┘Ж╪М ┘Б╪з╪│┘Б┘И╪▒╪│)",
        "14-35-14": "14-35-14 (╪▓█М╪з╪п█Б ┘Б╪з╪│┘Б┘И╪▒╪│)",
        "17-17-17": "17-17-17 (┘Е╪к┘И╪з╪▓┘Ж ┌й┌╛╪з╪п)",
        "20-20": "20-20 (┘Е╪к┘И╪з╪▓┘Ж ┌й┌╛╪з╪п)",
        "28-28": "28-28 (╪▓█М╪з╪п█Б ╪╖╪з┘В╪к)",
        "DAP": "┌И█М ╪з█Т ┘╛█М (┌И╪з╪ж█М ╪з┘Е┘И┘Ж█М┘Е ┘Б╪з╪│┘Б█М┘╣)",
        "Urea": "█М┘И╪▒█М╪з"
    }
}

    fertilizer_msg_dict = {
    "en": "тЬЕ Recommended Fertilizer: {}",
    "hi": "тЬЕ рдЕрдиреБрд╢рдВрд╕рд┐рдд рдЙрд░реНрд╡рд░рдХ: {}",
    "bn": "тЬЕ ржкрзНрж░рж╕рзНрждрж╛ржмрж┐ржд рж╕рж╛рж░: {}",
    "gu": "тЬЕ ркнрк▓рк╛ркоркг ркХрк░рк╛ркпрлЗрк▓ ркЦрк╛ркдрк░: {}",
    "kn": "тЬЕ р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Б р▓ор▓╛р▓бр▓┐р▓ж р▓╕р▓╕р│Нр▓пр▓╛р▓╣р▓╛р▓░: {}",
    "ml": "тЬЕ р┤╢р╡Бр┤кр┤╛р╡╝р┤╢ р┤Ър╡Жр┤пр╡Нр┤д р┤╡р┤│р┤В: {}",
    "mr": "тЬЕ рд╢рд┐рдлрд╛рд░рд╕ рдХреЗрд▓реЗрд▓реЗ рдЦрдд: {}",
    "ne": "тЬЕ рд╕рд┐рдлрд╛рд░рд┐рд╕ рдЧрд░рд┐рдПрдХреЛ рдорд▓: {}",
    "or": "тЬЕ рм╕рнБрмкрм╛рм░рм┐рм╕ рмЙрм░рнНрммрм░рмХ: {}",
    "pa": "тЬЕ ри╕ри┐рилри╝ри╛ри░ри╕ри╝ риХрйАридрйА риЦри╛риж: {}",
    "ta": "тЬЕ рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпНроЯ роЙро░роорпН: {}",
    "te": "тЬЕ р░╕р░┐р░лр░╛р░░р░╕р▒Б р░Ър▒Зр░╕р░┐р░и р░Ор░░р▒Бр░╡р▒Б: {}",
    "ur": "тЬЕ ╪к╪м┘И█М╪▓ ┌й╪▒╪п█Б ┌й┌╛╪з╪п: {}"
}

    # ЁЯФШ Manual prediction (via button)
    if st.button(translate_text("Recommend Fertilizer", dest=lang_code)):
        fert_result = predict_fertilizer_simple(N, P, K, selected_crop)

        if fert_result:
            # Get the translated fertilizer name
            translated_name = fertilizer_dict.get(lang_code, {}).get(fert_result, fert_result)

            # Get the message format for the language
            message_template = fertilizer_msg_dict.get(lang_code, fertilizer_msg_dict["en"])

            # Display final message
            st.success(message_template.format(translated_name))


    # тЬЕ Auto-predict if all values are present (voice or direct input)
    # тЬЕ Only auto-predict if voice input triggered it
    elif st.session_state.get("fertilizer_predicted_by_voice", False):
        st.session_state.pop("fertilizer_predicted_by_voice", None)  # prevent rerun

        fert_result = predict_fertilizer_simple(N, P, K, selected_crop)

        if fert_result:
            if lang_code == 'hi':
                fert_hi = fertilizer_dict.get(fert_result, fert_result)
                st.sidebar.success(f"тЬЕ рдЕрдиреБрд╢рдВрд╕рд┐рдд рдЙрд░реНрд╡рд░рдХ: {fert_hi}")
            else:
                st.sidebar.success(f"ЁЯМ┐ Recommended Fertilizer: {fert_result}")


                
if __name__ == "__main__":
    main()

    # --- Footer ---
st.markdown("""
<style>
.footer {
    position: fixed;
    bottom: 0;
    width: 75%;
    background-color: transparent;
    padding: 10px 0;
    text-align: center;
    color: white;
    z-index: 100;
}
</style>

<div class="footer">
    Made with тЭд by Team AnnDoot | ┬й 2025
</div>
""", unsafe_allow_html=True)
# === Voice Input Support with Field Mapping ===
import speech_recognition as sr
import re
import speech_recognition as sr

def recognize_voice_command():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        st.info("ЁЯОд Listening for voice input... Please speak clearly.")
        try:
            audio = recognizer.listen(source, timeout=100)
            st.info("ЁЯФД Recognizing...")
            command = recognizer.recognize_google(audio)
            st.success(f"ЁЯЧгя╕П You said: {command}")
            return command
        except sr.UnknownValueError:
            st.warning("Sorry, could not understand the audio.")
        except sr.RequestError:
            st.error("Could not request results from Google Speech Recognition service.")
        except Exception as e:
            st.error(f"Voice input error: {e}")
    return ""

def recognize_voice_command():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        st.info("ЁЯОд Listening for voice input... Please speak clearly.")
        try:
            audio = recognizer.listen(source, timeout=100)
            st.info("ЁЯФД Recognizing...")
            command = recognizer.recognize_google(audio)
            st.success(f"ЁЯЧгя╕П You said: {command}")
            return command
        except sr.UnknownValueError:
            st.warning("Sorry, could not understand the audio.")
        except sr.RequestError:
            st.error("Could not request results from Google Speech Recognition service.")
        except Exception as e:
            st.error(f"Voice input error: {e}")
    return ""
    

def parse_voice_input(command):
    fields = {
        "nitrogen": "nitrogen_input",
        "phosphorus": "phosphorus_input",
        "potassium": "potassium_input",
        "tapman": "temperature_input",
        "humidity": "humidity_input",
        "ph": "ph_input",
        "varsha": "rainfall_input",
        "rainfall":"rainfall_input",
        "nami": "humidity_input",
        "temperature": "temperature_input",
    }

    # Parse numeric fields from voice
    for key in fields:
        pattern = rf"{key}\s*([0-9]+(?:\.[0-9]+)?)"
        match = re.search(pattern, command.lower())
        if match:
            value = float(match.group(1))
            st.session_state[fields[key]] = value
            st.success(f"тЬЕ Set {key.title()} to {value}")

    # Crop recognition from voice
    crop_pattern = r"(?:crop\s+(?:is|should be|select)?\s*)(\w+)"
    crop_match = re.search(crop_pattern, command.lower())
    if crop_match:
        spoken_crop = crop_match.group(1).strip().lower()
        crop_options = crop_encoder.classes_.tolist()
        crop_display, crop_mapping = get_crop_display_and_mapping(crop_options, "en")
        for display_crop in crop_display:
            if display_crop.lower() == spoken_crop:
                st.session_state["selected_crop_display"] = display_crop
                st.success(f"ЁЯМ▒ Crop set to: {display_crop}")
                break
        else:
            st.warning(f"тЪая╕П Could not match crop '{spoken_crop}' to crop list.")

    # --- Auto Predict Crop ---
    if st.session_state.get("nav") == "Crop Recommendation":
        required = ["nitrogen_input", "phosphorus_input", "potassium_input", "temperature_input", "humidity_input", "ph_input", "rainfall_input"]
        if all(var in st.session_state for var in required):
            result = predict_crop(
                st.session_state["nitrogen_input"],
                st.session_state["phosphorus_input"],
                st.session_state["potassium_input"],
                st.session_state["temperature_input"],
                st.session_state["humidity_input"],
                st.session_state["ph_input"],
                st.session_state["rainfall_input"],
                st.session_state.get("lang_code", "en")
            )
            if result:
                st.success(f"ЁЯМ╛ {result}")


# Voice and Assistant in Sidebar
with st.sidebar:
    if st.button("ЁЯОд Voice Command", key="sidebar_voice"):
        voice_command = recognize_voice_command()
        if voice_command:
            st.session_state['voice_command'] = voice_command
            parse_voice_input(voice_command)

    if st.button("ЁЯза Open AI Assistant", key="sidebar_ai_assistant"):
        st.session_state['show_ai_assistant'] = True

def parse_voice_input(command):
    fields = {
        "nitrogen": "nitrogen_input",
        "phosphorus": "phosphorus_input",
        "potassium": "potassium_input",
    }

    # Handle N, P, K
    for key in fields:
        pattern = rf"{key}\s*([0-9]+(?:\.[0-9]+)?)"
        match = re.search(pattern, command.lower())
        if match:
            st.session_state[fields[key]] = float(match.group(1))
            st.success(f"тЬЕ Set {key.title()} to {match.group(1)}")
        
    # --- Fertilizer Recommendation Auto-Predict ---
if st.session_state.get("nav") == "Fertilizer Recommendation":
    required = [
        "nitrogen_input", "phosphorus_input", "potassium_input", "selected_crop_display"
    ]
    if all(key in st.session_state for key in required):
        crop_options = crop_encoder.classes_.tolist()
        crop_display, crop_mapping = get_crop_display_and_mapping(crop_options, "en")
        selected_crop_display = st.session_state["selected_crop_display"]
        selected_crop = crop_mapping[selected_crop_display]

        fert_result = predict_fertilizer_simple(
            st.session_state["nitrogen_input"],
            st.session_state["phosphorus_input"],
            st.session_state["potassium_input"],
            selected_crop
        )

        if fert_result:
            st.session_state["fertilizer_predicted_by_voice"] = True  # тЬЕ Flag prediction source
            fert_dict_hi = {
                "Urea": "рдпреВрд░рд┐рдпрд╛", "DAP": "рдбреАрдПрдкреА",
                "14-35-14": "14-35-14 (рдлреЙрд╕реНрдлреЛрд░рд╕)",
                "10-26-26": "10-26-26", "20-20": "20-20",
                "28-28": "28-28", "17-17-17": "17-17-17"
            }
            if lang_code == "hi":
                st.sidebar.success(f"тЬЕ рдЕрдиреБрд╢рдВрд╕рд┐рдд рдЙрд░реНрд╡рд░рдХ: {fert_dict_hi.get(fert_result, fert_result)}")
            else:
                st.sidebar.success(f"ЁЯМ┐ Recommended Fertilizer: {fert_result}")

